# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015-2021, Rapptz & 2021-present, Pycord Development
# This file is distributed under the same license as the Pycord package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Pycord 2.1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-08-29 10:14+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../../api.rst:4
msgid "API Reference"
msgstr "APIリファレンス"

#: ../../api.rst:6
msgid "The following section outlines the API of Pycord."
msgstr "ここではPycordのAPIの概要を説明します。"

#: ../../api.rst:10
msgid ""
"This module uses the Python logging module to log diagnostic and errors "
"in an output independent way.  If the logging module is not configured, "
"these logs will not be output anywhere.  See :ref:`logging_setup` for "
"more information on how to set up and use the logging module with Pycord."
msgstr ""

#: ../../api.rst:17
msgid "Version Related Info"
msgstr ""

#: ../../api.rst:19
msgid ""
"There are two main ways to query version information about the library. "
"For guarantees, check :ref:`version_guarantees`."
msgstr ""

#: ../../api.rst:23
msgid "A named tuple that is similar to :obj:`py:sys.version_info`."
msgstr ""

#: ../../api.rst:25
msgid ""
"Just like :obj:`py:sys.version_info` the valid values for "
"``releaselevel`` are 'alpha', 'beta', 'candidate' and 'final'."
msgstr ""

#: ../../api.rst:30
msgid ""
"A string representation of the version. e.g. ``'1.0.0rc1'``. This is "
"based off of :pep:`440`."
msgstr ""

#: ../../api.rst:34
msgid "Clients"
msgstr ""

#: ../../api.rst:37
msgid "Client"
msgstr ""

#: discord.client.Client:1 of
msgid ""
"Represents a client connection that connects to Discord. This class is "
"used to interact with the Discord WebSocket and API."
msgstr ""

#: discord.client.Client:4 of
msgid "A number of options can be passed to the :class:`Client`."
msgstr ""

#: ../../api.rst discord.ApplicationContext.defer
#: discord.ApplicationContext.edit discord.ApplicationContext.send_followup
#: discord.ApplicationContext.send_modal
#: discord.ApplicationContext.send_response discord.abc.Connectable.connect
#: discord.abc.GuildChannel.clone discord.abc.GuildChannel.create_invite
#: discord.abc.GuildChannel.delete discord.abc.GuildChannel.move
#: discord.abc.GuildChannel.overwrites_for
#: discord.abc.GuildChannel.permissions_for
#: discord.abc.GuildChannel.set_permissions
#: discord.abc.Messageable.fetch_message discord.abc.Messageable.history
#: discord.abc.Messageable.send discord.activity.Game
#: discord.asset.Asset.replace discord.asset.Asset.with_format
#: discord.asset.Asset.with_size discord.asset.Asset.with_static_format
#: discord.asset.AssetMixin.save discord.automod.AutoModRule.delete
#: discord.automod.AutoModRule.edit
#: discord.bot.ApplicationCommandMixin.add_application_command
#: discord.bot.ApplicationCommandMixin.create_group
#: discord.bot.ApplicationCommandMixin.get_application_command
#: discord.bot.ApplicationCommandMixin.get_application_context
#: discord.bot.ApplicationCommandMixin.get_autocomplete_context
#: discord.bot.ApplicationCommandMixin.get_desynced_commands
#: discord.bot.ApplicationCommandMixin.group
#: discord.bot.ApplicationCommandMixin.invoke_application_command
#: discord.bot.ApplicationCommandMixin.process_application_commands
#: discord.bot.ApplicationCommandMixin.register_command
#: discord.bot.ApplicationCommandMixin.register_commands
#: discord.bot.ApplicationCommandMixin.remove_application_command
#: discord.bot.ApplicationCommandMixin.sync_commands
#: discord.bot.BotBase.add_check discord.bot.BotBase.add_listener
#: discord.bot.BotBase.after_invoke discord.bot.BotBase.before_invoke
#: discord.bot.BotBase.is_owner discord.bot.BotBase.remove_check
#: discord.bot.BotBase.remove_listener discord.channel.CategoryChannel.clone
#: discord.channel.CategoryChannel.edit discord.channel.CategoryChannel.move
#: discord.channel.DMChannel.get_partial_message
#: discord.channel.DMChannel.permissions_for
#: discord.channel.ForumChannel.create_thread
#: discord.channel.GroupChannel.permissions_for
#: discord.channel.PartialMessageable.get_partial_message
#: discord.channel.StageChannel.clone
#: discord.channel.StageChannel.create_instance
#: discord.channel.StageChannel.edit discord.channel.TextChannel.create_thread
#: discord.channel.VocalGuildChannel.permissions_for
#: discord.channel.VoiceChannel.clone
#: discord.channel.VoiceChannel.create_activity_invite
#: discord.channel.VoiceChannel.create_webhook
#: discord.channel.VoiceChannel.delete_messages
#: discord.channel.VoiceChannel.edit
#: discord.channel.VoiceChannel.get_partial_message
#: discord.channel.VoiceChannel.purge
#: discord.channel._TextChannel.archived_threads
#: discord.channel._TextChannel.clone
#: discord.channel._TextChannel.create_webhook
#: discord.channel._TextChannel.delete_messages
#: discord.channel._TextChannel.edit discord.channel._TextChannel.follow
#: discord.channel._TextChannel.get_partial_message
#: discord.channel._TextChannel.get_thread
#: discord.channel._TextChannel.permissions_for
#: discord.channel._TextChannel.purge discord.client.Client
#: discord.client.Client.add_view discord.client.Client.before_identify_hook
#: discord.client.Client.change_presence discord.client.Client.connect
#: discord.client.Client.create_dm discord.client.Client.create_guild
#: discord.client.Client.delete_invite discord.client.Client.fetch_application
#: discord.client.Client.fetch_guild discord.client.Client.fetch_guilds
#: discord.client.Client.fetch_invite
#: discord.client.Client.fetch_stage_instance
#: discord.client.Client.fetch_template discord.client.Client.fetch_user
#: discord.client.Client.fetch_widget discord.client.Client.get_channel
#: discord.client.Client.get_emoji discord.client.Client.get_guild
#: discord.client.Client.get_message discord.client.Client.get_or_fetch_user
#: discord.client.Client.get_partial_messageable
#: discord.client.Client.get_stage_instance discord.client.Client.get_user
#: discord.client.Client.login discord.client.Client.wait_for
#: discord.cog.Cog.bot_check discord.cog.Cog.bot_check_once
#: discord.cog.Cog.cog_after_invoke discord.cog.Cog.cog_before_invoke
#: discord.cog.Cog.cog_check discord.cog.Cog.cog_command_error
#: discord.cog.Cog.listener discord.cog.CogMixin.add_cog
#: discord.cog.CogMixin.get_cog discord.cog.CogMixin.load_extension
#: discord.cog.CogMixin.load_extensions discord.cog.CogMixin.reload_extension
#: discord.cog.CogMixin.remove_cog discord.cog.CogMixin.unload_extension
#: discord.colour.Colour.embed_background discord.colour.Colour.random
#: discord.commands.context.ApplicationContext.delete
#: discord.commands.context.ApplicationContext.invoke
#: discord.commands.core.ApplicationCommand.after_invoke
#: discord.commands.core.ApplicationCommand.before_invoke
#: discord.commands.core.ApplicationCommand.error
#: discord.commands.core.ApplicationCommand.get_cooldown_retry_after
#: discord.commands.core.ApplicationCommand.is_on_cooldown
#: discord.commands.core.ApplicationCommand.reset_cooldown
#: discord.commands.core.SlashCommandGroup.create_subgroup
#: discord.commands.core.SlashCommandGroup.subgroup
#: discord.commands.core.application_command
#: discord.commands.options.ThreadOption
#: discord.commands.permissions.default_permissions
#: discord.embeds.Embed.add_field discord.embeds.Embed.append_field
#: discord.embeds.Embed.from_dict discord.embeds.Embed.insert_field_at
#: discord.embeds.Embed.remove_field discord.embeds.Embed.set_author
#: discord.embeds.Embed.set_field_at discord.embeds.Embed.set_footer
#: discord.embeds.Embed.set_image discord.embeds.Embed.set_thumbnail
#: discord.embeds.EmbedField.from_dict discord.emoji.Emoji.delete
#: discord.emoji.Emoji.edit discord.flags.MemberCacheFlags.from_intents
#: discord.guild.Guild.audit_logs discord.guild.Guild.ban
#: discord.guild.Guild.bans discord.guild.Guild.change_voice_state
#: discord.guild.Guild.chunk discord.guild.Guild.create_auto_moderation_rule
#: discord.guild.Guild.create_custom_emoji
#: discord.guild.Guild.create_forum_channel
#: discord.guild.Guild.create_integration discord.guild.Guild.create_role
#: discord.guild.Guild.create_scheduled_event
#: discord.guild.Guild.create_stage_channel discord.guild.Guild.create_sticker
#: discord.guild.Guild.create_template discord.guild.Guild.create_text_channel
#: discord.guild.Guild.create_voice_channel discord.guild.Guild.delete_emoji
#: discord.guild.Guild.delete_sticker discord.guild.Guild.edit
#: discord.guild.Guild.edit_role_positions
#: discord.guild.Guild.edit_welcome_screen discord.guild.Guild.edit_widget
#: discord.guild.Guild.estimate_pruned_members discord.guild.Guild.fetch_ban
#: discord.guild.Guild.fetch_emoji discord.guild.Guild.fetch_member
#: discord.guild.Guild.fetch_members discord.guild.Guild.fetch_scheduled_event
#: discord.guild.Guild.fetch_scheduled_events discord.guild.Guild.fetch_sticker
#: discord.guild.Guild.get_channel discord.guild.Guild.get_channel_or_thread
#: discord.guild.Guild.get_member discord.guild.Guild.get_member_named
#: discord.guild.Guild.get_role discord.guild.Guild.get_scheduled_event
#: discord.guild.Guild.get_stage_instance discord.guild.Guild.get_thread
#: discord.guild.Guild.kick discord.guild.Guild.prune_members
#: discord.guild.Guild.query_members discord.guild.Guild.set_mfa_required
#: discord.guild.Guild.unban discord.integrations.Integration.delete
#: discord.integrations.StreamIntegration.edit
#: discord.interactions.Interaction.delete_original_message
#: discord.interactions.Interaction.edit_original_message
#: discord.interactions.InteractionMessage.delete
#: discord.interactions.InteractionMessage.edit
#: discord.interactions.InteractionResponse.defer
#: discord.interactions.InteractionResponse.edit_message
#: discord.interactions.InteractionResponse.send_autocomplete_result
#: discord.interactions.InteractionResponse.send_message
#: discord.interactions.InteractionResponse.send_modal
#: discord.invite.Invite.delete discord.invite.Invite.set_scheduled_event
#: discord.member.Member.add_roles discord.member.Member.edit
#: discord.member.Member.get_role discord.member.Member.mentioned_in
#: discord.member.Member.move_to discord.member.Member.remove_roles
#: discord.member.Member.remove_timeout discord.member.Member.timeout
#: discord.member.Member.timeout_for discord.message.Attachment.read
#: discord.message.Attachment.save discord.message.Attachment.to_file
#: discord.message.Message.add_reaction discord.message.Message.clear_reaction
#: discord.message.Message.create_thread discord.message.Message.delete
#: discord.message.Message.edit discord.message.Message.pin
#: discord.message.Message.remove_reaction discord.message.Message.to_reference
#: discord.message.Message.unpin discord.message.MessageReference.from_message
#: discord.message.PartialMessage.edit discord.opus.load_opus
#: discord.partial_emoji.PartialEmoji.from_str
#: discord.permissions.PermissionOverwrite
#: discord.permissions.PermissionOverwrite.update
#: discord.permissions.Permissions.update discord.player.FFmpegOpusAudio
#: discord.player.FFmpegOpusAudio.from_probe
#: discord.player.FFmpegOpusAudio.probe discord.player.FFmpegPCMAudio
#: discord.player.PCMVolumeTransformer discord.reaction.Reaction.remove
#: discord.reaction.Reaction.users discord.role.Role.delete
#: discord.role.Role.edit discord.scheduled_events.ScheduledEvent.cancel
#: discord.scheduled_events.ScheduledEvent.complete
#: discord.scheduled_events.ScheduledEvent.edit
#: discord.scheduled_events.ScheduledEvent.start
#: discord.scheduled_events.ScheduledEvent.subscribers
#: discord.shard.AutoShardedClient.change_presence
#: discord.shard.AutoShardedClient.connect discord.sinks.core.Filters
#: discord.stage_instance.StageInstance.delete
#: discord.stage_instance.StageInstance.edit
#: discord.sticker.GuildSticker.delete discord.sticker.GuildSticker.edit
#: discord.template.Template.create_guild discord.template.Template.edit
#: discord.threads.Thread.add_user discord.threads.Thread.archive
#: discord.threads.Thread.delete_messages discord.threads.Thread.edit
#: discord.threads.Thread.get_partial_message
#: discord.threads.Thread.permissions_for discord.threads.Thread.purge
#: discord.threads.Thread.remove_user discord.ui.button.Button
#: discord.ui.button.button discord.ui.input_text.InputText
#: discord.ui.item.Item.callback discord.ui.modal.Modal
#: discord.ui.modal.Modal.add_item discord.ui.modal.Modal.callback
#: discord.ui.modal.Modal.on_error discord.ui.modal.Modal.remove_item
#: discord.ui.select.Select discord.ui.select.Select.add_option
#: discord.ui.select.Select.append_option discord.ui.select.select
#: discord.ui.view.View discord.ui.view.View.add_item
#: discord.ui.view.View.disable_all_items discord.ui.view.View.enable_all_items
#: discord.ui.view.View.from_message discord.ui.view.View.interaction_check
#: discord.ui.view.View.on_check_failure discord.ui.view.View.on_error
#: discord.ui.view.View.remove_item discord.user.BaseUser.mentioned_in
#: discord.user.ClientUser.edit discord.utils.as_chunks
#: discord.utils.basic_autocomplete discord.utils.escape_markdown
#: discord.utils.escape_mentions discord.utils.filter_params discord.utils.find
#: discord.utils.format_dt discord.utils.generate_snowflake discord.utils.get
#: discord.utils.oauth_url discord.utils.remove_markdown
#: discord.utils.resolve_invite discord.utils.resolve_template
#: discord.utils.sleep_until discord.utils.snowflake_time
#: discord.utils.time_snowflake discord.voice_client.VoiceClient.move_to
#: discord.voice_client.VoiceClient.play
#: discord.voice_client.VoiceClient.send_audio_packet
#: discord.voice_client.VoiceClient.start_recording
#: discord.voice_client.VoiceClient.unpack_audio
#: discord.voice_client.VoiceProtocol
#: discord.voice_client.VoiceProtocol.connect
#: discord.voice_client.VoiceProtocol.disconnect
#: discord.voice_client.VoiceProtocol.on_voice_server_update
#: discord.voice_client.VoiceProtocol.on_voice_state_update
#: discord.webhook.async_.Webhook.delete
#: discord.webhook.async_.Webhook.delete_message
#: discord.webhook.async_.Webhook.edit
#: discord.webhook.async_.Webhook.edit_message
#: discord.webhook.async_.Webhook.fetch
#: discord.webhook.async_.Webhook.fetch_message
#: discord.webhook.async_.Webhook.from_url
#: discord.webhook.async_.Webhook.partial discord.webhook.async_.Webhook.send
#: discord.webhook.async_.WebhookMessage.delete
#: discord.webhook.async_.WebhookMessage.edit
#: discord.webhook.sync.SyncWebhook.delete
#: discord.webhook.sync.SyncWebhook.delete_message
#: discord.webhook.sync.SyncWebhook.edit
#: discord.webhook.sync.SyncWebhook.edit_message
#: discord.webhook.sync.SyncWebhook.fetch
#: discord.webhook.sync.SyncWebhook.fetch_message
#: discord.webhook.sync.SyncWebhook.from_url
#: discord.webhook.sync.SyncWebhook.partial
#: discord.webhook.sync.SyncWebhook.send
#: discord.webhook.sync.SyncWebhookMessage.delete
#: discord.webhook.sync.SyncWebhookMessage.edit
#: discord.welcome_screen.WelcomeScreen.edit discord.widget.Widget.fetch_invite
#: of
msgid "パラメータ"
msgstr ""

#: discord.client.Client:6 of
msgid ""
"The maximum number of messages to store in the internal message cache. "
"This defaults to ``1000``. Passing in ``None`` disables the message "
"cache.  .. versionchanged:: 1.3     Allow disabling the message cache and"
" change the default size to ``1000``."
msgstr ""

#: discord.client.Client:6 of
msgid ""
"The maximum number of messages to store in the internal message cache. "
"This defaults to ``1000``. Passing in ``None`` disables the message "
"cache."
msgstr ""

#: discord.client.Client:9 of
msgid "Allow disabling the message cache and change the default size to ``1000``."
msgstr ""

#: discord.client.Client:12 of
msgid ""
"The :class:`asyncio.AbstractEventLoop` to use for asynchronous "
"operations. Defaults to ``None``, in which case the default event loop is"
" used via :func:`asyncio.get_event_loop()`."
msgstr ""

#: discord.client.Client:16 of
msgid "The connector to use for connection pooling."
msgstr ""

#: discord.client.Client:18 of
msgid "Proxy URL."
msgstr ""

#: discord.client.Client:20 of
msgid "An object that represents proxy HTTP Basic Authorization."
msgstr ""

#: discord.client.Client:22 of
msgid "Integer starting at ``0`` and less than :attr:`.shard_count`."
msgstr ""

#: discord.client.Client:24 of
msgid "The total number of shards."
msgstr ""

#: discord.Bot.application_id:1 discord.Client.application_id:1
#: discord.client.Client:26 of
msgid "The client's application ID."
msgstr ""

#: discord.client.Client:28 of
msgid ""
"The intents that you want to enable for the session. This is a way of "
"disabling and enabling certain gateway events from triggering and being "
"sent. If not given, defaults to a regularly constructed :class:`Intents` "
"class.  .. versionadded:: 1.5"
msgstr ""

#: discord.client.Client:28 of
msgid ""
"The intents that you want to enable for the session. This is a way of "
"disabling and enabling certain gateway events from triggering and being "
"sent. If not given, defaults to a regularly constructed :class:`Intents` "
"class."
msgstr ""

#: discord.client.Client:34 of
msgid ""
"Allows for finer control over how the library caches members. If not "
"given, defaults to cache as much as possible with the currently selected "
"intents.  .. versionadded:: 1.5"
msgstr ""

#: discord.client.Client:34 of
msgid ""
"Allows for finer control over how the library caches members. If not "
"given, defaults to cache as much as possible with the currently selected "
"intents."
msgstr ""

#: discord.client.Client:40 of
msgid ""
"Indicates if :func:`.on_ready` should be delayed to chunk all guilds at "
"start-up if necessary. This operation is incredibly slow for large "
"amounts of guilds. The default is ``True`` if :attr:`Intents.members` is "
"``True``.  .. versionadded:: 1.5"
msgstr ""

#: discord.client.Client:40 of
msgid ""
"Indicates if :func:`.on_ready` should be delayed to chunk all guilds at "
"start-up if necessary. This operation is incredibly slow for large "
"amounts of guilds. The default is ``True`` if :attr:`Intents.members` is "
"``True``."
msgstr ""

#: discord.client.Client:47 of
msgid "A status to start your presence with upon logging on to Discord."
msgstr ""

#: discord.client.Client:49 of
msgid "An activity to start your presence with upon logging on to Discord."
msgstr ""

#: discord.client.Client:51 of
msgid ""
"Control how the client handles mentions by default on every message sent."
"  .. versionadded:: 1.4"
msgstr ""

#: discord.client.Client:51 of
msgid "Control how the client handles mentions by default on every message sent."
msgstr ""

#: discord.client.Client:55 of
msgid ""
"The maximum numbers of seconds before timing out and restarting the "
"WebSocket in the case of not receiving a HEARTBEAT_ACK. Useful if "
"processing the initial packets take too long to the point of "
"disconnecting you. The default timeout is 60 seconds."
msgstr ""

#: discord.client.Client:60 of
msgid ""
"The maximum number of seconds to wait for the GUILD_CREATE stream to end "
"before preparing the member cache and firing READY. The default timeout "
"is 2 seconds.  .. versionadded:: 1.4"
msgstr ""

#: discord.client.Client:60 of
msgid ""
"The maximum number of seconds to wait for the GUILD_CREATE stream to end "
"before preparing the member cache and firing READY. The default timeout "
"is 2 seconds."
msgstr ""

#: discord.client.Client:65 of
msgid ""
"Whether to assume the system clock is unsynced. This applies to the "
"ratelimit handling code. If this is set to ``True``, the default, then "
"the library uses the time to reset a rate limit bucket given by Discord. "
"If this is ``False`` then your system clock is used to calculate how long"
" to sleep for. If this is set to ``False`` it is recommended to sync your"
" system clock to Google's NTP server.  .. versionadded:: 1.3"
msgstr ""

#: discord.client.Client:65 of
msgid ""
"Whether to assume the system clock is unsynced. This applies to the "
"ratelimit handling code. If this is set to ``True``, the default, then "
"the library uses the time to reset a rate limit bucket given by Discord. "
"If this is ``False`` then your system clock is used to calculate how long"
" to sleep for. If this is set to ``False`` it is recommended to sync your"
" system clock to Google's NTP server."
msgstr ""

#: discord.client.Client:73 of
msgid ""
"Whether to enable events that are useful only for debugging gateway "
"related information.  Right now this involves "
":func:`on_socket_raw_receive` and :func:`on_socket_raw_send`. If this is "
"``False`` then those events will not be dispatched (due to performance "
"considerations). To enable these events, this must be set to ``True``. "
"Defaults to ``False``.  .. versionadded:: 2.0"
msgstr ""

#: discord.client.Client:73 of
msgid ""
"Whether to enable events that are useful only for debugging gateway "
"related information."
msgstr ""

#: discord.client.Client:75 of
msgid ""
"Right now this involves :func:`on_socket_raw_receive` and "
":func:`on_socket_raw_send`. If this is ``False`` then those events will "
"not be dispatched (due to performance considerations). To enable these "
"events, this must be set to ``True``. Defaults to ``False``."
msgstr ""

#: discord.client.Client:84 of
msgid ""
"The WebSocket gateway the client is currently connected to. Could be "
"``None``."
msgstr ""

#: discord.client.Client:88 of
msgid "The event loop that the client uses for asynchronous operations."
msgstr ""

#: ../../api.rst ../../docstring discord.Activity.end
#: discord.Activity.large_image_text discord.Activity.large_image_url
#: discord.Activity.small_image_text discord.Activity.small_image_url
#: discord.Activity.start discord.AppInfo.cover_image discord.AppInfo.guild
#: discord.AppInfo.icon discord.ApplicationCommand.full_parent_name
#: discord.ApplicationCommand.qualified_name discord.ApplicationContext.author
#: discord.ApplicationContext.channel_id discord.ApplicationContext.cog
#: discord.ApplicationContext.followup discord.ApplicationContext.guild
#: discord.ApplicationContext.guild_id discord.ApplicationContext.guild_locale
#: discord.ApplicationContext.locale discord.ApplicationContext.message
#: discord.ApplicationContext.response discord.ApplicationContext.user
#: discord.ApplicationContext.voice_client
#: discord.ApplicationFlags.app_commands_badge
#: discord.ApplicationFlags.embedded
#: discord.ApplicationFlags.gateway_guild_members
#: discord.ApplicationFlags.gateway_guild_members_limited
#: discord.ApplicationFlags.gateway_message_content
#: discord.ApplicationFlags.gateway_message_content_limited
#: discord.ApplicationFlags.gateway_presence
#: discord.ApplicationFlags.gateway_presence_limited
#: discord.ApplicationFlags.group_dm_create
#: discord.ApplicationFlags.managed_emoji
#: discord.ApplicationFlags.rpc_has_connected
#: discord.ApplicationFlags.verification_pending_guild_limit discord.Asset.key
#: discord.Asset.url discord.AuditLogEntry.after discord.AuditLogEntry.before
#: discord.AuditLogEntry.category discord.AuditLogEntry.changes
#: discord.AuditLogEntry.created_at discord.AutoModRule.creator
#: discord.AutoModRule.exempt_roles discord.AutoModRule.guild
#: discord.AutoShardedClient.latency discord.AutoShardedClient.shards
#: discord.AutocompleteContext.cog discord.BaseActivity.created_at
#: discord.Bot.activity discord.Bot.allowed_mentions
#: discord.Bot.application_flags discord.Bot.application_id
#: discord.Bot.cached_messages discord.Bot.cogs discord.Bot.emojis
#: discord.Bot.extensions discord.Bot.guilds discord.Bot.intents
#: discord.Bot.latency discord.Bot.persistent_views
#: discord.Bot.private_channels discord.Bot.stickers discord.Bot.user
#: discord.Bot.users discord.Bot.voice_clients discord.CategoryChannel.category
#: discord.CategoryChannel.changed_roles discord.CategoryChannel.channels
#: discord.CategoryChannel.created_at discord.CategoryChannel.forum_channels
#: discord.CategoryChannel.jump_url discord.CategoryChannel.mention
#: discord.CategoryChannel.permissions_synced
#: discord.CategoryChannel.stage_channels discord.CategoryChannel.text_channels
#: discord.CategoryChannel.type discord.CategoryChannel.voice_channels
#: discord.ChannelFlags.pinned discord.Client.activity
#: discord.Client.allowed_mentions discord.Client.application_flags
#: discord.Client.application_id discord.Client.cached_messages
#: discord.Client.emojis discord.Client.guilds discord.Client.intents
#: discord.Client.latency discord.Client.persistent_views
#: discord.Client.private_channels discord.Client.stickers discord.Client.user
#: discord.Client.users discord.Client.voice_clients
#: discord.ClientUser.accent_color discord.ClientUser.accent_colour
#: discord.ClientUser.avatar discord.ClientUser.banner discord.ClientUser.color
#: discord.ClientUser.colour discord.ClientUser.created_at
#: discord.ClientUser.default_avatar discord.ClientUser.display_avatar
#: discord.ClientUser.display_name discord.ClientUser.jump_url
#: discord.ClientUser.mention discord.ClientUser.public_flags
#: discord.Cog.description discord.Cog.qualified_name discord.Colour.b
#: discord.Colour.g discord.Colour.r discord.CustomActivity.type
#: discord.DMChannel.created_at discord.DMChannel.jump_url
#: discord.DMChannel.type discord.DeletedReferencedMessage.channel_id
#: discord.DeletedReferencedMessage.guild_id
#: discord.DeletedReferencedMessage.id discord.Emoji.created_at
#: discord.Emoji.guild discord.Emoji.roles discord.Emoji.url
#: discord.ForumChannel.category discord.ForumChannel.changed_roles
#: discord.ForumChannel.created_at discord.ForumChannel.guidelines
#: discord.ForumChannel.jump_url discord.ForumChannel.members
#: discord.ForumChannel.mention discord.ForumChannel.permissions_synced
#: discord.ForumChannel.threads discord.ForumChannel.type discord.Game.end
#: discord.Game.start discord.Game.type discord.GroupChannel.created_at
#: discord.GroupChannel.icon discord.GroupChannel.jump_url
#: discord.GroupChannel.type discord.Guild.banner discord.Guild.bitrate_limit
#: discord.Guild.categories discord.Guild.channels discord.Guild.chunked
#: discord.Guild.created_at discord.Guild.default_role
#: discord.Guild.discovery_splash discord.Guild.emoji_limit
#: discord.Guild.filesize_limit discord.Guild.forum_channels discord.Guild.icon
#: discord.Guild.jump_url discord.Guild.large discord.Guild.me
#: discord.Guild.member_count discord.Guild.members discord.Guild.owner
#: discord.Guild.premium_subscriber_role discord.Guild.premium_subscribers
#: discord.Guild.public_updates_channel discord.Guild.roles
#: discord.Guild.rules_channel discord.Guild.scheduled_events
#: discord.Guild.self_role discord.Guild.shard_id discord.Guild.splash
#: discord.Guild.stage_channels discord.Guild.stage_instances
#: discord.Guild.sticker_limit discord.Guild.system_channel
#: discord.Guild.system_channel_flags discord.Guild.text_channels
#: discord.Guild.threads discord.Guild.voice_channels
#: discord.Guild.voice_client discord.GuildSticker.guild
#: discord.Intents.auto_moderation_configuration
#: discord.Intents.auto_moderation_execution discord.Intents.bans
#: discord.Intents.dm_messages discord.Intents.dm_reactions
#: discord.Intents.dm_typing discord.Intents.emojis
#: discord.Intents.emojis_and_stickers discord.Intents.guild_messages
#: discord.Intents.guild_reactions discord.Intents.guild_typing
#: discord.Intents.guilds discord.Intents.integrations discord.Intents.invites
#: discord.Intents.members discord.Intents.message_content
#: discord.Intents.messages discord.Intents.presences discord.Intents.reactions
#: discord.Intents.scheduled_events discord.Intents.typing
#: discord.Intents.voice_states discord.Intents.webhooks
#: discord.Interaction.app_permissions discord.Interaction.client
#: discord.Interaction.followup discord.Interaction.guild
#: discord.Interaction.permissions discord.Interaction.response
#: discord.Invite.id discord.Invite.url discord.Member.activity
#: discord.Member.color discord.Member.colour discord.Member.desktop_status
#: discord.Member.display_avatar discord.Member.display_name
#: discord.Member.guild_avatar discord.Member.guild_permissions
#: discord.Member.mention discord.Member.mobile_status
#: discord.Member.raw_status discord.Member.roles discord.Member.status
#: discord.Member.timed_out discord.Member.top_role discord.Member.voice
#: discord.Member.web_status discord.MemberCacheFlags.interaction
#: discord.MemberCacheFlags.joined discord.MemberCacheFlags.voice
#: discord.Message.clean_content discord.Message.created_at
#: discord.Message.jump_url discord.Message.raw_channel_mentions
#: discord.Message.raw_mentions discord.Message.raw_role_mentions
#: discord.Message.system_content discord.MessageFlags.crossposted
#: discord.MessageFlags.ephemeral
#: discord.MessageFlags.failed_to_mention_some_roles_in_thread
#: discord.MessageFlags.has_thread discord.MessageFlags.is_crossposted
#: discord.MessageFlags.loading discord.MessageFlags.source_message_deleted
#: discord.MessageFlags.suppress_embeds discord.MessageFlags.urgent
#: discord.MessageReference.cached_message discord.MessageReference.jump_url
#: discord.Object.created_at discord.Object.increment_id
#: discord.Object.process_id discord.Object.worker_id
#: discord.PCMVolumeTransformer.volume discord.PartialAppInfo.icon
#: discord.PartialEmoji.created_at discord.PartialEmoji.url
#: discord.PartialInviteChannel.created_at discord.PartialInviteChannel.mention
#: discord.PartialInviteGuild.banner discord.PartialInviteGuild.created_at
#: discord.PartialInviteGuild.icon discord.PartialInviteGuild.splash
#: discord.PartialMessage.created_at discord.PartialMessage.guild
#: discord.PartialMessage.jump_url discord.PartialWebhookGuild.icon
#: discord.Permissions.add_reactions discord.Permissions.administrator
#: discord.Permissions.attach_files discord.Permissions.ban_members
#: discord.Permissions.change_nickname discord.Permissions.connect
#: discord.Permissions.create_instant_invite
#: discord.Permissions.create_private_threads
#: discord.Permissions.create_public_threads discord.Permissions.deafen_members
#: discord.Permissions.embed_links discord.Permissions.external_emojis
#: discord.Permissions.external_stickers discord.Permissions.kick_members
#: discord.Permissions.manage_channels discord.Permissions.manage_emojis
#: discord.Permissions.manage_emojis_and_stickers
#: discord.Permissions.manage_events discord.Permissions.manage_guild
#: discord.Permissions.manage_messages discord.Permissions.manage_nicknames
#: discord.Permissions.manage_permissions discord.Permissions.manage_roles
#: discord.Permissions.manage_threads discord.Permissions.manage_webhooks
#: discord.Permissions.mention_everyone discord.Permissions.moderate_members
#: discord.Permissions.move_members discord.Permissions.mute_members
#: discord.Permissions.priority_speaker
#: discord.Permissions.read_message_history discord.Permissions.read_messages
#: discord.Permissions.request_to_speak discord.Permissions.send_messages
#: discord.Permissions.send_messages_in_threads
#: discord.Permissions.send_tts_messages discord.Permissions.speak
#: discord.Permissions.start_embedded_activities discord.Permissions.stream
#: discord.Permissions.use_application_commands
#: discord.Permissions.use_external_emojis
#: discord.Permissions.use_external_stickers
#: discord.Permissions.use_slash_commands
#: discord.Permissions.use_voice_activation discord.Permissions.view_audit_log
#: discord.Permissions.view_channel discord.Permissions.view_guild_insights
#: discord.PublicUserFlags.bot_http_interactions
#: discord.PublicUserFlags.bug_hunter
#: discord.PublicUserFlags.bug_hunter_level_2
#: discord.PublicUserFlags.discord_certified_moderator
#: discord.PublicUserFlags.early_supporter
#: discord.PublicUserFlags.early_verified_bot_developer
#: discord.PublicUserFlags.hypesquad discord.PublicUserFlags.hypesquad_balance
#: discord.PublicUserFlags.hypesquad_bravery
#: discord.PublicUserFlags.hypesquad_brilliance discord.PublicUserFlags.partner
#: discord.PublicUserFlags.premium_promo_dismissed
#: discord.PublicUserFlags.staff discord.PublicUserFlags.system
#: discord.PublicUserFlags.team_user discord.PublicUserFlags.verified_bot
#: discord.PublicUserFlags.verified_bot_developer discord.Role.color
#: discord.Role.colour discord.Role.created_at discord.Role.icon
#: discord.Role.members discord.Role.mention discord.Role.permissions
#: discord.ScheduledEvent.cover discord.ScheduledEvent.created_at
#: discord.ScheduledEvent.url discord.SelectOption.emoji
#: discord.ShardInfo.latency discord.Spotify.album
#: discord.Spotify.album_cover_url discord.Spotify.artist
#: discord.Spotify.artists discord.Spotify.color discord.Spotify.colour
#: discord.Spotify.created_at discord.Spotify.duration discord.Spotify.end
#: discord.Spotify.name discord.Spotify.party_id discord.Spotify.start
#: discord.Spotify.title discord.Spotify.track_id discord.Spotify.track_url
#: discord.Spotify.type discord.StageChannel.category
#: discord.StageChannel.changed_roles discord.StageChannel.created_at
#: discord.StageChannel.instance discord.StageChannel.jump_url
#: discord.StageChannel.listeners discord.StageChannel.members
#: discord.StageChannel.mention discord.StageChannel.moderators
#: discord.StageChannel.permissions_synced
#: discord.StageChannel.requesting_to_speak discord.StageChannel.speakers
#: discord.StageChannel.type discord.StageInstance.channel
#: discord.Sticker.created_at discord.StickerPack.banner
#: discord.StreamIntegration.expire_behavior discord.StreamIntegration.role
#: discord.Streaming.twitch_name discord.Streaming.type
#: discord.SyncWebhook.avatar discord.SyncWebhook.channel
#: discord.SyncWebhook.created_at discord.SyncWebhook.guild
#: discord.SyncWebhook.url
#: discord.SystemChannelFlags.guild_reminder_notifications
#: discord.SystemChannelFlags.join_notification_replies
#: discord.SystemChannelFlags.join_notifications
#: discord.SystemChannelFlags.premium_subscriptions discord.Team.icon
#: discord.Team.owner discord.Template.url discord.TextChannel.category
#: discord.TextChannel.changed_roles discord.TextChannel.created_at
#: discord.TextChannel.jump_url discord.TextChannel.members
#: discord.TextChannel.mention discord.TextChannel.permissions_synced
#: discord.TextChannel.threads discord.TextChannel.type discord.Thread.jump_url
#: discord.Thread.members discord.Thread.mention discord.Thread.owner
#: discord.Thread.parent discord.Thread.type discord.ThreadMember.thread
#: discord.User.accent_color discord.User.accent_colour discord.User.avatar
#: discord.User.banner discord.User.color discord.User.colour
#: discord.User.created_at discord.User.default_avatar
#: discord.User.display_avatar discord.User.display_name
#: discord.User.dm_channel discord.User.jump_url discord.User.mention
#: discord.User.mutual_guilds discord.User.public_flags
#: discord.VoiceChannel.category discord.VoiceChannel.changed_roles
#: discord.VoiceChannel.created_at discord.VoiceChannel.jump_url
#: discord.VoiceChannel.members discord.VoiceChannel.mention
#: discord.VoiceChannel.permissions_synced discord.VoiceChannel.type
#: discord.VoiceClient.average_latency discord.VoiceClient.guild
#: discord.VoiceClient.latency discord.VoiceClient.source
#: discord.VoiceClient.user discord.Webhook.avatar discord.Webhook.channel
#: discord.Webhook.created_at discord.Webhook.guild discord.Webhook.url
#: discord.WelcomeScreen.enabled discord.WelcomeScreen.guild
#: discord.Widget.created_at discord.Widget.invite_url discord.Widget.json_url
#: discord.WidgetChannel.created_at discord.WidgetChannel.mention
#: discord.WidgetMember.accent_color discord.WidgetMember.accent_colour
#: discord.WidgetMember.banner discord.WidgetMember.color
#: discord.WidgetMember.colour discord.WidgetMember.created_at
#: discord.WidgetMember.default_avatar discord.WidgetMember.display_avatar
#: discord.WidgetMember.display_name discord.WidgetMember.jump_url
#: discord.WidgetMember.mention discord.WidgetMember.public_flags
#: discord.abc.GuildChannel discord.abc.GuildChannel.category
#: discord.abc.GuildChannel.changed_roles discord.abc.GuildChannel.created_at
#: discord.abc.GuildChannel.jump_url discord.abc.GuildChannel.mention
#: discord.abc.GuildChannel.permissions_synced discord.abc.PrivateChannel
#: discord.abc.Snowflake discord.abc.User discord.abc.User.display_name
#: discord.abc.User.mention discord.activity.Activity
#: discord.activity.CustomActivity discord.activity.Game
#: discord.activity.Streaming discord.appinfo.AppInfo
#: discord.appinfo.PartialAppInfo discord.audit_logs.AuditLogEntry
#: discord.automod.AutoModRule discord.bot.Bot discord.channel.CategoryChannel
#: discord.channel.DMChannel discord.channel.ForumChannel
#: discord.channel.GroupChannel discord.channel.PartialMessageable
#: discord.channel.StageChannel discord.channel.TextChannel
#: discord.channel.VoiceChannel discord.client.Client discord.cog.CogMeta
#: discord.colour.Colour discord.commands.context.ApplicationContext
#: discord.commands.context.AutocompleteContext
#: discord.commands.core.MessageCommand discord.commands.core.SlashCommand
#: discord.commands.core.SlashCommandGroup discord.commands.core.UserCommand
#: discord.commands.options.Option discord.commands.options.OptionChoice
#: discord.components.ActionRow discord.components.Button
#: discord.components.Component discord.components.SelectMenu
#: discord.components.SelectOption discord.embeds.Embed
#: discord.embeds.EmbedField discord.emoji.Emoji
#: discord.errors.ApplicationCommandInvokeError discord.errors.ConnectionClosed
#: discord.errors.ExtensionError discord.errors.ExtensionFailed
#: discord.errors.ExtensionNotFound discord.errors.HTTPException
#: discord.errors.InteractionResponded discord.errors.PrivilegedIntentsRequired
#: discord.file.File discord.flags.ApplicationFlags discord.flags.ChannelFlags
#: discord.flags.Intents discord.flags.MemberCacheFlags
#: discord.flags.MessageFlags discord.flags.PublicUserFlags
#: discord.flags.SystemChannelFlags discord.guild.Guild
#: discord.integrations.BotIntegration discord.integrations.Integration
#: discord.integrations.IntegrationAccount
#: discord.integrations.IntegrationApplication
#: discord.integrations.StreamIntegration discord.interactions.Interaction
#: discord.interactions.MessageInteraction discord.invite.Invite
#: discord.invite.PartialInviteChannel discord.invite.PartialInviteGuild
#: discord.member.Member discord.member.VoiceState
#: discord.mentions.AllowedMentions discord.message.Attachment
#: discord.message.Message discord.message.MessageReference
#: discord.message.PartialMessage discord.object.Object discord.opus.OpusError
#: discord.partial_emoji.PartialEmoji discord.permissions.Permissions
#: discord.player.PCMAudio discord.raw_models.AutoModActionExecutionEvent
#: discord.raw_models.RawBulkMessageDeleteEvent
#: discord.raw_models.RawIntegrationDeleteEvent
#: discord.raw_models.RawMessageDeleteEvent
#: discord.raw_models.RawMessageUpdateEvent
#: discord.raw_models.RawReactionActionEvent
#: discord.raw_models.RawReactionClearEmojiEvent
#: discord.raw_models.RawReactionClearEvent
#: discord.raw_models.RawScheduledEventSubscription
#: discord.raw_models.RawThreadDeleteEvent discord.raw_models.RawTypingEvent
#: discord.reaction.Reaction discord.role.Role discord.role.RoleTags
#: discord.scheduled_events.ScheduledEvent
#: discord.scheduled_events.ScheduledEventLocation
#: discord.shard.AutoShardedClient discord.shard.ShardInfo
#: discord.stage_instance.StageInstance discord.sticker.GuildSticker
#: discord.sticker.StandardSticker discord.sticker.Sticker
#: discord.sticker.StickerItem discord.sticker.StickerPack discord.team.Team
#: discord.team.TeamMember discord.template.Template discord.threads.Thread
#: discord.threads.ThreadMember discord.ui.Button.custom_id
#: discord.ui.Button.disabled discord.ui.Button.emoji discord.ui.Button.label
#: discord.ui.Button.style discord.ui.Button.url discord.ui.Button.view
#: discord.ui.InputText.custom_id discord.ui.InputText.label
#: discord.ui.InputText.max_length discord.ui.InputText.min_length
#: discord.ui.InputText.placeholder discord.ui.InputText.required
#: discord.ui.InputText.style discord.ui.InputText.value discord.ui.Item.view
#: discord.ui.Modal.children discord.ui.Modal.custom_id discord.ui.Modal.title
#: discord.ui.Select.custom_id discord.ui.Select.disabled
#: discord.ui.Select.max_values discord.ui.Select.min_values
#: discord.ui.Select.options discord.ui.Select.placeholder
#: discord.ui.Select.values discord.ui.Select.view discord.ui.view.View
#: discord.user.ClientUser discord.user.User discord.voice_client.VoiceClient
#: discord.webhook.async_.PartialWebhookChannel
#: discord.webhook.async_.PartialWebhookGuild discord.webhook.async_.Webhook
#: discord.webhook.sync.SyncWebhook discord.welcome_screen.WelcomeScreen
#: discord.welcome_screen.WelcomeScreenChannel discord.widget.Widget
#: discord.widget.WidgetChannel discord.widget.WidgetMember of
msgid "type"
msgstr ""

#: discord.client.Client:90 discord.voice_client.VoiceClient:41 of
msgid ":class:`asyncio.AbstractEventLoop`"
msgstr ""

#: discord.client.Client.event:1 of
msgid "A decorator that registers an event to listen to."
msgstr ""

#: discord.client.Client.event:3 of
msgid ""
"You can find more info about the events on the :ref:`documentation below "
"<discord-api-events>`."
msgstr ""

#: discord.client.Client.event:5 of
msgid ""
"The events must be a :ref:`coroutine <coroutine>`, if not, "
":exc:`TypeError` is raised."
msgstr ""

#: discord.abc.GuildChannel.set_permissions:25
#: discord.abc.Messageable.history:6 discord.bot.BotBase.add_listener:9
#: discord.bot.BotBase.check:12 discord.bot.BotBase.check_once:18
#: discord.bot.BotBase.listen:8 discord.channel.VoiceChannel.purge:13
#: discord.channel._TextChannel.purge:13
#: discord.client.Client.change_presence:6 discord.client.Client.event:8
#: discord.client.Client.fetch_guilds:13 discord.client.Client.wait_for:22
#: discord.commands.options.Option:4
#: discord.commands.permissions.default_permissions:16
#: discord.commands.permissions.guild_only:5 discord.guild.Guild.audit_logs:6
#: discord.guild.Guild.bans:29 discord.guild.Guild.create_forum_channel:20
#: discord.guild.Guild.create_text_channel:20
#: discord.guild.Guild.fetch_members:26
#: discord.player.FFmpegOpusAudio.from_probe:7
#: discord.reaction.Reaction.users:7
#: discord.scheduled_events.ScheduledEvent.subscribers:12
#: discord.threads.Thread.purge:13 discord.utils.basic_autocomplete:10
#: discord.utils.filter_params:10 discord.utils.get:16
#: discord.welcome_screen.WelcomeScreen.edit:9 of
msgid "サンプル"
msgstr ""

#: discord.ApplicationContext.defer discord.ApplicationContext.edit
#: discord.ApplicationContext.send_followup
#: discord.ApplicationContext.send_modal
#: discord.ApplicationContext.send_response discord.Thread.category
#: discord.Thread.category_id discord.abc.Connectable.connect
#: discord.abc.GuildChannel.clone discord.abc.GuildChannel.create_invite
#: discord.abc.GuildChannel.delete discord.abc.GuildChannel.invites
#: discord.abc.GuildChannel.move discord.abc.GuildChannel.set_permissions
#: discord.abc.Messageable.can_send discord.abc.Messageable.fetch_message
#: discord.abc.Messageable.history discord.abc.Messageable.pins
#: discord.abc.Messageable.send discord.asset.Asset.replace
#: discord.asset.Asset.with_format discord.asset.Asset.with_size
#: discord.asset.Asset.with_static_format discord.asset.AssetMixin.read
#: discord.asset.AssetMixin.save discord.automod.AutoModRule.delete
#: discord.automod.AutoModRule.edit discord.bot.BotBase.after_invoke
#: discord.bot.BotBase.before_invoke discord.bot.BotBase.listen
#: discord.channel.CategoryChannel.clone discord.channel.CategoryChannel.edit
#: discord.channel.CategoryChannel.move
#: discord.channel.ForumChannel.create_thread
#: discord.channel.GroupChannel.leave discord.channel.StageChannel.clone
#: discord.channel.StageChannel.create_instance
#: discord.channel.StageChannel.edit
#: discord.channel.StageChannel.fetch_instance
#: discord.channel.TextChannel.create_thread discord.channel.VoiceChannel.clone
#: discord.channel.VoiceChannel.create_activity_invite
#: discord.channel.VoiceChannel.create_webhook
#: discord.channel.VoiceChannel.delete_messages
#: discord.channel.VoiceChannel.edit discord.channel.VoiceChannel.purge
#: discord.channel.VoiceChannel.webhooks
#: discord.channel._TextChannel.archived_threads
#: discord.channel._TextChannel.clone
#: discord.channel._TextChannel.create_webhook
#: discord.channel._TextChannel.delete_messages
#: discord.channel._TextChannel.edit discord.channel._TextChannel.follow
#: discord.channel._TextChannel.purge discord.channel._TextChannel.webhooks
#: discord.client.Client.add_view discord.client.Client.application_info
#: discord.client.Client.change_presence discord.client.Client.connect
#: discord.client.Client.create_guild discord.client.Client.delete_invite
#: discord.client.Client.event discord.client.Client.fetch_application
#: discord.client.Client.fetch_channel discord.client.Client.fetch_guild
#: discord.client.Client.fetch_guilds discord.client.Client.fetch_invite
#: discord.client.Client.fetch_premium_sticker_packs
#: discord.client.Client.fetch_stage_instance
#: discord.client.Client.fetch_sticker discord.client.Client.fetch_template
#: discord.client.Client.fetch_user discord.client.Client.fetch_webhook
#: discord.client.Client.fetch_widget discord.client.Client.login
#: discord.client.Client.start discord.client.Client.wait_for
#: discord.cog.Cog.listener discord.cog.CogMixin.add_cog
#: discord.cog.CogMixin.load_extension discord.cog.CogMixin.load_extensions
#: discord.cog.CogMixin.reload_extension discord.cog.CogMixin.unload_extension
#: discord.commands.context.ApplicationContext.delete
#: discord.commands.context.ApplicationContext.invoke
#: discord.commands.core.ApplicationCommand.after_invoke
#: discord.commands.core.ApplicationCommand.before_invoke
#: discord.commands.core.ApplicationCommand.error
#: discord.commands.core.application_command discord.embeds.Embed.set_field_at
#: discord.emoji.Emoji.delete discord.emoji.Emoji.edit
#: discord.guild.Guild.active_threads discord.guild.Guild.audit_logs
#: discord.guild.Guild.ban discord.guild.Guild.bans discord.guild.Guild.chunk
#: discord.guild.Guild.create_auto_moderation_rule
#: discord.guild.Guild.create_category discord.guild.Guild.create_custom_emoji
#: discord.guild.Guild.create_forum_channel
#: discord.guild.Guild.create_integration discord.guild.Guild.create_role
#: discord.guild.Guild.create_scheduled_event
#: discord.guild.Guild.create_stage_channel discord.guild.Guild.create_sticker
#: discord.guild.Guild.create_text_channel
#: discord.guild.Guild.create_voice_channel discord.guild.Guild.delete
#: discord.guild.Guild.delete_emoji discord.guild.Guild.delete_sticker
#: discord.guild.Guild.edit discord.guild.Guild.edit_role_positions
#: discord.guild.Guild.edit_welcome_screen discord.guild.Guild.edit_widget
#: discord.guild.Guild.estimate_pruned_members
#: discord.guild.Guild.fetch_auto_moderation_rule
#: discord.guild.Guild.fetch_auto_moderation_rules
#: discord.guild.Guild.fetch_ban discord.guild.Guild.fetch_channel
#: discord.guild.Guild.fetch_channels discord.guild.Guild.fetch_emoji
#: discord.guild.Guild.fetch_emojis discord.guild.Guild.fetch_member
#: discord.guild.Guild.fetch_members discord.guild.Guild.fetch_roles
#: discord.guild.Guild.fetch_scheduled_event
#: discord.guild.Guild.fetch_scheduled_events discord.guild.Guild.fetch_sticker
#: discord.guild.Guild.fetch_stickers discord.guild.Guild.integrations
#: discord.guild.Guild.invites discord.guild.Guild.kick
#: discord.guild.Guild.leave discord.guild.Guild.prune_members
#: discord.guild.Guild.query_members discord.guild.Guild.set_mfa_required
#: discord.guild.Guild.templates discord.guild.Guild.unban
#: discord.guild.Guild.vanity_invite discord.guild.Guild.webhooks
#: discord.guild.Guild.welcome_screen discord.guild.Guild.widget
#: discord.integrations.Integration.delete
#: discord.integrations.StreamIntegration.edit
#: discord.integrations.StreamIntegration.sync
#: discord.interactions.Interaction.delete_original_message
#: discord.interactions.Interaction.edit_original_message
#: discord.interactions.Interaction.original_message
#: discord.interactions.InteractionMessage.delete
#: discord.interactions.InteractionMessage.edit
#: discord.interactions.InteractionResponse.defer
#: discord.interactions.InteractionResponse.edit_message
#: discord.interactions.InteractionResponse.pong
#: discord.interactions.InteractionResponse.send_autocomplete_result
#: discord.interactions.InteractionResponse.send_message
#: discord.interactions.InteractionResponse.send_modal
#: discord.invite.Invite.delete discord.member.Member.add_roles
#: discord.member.Member.edit discord.member.Member.remove_roles
#: discord.member.Member.remove_timeout discord.member.Member.request_to_speak
#: discord.member.Member.timeout discord.member.Member.timeout_for
#: discord.message.Attachment.read discord.message.Attachment.save
#: discord.message.Attachment.to_file discord.message.Message.add_reaction
#: discord.message.Message.clear_reaction
#: discord.message.Message.clear_reactions
#: discord.message.Message.create_thread discord.message.Message.delete
#: discord.message.Message.edit discord.message.Message.pin
#: discord.message.Message.publish discord.message.Message.remove_reaction
#: discord.message.Message.reply discord.message.Message.unpin
#: discord.message.PartialMessage.edit discord.message.PartialMessage.fetch
#: discord.partial_emoji.PartialEmoji.read discord.player.FFmpegOpusAudio
#: discord.player.FFmpegOpusAudio.from_probe
#: discord.player.FFmpegOpusAudio.probe discord.player.FFmpegPCMAudio
#: discord.player.PCMVolumeTransformer discord.reaction.Reaction.clear
#: discord.reaction.Reaction.remove discord.reaction.Reaction.users
#: discord.role.Role.delete discord.role.Role.edit
#: discord.scheduled_events.ScheduledEvent.cancel
#: discord.scheduled_events.ScheduledEvent.complete
#: discord.scheduled_events.ScheduledEvent.delete
#: discord.scheduled_events.ScheduledEvent.edit
#: discord.scheduled_events.ScheduledEvent.start
#: discord.scheduled_events.ScheduledEvent.subscribers
#: discord.shard.AutoShardedClient.change_presence
#: discord.shard.AutoShardedClient.connect discord.sinks.core.AudioData.cleanup
#: discord.sinks.core.AudioData.on_format discord.sinks.core.AudioData.write
#: discord.sinks.core.Sink discord.sinks.m4a.M4ASink.format_audio
#: discord.sinks.mka.MKASink.format_audio
#: discord.sinks.mkv.MKVSink.format_audio
#: discord.sinks.mp3.MP3Sink.format_audio
#: discord.sinks.mp4.MP4Sink.format_audio
#: discord.sinks.ogg.OGGSink.format_audio
#: discord.sinks.wave.WaveSink.format_audio
#: discord.stage_instance.StageInstance.delete
#: discord.stage_instance.StageInstance.edit
#: discord.sticker.GuildSticker.delete discord.sticker.GuildSticker.edit
#: discord.sticker.StandardSticker.pack discord.sticker.StickerItem.fetch
#: discord.template.Template.create_guild discord.template.Template.delete
#: discord.template.Template.edit discord.template.Template.sync
#: discord.threads.Thread.add_user discord.threads.Thread.delete
#: discord.threads.Thread.delete_messages discord.threads.Thread.edit
#: discord.threads.Thread.fetch_members discord.threads.Thread.join
#: discord.threads.Thread.leave discord.threads.Thread.permissions_for
#: discord.threads.Thread.purge discord.threads.Thread.remove_user
#: discord.ui.select.Select.add_option discord.ui.select.Select.append_option
#: discord.ui.view.View.add_item discord.user.ClientUser.edit
#: discord.voice_client.VoiceClient.play
#: discord.voice_client.VoiceClient.send_audio_packet
#: discord.voice_client.VoiceClient.start_recording
#: discord.voice_client.VoiceClient.stop_recording
#: discord.voice_client.VoiceClient.toggle_pause
#: discord.webhook.async_.Webhook.delete
#: discord.webhook.async_.Webhook.delete_message
#: discord.webhook.async_.Webhook.edit
#: discord.webhook.async_.Webhook.edit_message
#: discord.webhook.async_.Webhook.fetch
#: discord.webhook.async_.Webhook.fetch_message
#: discord.webhook.async_.Webhook.from_url discord.webhook.async_.Webhook.send
#: discord.webhook.async_.WebhookMessage.delete
#: discord.webhook.async_.WebhookMessage.edit
#: discord.webhook.sync.SyncWebhook.delete
#: discord.webhook.sync.SyncWebhook.delete_message
#: discord.webhook.sync.SyncWebhook.edit
#: discord.webhook.sync.SyncWebhook.edit_message
#: discord.webhook.sync.SyncWebhook.fetch
#: discord.webhook.sync.SyncWebhook.fetch_message
#: discord.webhook.sync.SyncWebhook.from_url
#: discord.webhook.sync.SyncWebhook.send
#: discord.webhook.sync.SyncWebhookMessage.delete
#: discord.webhook.sync.SyncWebhookMessage.edit
#: discord.welcome_screen.WelcomeScreen.edit of
msgid "例外"
msgstr ""

#: discord.bot.BotBase.after_invoke:18 discord.bot.BotBase.before_invoke:17
#: discord.client.Client.event:15
#: discord.commands.core.ApplicationCommand.after_invoke:12
#: discord.commands.core.ApplicationCommand.before_invoke:12
#: discord.commands.core.ApplicationCommand.error:10 of
msgid "The coroutine passed is not actually a coroutine."
msgstr ""

#: discord.client.Client.fetch_guilds:1 of
msgid "Retrieves an :class:`.AsyncIterator` that enables receiving your guilds."
msgstr ""

#: discord.client.Client.fetch_guilds:5 of
msgid ""
"Using this, you will only receive :attr:`.Guild.owner`, "
":attr:`.Guild.icon`, :attr:`.Guild.id`, and :attr:`.Guild.name` per "
":class:`.Guild`."
msgstr ""

#: discord.client.Client.fetch_guilds:10 of
msgid ""
"This method is an API call. For general usage, consider :attr:`guilds` "
"instead."
msgstr ""

#: discord.abc.Messageable.history:7 discord.client.Client.fetch_guilds:14
#: discord.guild.Guild.bans:30 discord.guild.Guild.fetch_members:27
#: discord.reaction.Reaction.users:8
#: discord.scheduled_events.ScheduledEvent.subscribers:13 of
msgid "Usage ::"
msgstr ""

#: discord.client.Client.fetch_guilds:19 discord.guild.Guild.bans:35
#: discord.guild.Guild.fetch_members:32 of
msgid "Flattening into a list ::"
msgstr ""

#: discord.abc.Messageable.history:19 discord.client.Client.fetch_guilds:24
#: discord.guild.Guild.bans:10 discord.guild.Guild.fetch_members:10
#: discord.member.Member.edit:23 of
msgid "All parameters are optional."
msgstr ""

#: discord.client.Client.fetch_guilds:26 of
msgid ""
"The number of guilds to retrieve. If ``None``, it retrieves every guild "
"you have access to. Note, however, that this would make it a slow "
"operation. Defaults to ``100``."
msgstr ""

#: discord.client.Client.fetch_guilds:31 of
msgid ""
"Retrieves guilds before this date or object. If a datetime is provided, "
"it is recommended to use a UTC aware datetime. If the datetime is naive, "
"it is assumed to be local time."
msgstr ""

#: discord.client.Client.fetch_guilds:35 of
msgid ""
"Retrieve guilds after this date or object. If a datetime is provided, it "
"is recommended to use a UTC aware datetime. If the datetime is naive, it "
"is assumed to be local time."
msgstr ""

#: discord.client.Client.fetch_guilds:40 of
msgid "Getting the guilds failed."
msgstr ""

#: discord.abc.Messageable.history
#: discord.bot.ApplicationCommandMixin.walk_application_commands
#: discord.channel._TextChannel.archived_threads
#: discord.client.Client.fetch_guilds discord.client.Client.get_all_channels
#: discord.client.Client.get_all_members discord.cog.Cog.walk_commands
#: discord.commands.core.SlashCommandGroup.walk_commands
#: discord.guild.Guild.audit_logs discord.guild.Guild.bans
#: discord.guild.Guild.fetch_members discord.reaction.Reaction.users
#: discord.scheduled_events.ScheduledEvent.subscribers of
msgid "列挙"
msgstr ""

#: discord.client.Client.fetch_guilds:42 of
msgid ":class:`.Guild` -- The guild with the guild data parsed."
msgstr ""

#: discord.AutoShardedClient.latency:1 discord.Bot.latency:1
#: discord.Client.latency:1 of
msgid "Measures latency between a HEARTBEAT and a HEARTBEAT_ACK in seconds."
msgstr ""

#: discord.Bot.latency:3 discord.Client.latency:3 of
msgid "This could be referred to as the Discord WebSocket protocol latency."
msgstr ""

#: discord.AutoShardedClient.latency:7 discord.Bot.latency:5
#: discord.Client.latency:5 discord.Guild.bitrate_limit:3
#: discord.PCMVolumeTransformer.volume:3 discord.ShardInfo.latency:3
#: discord.VoiceClient.average_latency:5 discord.VoiceClient.latency:8
#: discord.commands.core.ApplicationCommand.get_cooldown_retry_after:12 of
msgid ":class:`float`"
msgstr ""

#: discord.client.Client.is_ws_ratelimited:1 of
msgid ":class:`bool`: Whether the WebSocket is currently rate limited."
msgstr ""

#: discord.client.Client.is_ws_ratelimited:3
#: discord.shard.AutoShardedClient.is_ws_ratelimited:3
#: discord.shard.ShardInfo.is_ws_ratelimited:3 of
msgid ""
"This can be useful to know when deciding whether you should query members"
" using HTTP or via the gateway."
msgstr ""

#: discord.Bot.user:1 discord.Client.user:1 of
msgid "Represents the connected client. ``None`` if not logged in."
msgstr ""

#: discord.Bot.user:3 discord.Client.user:3 of
msgid "Optional[:class:`.ClientUser`]"
msgstr ""

#: discord.Bot.guilds:1 discord.Client.guilds:1 of
msgid "The guilds that the connected client is a member of."
msgstr ""

#: discord.Bot.guilds:3 discord.Client.guilds:3 of
msgid "List[:class:`.Guild`]"
msgstr ""

#: discord.Bot.emojis:1 discord.Client.emojis:1 of
msgid "The emojis that the connected client has."
msgstr ""

#: discord.Bot.emojis:3 discord.Client.emojis:3 of
msgid "List[:class:`.Emoji`]"
msgstr ""

#: discord.Bot.stickers:1 discord.Client.stickers:1 of
msgid "The stickers that the connected client has."
msgstr ""

#: discord.Bot.stickers:5 discord.Client.stickers:5 of
msgid "List[:class:`.GuildSticker`]"
msgstr ""

#: discord.Bot.cached_messages:1 discord.Client.cached_messages:1 of
msgid "Read-only list of messages the connected client has cached."
msgstr ""

#: discord.Bot.cached_messages:5 discord.Client.cached_messages:5 of
msgid "Sequence[:class:`.Message`]"
msgstr ""

#: discord.Bot.private_channels:1 discord.Client.private_channels:1 of
msgid "The private channels that the connected client is participating on."
msgstr ""

#: discord.Bot.private_channels:5 discord.Client.private_channels:5 of
msgid ""
"This returns only up to 128 most recent private channels due to an "
"internal working on how Discord deals with private channels."
msgstr ""

#: discord.Bot.private_channels:8 discord.Client.private_channels:8 of
msgid "List[:class:`.abc.PrivateChannel`]"
msgstr ""

#: discord.Bot.voice_clients:1 discord.Client.voice_clients:1 of
msgid "Represents a list of voice connections."
msgstr ""

#: discord.Bot.voice_clients:3 discord.Client.voice_clients:3 of
msgid "These are usually :class:`.VoiceClient` instances."
msgstr ""

#: discord.Bot.voice_clients:5 discord.Client.voice_clients:5 of
msgid "List[:class:`.VoiceProtocol`]"
msgstr ""

#: discord.Bot.application_id:3 discord.Client.application_id:3 of
msgid ""
"If this is not passed via ``__init__`` then this is retrieved through the"
" gateway when an event contains the data. Usually after "
":func:`~discord.on_connect` is called."
msgstr ""

#: discord.Bot.application_id:9 discord.Client.application_id:9
#: discord.DeletedReferencedMessage.guild_id:3 discord.Thread.category_id:6
#: discord.activity.Activity:16 discord.appinfo.AppInfo:81
#: discord.appinfo.AppInfo:91 discord.bot.Bot:24
#: discord.channel.CategoryChannel:46 discord.channel.ForumChannel:43
#: discord.channel.ForumChannel:60 discord.channel.ForumChannel:67
#: discord.channel.StageChannel:51 discord.channel.StageChannel:58
#: discord.channel.TextChannel:43 discord.channel.TextChannel:56
#: discord.channel.TextChannel:63 discord.channel.VoiceChannel:43
#: discord.channel.VoiceChannel:50 discord.channel.VoiceChannel:87
#: discord.commands.options.Option:66 discord.commands.options.Option:73
#: discord.commands.options.Option:80 discord.commands.options.Option:87
#: discord.errors.ConnectionClosed:20
#: discord.errors.PrivilegedIntentsRequired:15 discord.guild.Guild:81
#: discord.guild.Guild:91 discord.guild.Guild:99 discord.guild.Guild:224
#: discord.guild.Guild:235 discord.guild.Guild.prune_members:38
#: discord.interactions.Interaction:24 discord.interactions.Interaction:30
#: discord.invite.Invite:109 discord.invite.Invite:116
#: discord.message.Attachment:40 discord.message.Attachment:46
#: discord.message.Message:130 discord.message.MessageReference:12
#: discord.message.MessageReference:24 discord.partial_emoji.PartialEmoji:44
#: discord.raw_models.AutoModActionExecutionEvent:45
#: discord.raw_models.AutoModActionExecutionEvent:58
#: discord.raw_models.AutoModActionExecutionEvent:71
#: discord.raw_models.RawBulkMessageDeleteEvent:19
#: discord.raw_models.RawIntegrationDeleteEvent:15
#: discord.raw_models.RawMessageDeleteEvent:13
#: discord.raw_models.RawMessageUpdateEvent:23
#: discord.raw_models.RawReactionActionEvent:26
#: discord.raw_models.RawReactionClearEmojiEvent:21
#: discord.raw_models.RawReactionClearEvent:19
#: discord.raw_models.RawTypingEvent:27 discord.role.RoleTags:15
#: discord.role.RoleTags:21 discord.scheduled_events.ScheduledEvent:70
#: discord.scheduled_events.ScheduledEvent:78 discord.shard.ShardInfo:18
#: discord.threads.Thread:61 discord.ui.InputText.max_length:3
#: discord.ui.InputText.min_length:3 discord.webhook.async_.Webhook:70
#: discord.webhook.async_.Webhook:76 discord.webhook.sync.SyncWebhook:47
#: discord.webhook.sync.SyncWebhook:53 of
msgid "Optional[:class:`int`]"
msgstr ""

#: discord.Bot.application_flags:1 discord.Client.application_flags:1 of
msgid "The client's application flags."
msgstr ""

#: discord.Bot.application_flags:5 discord.Client.application_flags:5 of
msgid ":class:`~discord.ApplicationFlags`"
msgstr ""

#: discord.client.Client.is_ready:1 of
msgid ":class:`bool`: Specifies if the client's internal cache is ready for use."
msgstr ""

#: ../../api.rst:3371 ../../api.rst:3379 ../../api.rst:3390 ../../api.rst:3410
#: discord.ApplicationContext.defer:1 discord.ApplicationContext.edit:1
#: discord.ApplicationContext.send_followup:1
#: discord.ApplicationContext.send_response:1 discord.abc.Connectable.connect:1
#: discord.abc.GuildChannel.clone:1 discord.abc.GuildChannel.create_invite:1
#: discord.abc.GuildChannel.delete:1 discord.abc.GuildChannel.invites:1
#: discord.abc.GuildChannel.move:1 discord.abc.GuildChannel.set_permissions:1
#: discord.abc.Messageable.fetch_message:1 discord.abc.Messageable.pins:1
#: discord.abc.Messageable.send:1 discord.abc.Messageable.trigger_typing:1
#: discord.asset.AssetMixin.read:1 discord.asset.AssetMixin.save:1
#: discord.automod.AutoModRule.delete:1 discord.automod.AutoModRule.edit:1
#: discord.bot.ApplicationCommandMixin.get_application_context:1
#: discord.bot.ApplicationCommandMixin.get_autocomplete_context:1
#: discord.bot.ApplicationCommandMixin.get_desynced_commands:1
#: discord.bot.ApplicationCommandMixin.invoke_application_command:1
#: discord.bot.ApplicationCommandMixin.process_application_commands:1
#: discord.bot.ApplicationCommandMixin.register_command:1
#: discord.bot.ApplicationCommandMixin.register_commands:1
#: discord.bot.ApplicationCommandMixin.sync_commands:1
#: discord.bot.BotBase.is_owner:1
#: discord.bot.BotBase.on_application_command_error:1
#: discord.channel.CategoryChannel.clone:1
#: discord.channel.CategoryChannel.create_forum_channel:1
#: discord.channel.CategoryChannel.create_stage_channel:1
#: discord.channel.CategoryChannel.create_text_channel:1
#: discord.channel.CategoryChannel.create_voice_channel:1
#: discord.channel.CategoryChannel.edit:1
#: discord.channel.CategoryChannel.move:1
#: discord.channel.ForumChannel.create_thread:1
#: discord.channel.GroupChannel.leave:1 discord.channel.StageChannel.clone:1
#: discord.channel.StageChannel.create_instance:1
#: discord.channel.StageChannel.edit:1
#: discord.channel.StageChannel.fetch_instance:1
#: discord.channel.TextChannel.create_thread:1
#: discord.channel.VoiceChannel.clone:1
#: discord.channel.VoiceChannel.create_activity_invite:1
#: discord.channel.VoiceChannel.create_webhook:1
#: discord.channel.VoiceChannel.delete_messages:1
#: discord.channel.VoiceChannel.edit:1 discord.channel.VoiceChannel.purge:1
#: discord.channel.VoiceChannel.webhooks:1 discord.channel._TextChannel.clone:1
#: discord.channel._TextChannel.create_webhook:1
#: discord.channel._TextChannel.delete_messages:1
#: discord.channel._TextChannel.edit:1 discord.channel._TextChannel.purge:1
#: discord.channel._TextChannel.webhooks:1
#: discord.client.Client.application_info:1
#: discord.client.Client.before_identify_hook:1
#: discord.client.Client.change_presence:1 discord.client.Client.close:1
#: discord.client.Client.connect:1 discord.client.Client.create_dm:1
#: discord.client.Client.create_guild:1 discord.client.Client.delete_invite:1
#: discord.client.Client.fetch_channel:1 discord.client.Client.fetch_guild:1
#: discord.client.Client.fetch_invite:1
#: discord.client.Client.fetch_premium_sticker_packs:1
#: discord.client.Client.fetch_stage_instance:1
#: discord.client.Client.fetch_sticker:1 discord.client.Client.fetch_template:1
#: discord.client.Client.fetch_user:1 discord.client.Client.fetch_webhook:1
#: discord.client.Client.fetch_widget:1 discord.client.Client.login:1
#: discord.client.Client.on_error:1 discord.client.Client.start:1
#: discord.client.Client.wait_for:1 discord.client.Client.wait_until_ready:1
#: discord.commands.context.ApplicationContext.delete:1
#: discord.commands.context.ApplicationContext.invoke:1
#: discord.commands.context.ApplicationContext.respond:1
#: discord.emoji.Emoji.delete:1 discord.emoji.Emoji.edit:1
#: discord.guild.Guild.active_threads:1 discord.guild.Guild.ban:1
#: discord.guild.Guild.bans:1 discord.guild.Guild.change_voice_state:1
#: discord.guild.Guild.chunk:1 discord.guild.Guild.create_category:1
#: discord.guild.Guild.create_custom_emoji:1
#: discord.guild.Guild.create_forum_channel:1
#: discord.guild.Guild.create_integration:1 discord.guild.Guild.create_role:1
#: discord.guild.Guild.create_stage_channel:1
#: discord.guild.Guild.create_sticker:1 discord.guild.Guild.create_template:1
#: discord.guild.Guild.create_text_channel:1
#: discord.guild.Guild.create_voice_channel:1 discord.guild.Guild.delete:1
#: discord.guild.Guild.delete_emoji:1 discord.guild.Guild.delete_sticker:1
#: discord.guild.Guild.edit:1 discord.guild.Guild.edit_role_positions:1
#: discord.guild.Guild.edit_welcome_screen:1 discord.guild.Guild.edit_widget:1
#: discord.guild.Guild.estimate_pruned_members:1
#: discord.guild.Guild.fetch_auto_moderation_rule:1
#: discord.guild.Guild.fetch_auto_moderation_rules:1
#: discord.guild.Guild.fetch_ban:1 discord.guild.Guild.fetch_channel:1
#: discord.guild.Guild.fetch_channels:1 discord.guild.Guild.fetch_emoji:1
#: discord.guild.Guild.fetch_emojis:1 discord.guild.Guild.fetch_member:1
#: discord.guild.Guild.fetch_roles:1
#: discord.guild.Guild.fetch_scheduled_event:1
#: discord.guild.Guild.fetch_scheduled_events:1
#: discord.guild.Guild.fetch_sticker:1 discord.guild.Guild.fetch_stickers:1
#: discord.guild.Guild.integrations:1 discord.guild.Guild.invites:1
#: discord.guild.Guild.kick:1 discord.guild.Guild.leave:1
#: discord.guild.Guild.prune_members:1 discord.guild.Guild.query_members:1
#: discord.guild.Guild.set_mfa_required:1 discord.guild.Guild.templates:1
#: discord.guild.Guild.unban:1 discord.guild.Guild.vanity_invite:1
#: discord.guild.Guild.webhooks:1 discord.guild.Guild.welcome_screen:1
#: discord.guild.Guild.widget:1 discord.integrations.Integration.delete:1
#: discord.integrations.StreamIntegration.edit:1
#: discord.integrations.StreamIntegration.sync:1
#: discord.interactions.Interaction.delete_original_message:1
#: discord.interactions.Interaction.edit_original_message:1
#: discord.interactions.Interaction.original_message:1
#: discord.interactions.InteractionMessage.delete:1
#: discord.interactions.InteractionMessage.edit:1
#: discord.interactions.InteractionResponse.defer:1
#: discord.interactions.InteractionResponse.edit_message:1
#: discord.interactions.InteractionResponse.pong:1
#: discord.interactions.InteractionResponse.send_message:1
#: discord.invite.Invite.delete:1 discord.member.Member.add_roles:1
#: discord.member.Member.ban:1 discord.member.Member.edit:1
#: discord.member.Member.kick:1 discord.member.Member.move_to:1
#: discord.member.Member.remove_roles:1 discord.member.Member.remove_timeout:1
#: discord.member.Member.request_to_speak:1 discord.member.Member.timeout:1
#: discord.member.Member.timeout_for:1 discord.member.Member.unban:1
#: discord.member.flatten_user.<locals>.generate_function.<locals>.general:1
#: discord.message.Attachment.read:1 discord.message.Attachment.save:1
#: discord.message.Attachment.to_file:1 discord.message.Message.add_reaction:1
#: discord.message.Message.clear_reaction:1
#: discord.message.Message.clear_reactions:1
#: discord.message.Message.create_thread:1 discord.message.Message.delete:1
#: discord.message.Message.edit:1 discord.message.Message.pin:1
#: discord.message.Message.publish:1 discord.message.Message.remove_reaction:1
#: discord.message.Message.reply:1 discord.message.Message.unpin:1
#: discord.message.PartialMessage.edit:1 discord.message.PartialMessage.fetch:1
#: discord.partial_emoji.PartialEmoji.read:1
#: discord.player.FFmpegOpusAudio.from_probe:1
#: discord.player.FFmpegOpusAudio.probe:1 discord.reaction.Reaction.clear:1
#: discord.reaction.Reaction.remove:1 discord.role.Role.delete:1
#: discord.role.Role.edit:1 discord.scheduled_events.ScheduledEvent.cancel:1
#: discord.scheduled_events.ScheduledEvent.complete:1
#: discord.scheduled_events.ScheduledEvent.delete:1
#: discord.scheduled_events.ScheduledEvent.edit:1
#: discord.scheduled_events.ScheduledEvent.start:1
#: discord.shard.AutoShardedClient.change_presence:1
#: discord.shard.AutoShardedClient.close:1
#: discord.shard.AutoShardedClient.connect:1 discord.shard.ShardInfo.connect:1
#: discord.shard.ShardInfo.disconnect:1 discord.shard.ShardInfo.reconnect:1
#: discord.stage_instance.StageInstance.delete:1
#: discord.stage_instance.StageInstance.edit:1
#: discord.sticker.GuildSticker.delete:1 discord.sticker.GuildSticker.edit:1
#: discord.sticker.StandardSticker.pack:1 discord.sticker.StickerItem.fetch:1
#: discord.template.Template.create_guild:1 discord.template.Template.delete:1
#: discord.template.Template.edit:1 discord.template.Template.sync:1
#: discord.threads.Thread.add_user:1 discord.threads.Thread.archive:1
#: discord.threads.Thread.delete:1 discord.threads.Thread.delete_messages:1
#: discord.threads.Thread.edit:1 discord.threads.Thread.fetch_members:1
#: discord.threads.Thread.join:1 discord.threads.Thread.leave:1
#: discord.threads.Thread.purge:1 discord.threads.Thread.remove_user:1
#: discord.threads.Thread.unarchive:1 discord.ui.item.Item.callback:1
#: discord.ui.modal.Modal.callback:1 discord.ui.modal.Modal.on_error:1
#: discord.ui.modal.Modal.on_timeout:1 discord.ui.view.View.interaction_check:1
#: discord.ui.view.View.on_error:1 discord.ui.view.View.on_timeout:1
#: discord.user.ClientUser.edit:1 discord.user.User.create_dm:1
#: discord.utils.sleep_until:1 discord.voice_client.VoiceClient.disconnect:1
#: discord.voice_client.VoiceClient.move_to:1
#: discord.voice_client.VoiceProtocol.connect:1
#: discord.voice_client.VoiceProtocol.disconnect:1
#: discord.voice_client.VoiceProtocol.on_voice_server_update:1
#: discord.voice_client.VoiceProtocol.on_voice_state_update:1
#: discord.webhook.async_.Webhook.delete:1
#: discord.webhook.async_.Webhook.delete_message:1
#: discord.webhook.async_.Webhook.edit:1
#: discord.webhook.async_.Webhook.edit_message:1
#: discord.webhook.async_.Webhook.fetch:1
#: discord.webhook.async_.Webhook.fetch_message:1
#: discord.webhook.async_.Webhook.send:1
#: discord.webhook.async_.WebhookMessage.delete:1
#: discord.webhook.async_.WebhookMessage.edit:1
#: discord.welcome_screen.WelcomeScreen.edit:1
#: discord.widget.Widget.fetch_invite:1 of
msgid "|coro|"
msgstr ""

#: discord.client.Client.on_error:3 of
msgid "The default error handler provided by the client."
msgstr ""

#: discord.client.Client.on_error:5 of
msgid ""
"By default, this prints to :data:`sys.stderr` however it could be "
"overridden to have a different implementation. Check "
":func:`~discord.on_error` for more details."
msgstr ""

#: discord.client.Client.before_identify_hook:3 of
msgid ""
"A hook that is called before IDENTIFYing a session. This is useful if you"
" wish to have more control over the synchronization of multiple "
"IDENTIFYing clients."
msgstr ""

#: discord.client.Client.before_identify_hook:7 of
msgid "The default implementation sleeps for 5 seconds."
msgstr ""

#: discord.client.Client.before_identify_hook:11 of
msgid "The shard ID that requested being IDENTIFY'd"
msgstr ""

#: discord.client.Client.before_identify_hook:13 of
msgid "Whether this IDENTIFY is the first initial IDENTIFY."
msgstr ""

#: discord.client.Client.login:3 of
msgid "Logs in the client with the specified credentials."
msgstr ""

#: discord.client.Client.login:6 of
msgid ""
"The authentication token. Do not prefix this token with anything as the "
"library will do it for you."
msgstr ""

#: discord.client.Client.login:10 of
msgid "The token was in invalid type."
msgstr ""

#: discord.client.Client.login:11 of
msgid "The wrong credentials are passed."
msgstr ""

#: discord.client.Client.login:12 of
msgid ""
"An unknown HTTP related error occurred,     usually when it isn't 200 or "
"the known incorrect credentials     passing status code."
msgstr ""

#: discord.client.Client.connect:3 discord.shard.AutoShardedClient.connect:3 of
msgid ""
"Creates a WebSocket connection and lets the WebSocket listen to messages "
"from Discord. This is a loop that runs the entire event system and "
"miscellaneous aspects of the library. Control is not resumed until the "
"WebSocket connection is terminated."
msgstr ""

#: discord.client.Client.connect:8 discord.shard.AutoShardedClient.connect:8 of
msgid ""
"If we should attempt reconnecting, either due to internet failure or a "
"specific failure on Discord's part. Certain disconnects that lead to bad "
"state will not be handled (such as invalid sharding payloads or bad "
"tokens)."
msgstr ""

#: discord.client.Client.connect:14 discord.shard.AutoShardedClient.connect:14
#: of
msgid ""
"The gateway to connect to Discord is not found. Usually if this     is "
"thrown then there is a Discord API outage."
msgstr ""

#: discord.client.Client.connect:15 discord.shard.AutoShardedClient.connect:15
#: of
msgid "The WebSocket connection has been terminated."
msgstr ""

#: discord.client.Client.close:3 discord.shard.AutoShardedClient.close:3 of
msgid "Closes the connection to Discord."
msgstr ""

#: discord.client.Client.clear:1 of
msgid "Clears the internal state of the bot."
msgstr ""

#: discord.client.Client.clear:3 of
msgid ""
"After this, the bot can be considered \"re-opened\", i.e. "
":meth:`is_closed` and :meth:`is_ready` both return ``False`` along with "
"the bot's internal cache cleared."
msgstr ""

#: discord.client.Client.start:3 of
msgid "A shorthand coroutine for :meth:`login` + :meth:`connect`."
msgstr ""

#: discord.client.Client.start:5 of
msgid "An unexpected keyword argument was received."
msgstr ""

#: discord.client.Client.run:1 of
msgid ""
"A blocking call that abstracts away the event loop initialisation from "
"you."
msgstr ""

#: discord.client.Client.run:4 of
msgid ""
"If you want more control over the event loop then this function should "
"not be used. Use :meth:`start` coroutine or :meth:`connect` + "
":meth:`login`."
msgstr ""

#: discord.client.Client.run:8 of
msgid "Roughly Equivalent to: ::"
msgstr ""

#: discord.client.Client.run:20 of
msgid ""
"This function must be the last function to call due to the fact that it "
"is blocking. That means that registration of events or anything being "
"called after this function call will not execute until it returns."
msgstr ""

#: discord.client.Client.is_closed:1 of
msgid ":class:`bool`: Indicates if the WebSocket connection is closed."
msgstr ""

#: discord.Bot.activity:1 discord.Client.activity:1 of
msgid "The activity being used upon logging in."
msgstr ""

#: discord.Bot.activity:4 discord.Client.activity:4 of
msgid "Optional[:class:`.BaseActivity`]"
msgstr ""

#: discord.Bot.status:1 discord.Client.status:1 of
msgid ":class:`.Status`: The status being used upon logging on to Discord."
msgstr ""

#: discord.Bot.allowed_mentions:1 discord.Client.allowed_mentions:1 of
msgid "The allowed mention configuration."
msgstr ""

#: discord.Bot.allowed_mentions:5 discord.Client.allowed_mentions:5 of
msgid "Optional[:class:`~discord.AllowedMentions`]"
msgstr ""

#: discord.Bot.intents:1 discord.Client.intents:1 of
msgid "The intents configured for this connection."
msgstr ""

#: discord.Bot.intents:5 discord.Client.intents:5 of
msgid ":class:`~discord.Intents`"
msgstr ""

#: discord.Bot.users:1 discord.Client.users:1 of
msgid "Returns a list of all the users the bot can see."
msgstr ""

#: discord.Bot.users:3 discord.Client.users:3 of
msgid "List[:class:`~discord.User`]"
msgstr ""

#: discord.client.Client.fetch_application:1 of
msgid "|coro| Retrieves a :class:`.PartialAppInfo` from an application ID."
msgstr ""

#: discord.client.Client.fetch_application:4 of
msgid "The application ID to retrieve information from."
msgstr ""

#: discord.client.Client.fetch_application:7 of
msgid "An application with this ID does not exist."
msgstr ""

#: discord.client.Client.fetch_application:8 of
msgid "Retrieving the application failed."
msgstr ""

#: ../../api.rst discord.ApplicationContext.edit
#: discord.ApplicationContext.selected_options
#: discord.ApplicationContext.send_followup
#: discord.ApplicationContext.send_response
#: discord.ApplicationContext.unselected_options
#: discord.CategoryChannel.overwrites discord.ForumChannel.last_message
#: discord.ForumChannel.overwrites discord.StageChannel.overwrites
#: discord.StageChannel.voice_states discord.TextChannel.last_message
#: discord.TextChannel.overwrites discord.Thread.category
#: discord.Thread.category_id discord.Thread.last_message
#: discord.Thread.starting_message discord.VoiceChannel.last_message
#: discord.VoiceChannel.overwrites discord.VoiceChannel.voice_states
#: discord.abc.Connectable.connect discord.abc.GuildChannel.clone
#: discord.abc.GuildChannel.create_invite discord.abc.GuildChannel.invites
#: discord.abc.GuildChannel.overwrites discord.abc.GuildChannel.overwrites_for
#: discord.abc.GuildChannel.permissions_for discord.abc.Messageable.can_send
#: discord.abc.Messageable.fetch_message discord.abc.Messageable.pins
#: discord.abc.Messageable.send discord.asset.Asset.replace
#: discord.asset.Asset.with_format discord.asset.Asset.with_size
#: discord.asset.Asset.with_static_format discord.asset.AssetMixin.read
#: discord.asset.AssetMixin.save discord.automod.AutoModRule.edit
#: discord.bot.ApplicationCommandMixin.application_command
#: discord.bot.ApplicationCommandMixin.command
#: discord.bot.ApplicationCommandMixin.create_group
#: discord.bot.ApplicationCommandMixin.get_application_command
#: discord.bot.ApplicationCommandMixin.get_application_context
#: discord.bot.ApplicationCommandMixin.get_autocomplete_context
#: discord.bot.ApplicationCommandMixin.get_desynced_commands
#: discord.bot.ApplicationCommandMixin.group
#: discord.bot.ApplicationCommandMixin.message_command
#: discord.bot.ApplicationCommandMixin.register_command
#: discord.bot.ApplicationCommandMixin.remove_application_command
#: discord.bot.ApplicationCommandMixin.slash_command
#: discord.bot.ApplicationCommandMixin.user_command
#: discord.bot.BotBase.is_owner discord.channel.CategoryChannel.clone
#: discord.channel.CategoryChannel.create_forum_channel
#: discord.channel.CategoryChannel.create_stage_channel
#: discord.channel.CategoryChannel.create_text_channel
#: discord.channel.CategoryChannel.create_voice_channel
#: discord.channel.CategoryChannel.edit
#: discord.channel.DMChannel.get_partial_message
#: discord.channel.DMChannel.permissions_for
#: discord.channel.ForumChannel.create_thread
#: discord.channel.GroupChannel.permissions_for
#: discord.channel.PartialMessageable.get_partial_message
#: discord.channel.StageChannel.clone
#: discord.channel.StageChannel.create_instance
#: discord.channel.StageChannel.edit
#: discord.channel.StageChannel.fetch_instance
#: discord.channel.TextChannel.create_thread
#: discord.channel.VocalGuildChannel.permissions_for
#: discord.channel.VoiceChannel.clone
#: discord.channel.VoiceChannel.create_activity_invite
#: discord.channel.VoiceChannel.create_webhook
#: discord.channel.VoiceChannel.edit
#: discord.channel.VoiceChannel.get_partial_message
#: discord.channel.VoiceChannel.purge discord.channel.VoiceChannel.webhooks
#: discord.channel._TextChannel.clone
#: discord.channel._TextChannel.create_webhook
#: discord.channel._TextChannel.edit discord.channel._TextChannel.follow
#: discord.channel._TextChannel.get_partial_message
#: discord.channel._TextChannel.get_thread
#: discord.channel._TextChannel.permissions_for
#: discord.channel._TextChannel.purge discord.channel._TextChannel.webhooks
#: discord.client.Client.application_info discord.client.Client.create_dm
#: discord.client.Client.create_guild discord.client.Client.fetch_application
#: discord.client.Client.fetch_channel discord.client.Client.fetch_guild
#: discord.client.Client.fetch_invite
#: discord.client.Client.fetch_premium_sticker_packs
#: discord.client.Client.fetch_stage_instance
#: discord.client.Client.fetch_sticker discord.client.Client.fetch_template
#: discord.client.Client.fetch_user discord.client.Client.fetch_webhook
#: discord.client.Client.fetch_widget discord.client.Client.get_channel
#: discord.client.Client.get_emoji discord.client.Client.get_guild
#: discord.client.Client.get_message discord.client.Client.get_or_fetch_user
#: discord.client.Client.get_partial_messageable
#: discord.client.Client.get_stage_instance discord.client.Client.get_sticker
#: discord.client.Client.get_user discord.client.Client.wait_for
#: discord.cog.Cog.get_commands discord.cog.Cog.get_listeners
#: discord.cog.CogMixin.get_cog discord.cog.CogMixin.load_extension
#: discord.cog.CogMixin.load_extensions discord.cog.CogMixin.remove_cog
#: discord.commands.context.ApplicationContext.respond
#: discord.commands.core.ApplicationCommand.get_cooldown_retry_after
#: discord.commands.core.ApplicationCommand.is_on_cooldown
#: discord.commands.core.MessageCommand.copy
#: discord.commands.core.SlashCommand.copy
#: discord.commands.core.SlashCommandGroup.copy
#: discord.commands.core.SlashCommandGroup.create_subgroup
#: discord.commands.core.SlashCommandGroup.subgroup
#: discord.commands.core.UserCommand.copy
#: discord.commands.core.application_command discord.commands.core.command
#: discord.commands.core.message_command discord.commands.core.slash_command
#: discord.commands.core.user_command discord.embeds.Embed.copy
#: discord.embeds.Embed.from_dict discord.embeds.Embed.to_dict
#: discord.embeds.EmbedField.to_dict discord.emoji.Emoji.edit
#: discord.flags.MemberCacheFlags.from_intents
#: discord.guild.Guild.active_threads discord.guild.Guild.by_category
#: discord.guild.Guild.create_auto_moderation_rule
#: discord.guild.Guild.create_category discord.guild.Guild.create_custom_emoji
#: discord.guild.Guild.create_forum_channel discord.guild.Guild.create_role
#: discord.guild.Guild.create_scheduled_event
#: discord.guild.Guild.create_stage_channel discord.guild.Guild.create_sticker
#: discord.guild.Guild.create_text_channel
#: discord.guild.Guild.create_voice_channel discord.guild.Guild.edit
#: discord.guild.Guild.edit_role_positions
#: discord.guild.Guild.edit_welcome_screen
#: discord.guild.Guild.estimate_pruned_members
#: discord.guild.Guild.fetch_auto_moderation_rule
#: discord.guild.Guild.fetch_auto_moderation_rules
#: discord.guild.Guild.fetch_ban discord.guild.Guild.fetch_channel
#: discord.guild.Guild.fetch_channels discord.guild.Guild.fetch_emoji
#: discord.guild.Guild.fetch_emojis discord.guild.Guild.fetch_member
#: discord.guild.Guild.fetch_roles discord.guild.Guild.fetch_scheduled_event
#: discord.guild.Guild.fetch_scheduled_events discord.guild.Guild.fetch_sticker
#: discord.guild.Guild.fetch_stickers discord.guild.Guild.get_channel
#: discord.guild.Guild.get_channel_or_thread discord.guild.Guild.get_member
#: discord.guild.Guild.get_member_named discord.guild.Guild.get_role
#: discord.guild.Guild.get_scheduled_event
#: discord.guild.Guild.get_stage_instance discord.guild.Guild.get_thread
#: discord.guild.Guild.integrations discord.guild.Guild.invites
#: discord.guild.Guild.prune_members discord.guild.Guild.query_members
#: discord.guild.Guild.templates discord.guild.Guild.vanity_invite
#: discord.guild.Guild.webhooks discord.guild.Guild.welcome_screen
#: discord.guild.Guild.widget
#: discord.interactions.Interaction.edit_original_message
#: discord.interactions.Interaction.original_message
#: discord.interactions.Interaction.to_dict
#: discord.interactions.InteractionMessage.edit
#: discord.interactions.InteractionResponse.send_message
#: discord.member.Member.edit discord.member.Member.get_role
#: discord.member.Member.mentioned_in
#: discord.member.flatten_user.<locals>.generate_function.<locals>.general
#: discord.message.Attachment.read discord.message.Attachment.save
#: discord.message.Attachment.to_file discord.message.Message.create_thread
#: discord.message.Message.reply discord.message.Message.to_reference
#: discord.message.MessageReference.from_message
#: discord.message.PartialMessage.edit discord.message.PartialMessage.fetch
#: discord.opus.is_loaded discord.partial_emoji.PartialEmoji.from_str
#: discord.partial_emoji.PartialEmoji.read
#: discord.permissions.PermissionOverwrite.is_empty
#: discord.player.AudioSource.read discord.player.FFmpegOpusAudio.from_probe
#: discord.player.FFmpegOpusAudio.probe discord.player.FFmpegOpusAudio.read
#: discord.player.FFmpegPCMAudio.read discord.player.PCMAudio.read
#: discord.player.PCMVolumeTransformer.read discord.role.Role.edit
#: discord.scheduled_events.ScheduledEvent.cancel
#: discord.scheduled_events.ScheduledEvent.complete
#: discord.scheduled_events.ScheduledEvent.edit
#: discord.scheduled_events.ScheduledEvent.start
#: discord.sticker.GuildSticker.edit discord.sticker.StandardSticker.pack
#: discord.sticker.StickerItem.fetch discord.template.Template.create_guild
#: discord.template.Template.edit discord.template.Template.sync
#: discord.threads.Thread.archive discord.threads.Thread.edit
#: discord.threads.Thread.fetch_members
#: discord.threads.Thread.get_partial_message
#: discord.threads.Thread.permissions_for discord.threads.Thread.purge
#: discord.threads.Thread.unarchive discord.ui.view.View.from_message
#: discord.ui.view.View.interaction_check discord.ui.view.View.wait
#: discord.user.BaseUser.mentioned_in discord.user.ClientUser.edit
#: discord.user.User.create_dm discord.utils.as_chunks
#: discord.utils.basic_autocomplete discord.utils.escape_markdown
#: discord.utils.escape_mentions discord.utils.format_dt
#: discord.utils.generate_snowflake discord.utils.oauth_url
#: discord.utils.remove_markdown discord.utils.resolve_invite
#: discord.utils.resolve_template discord.utils.snowflake_time
#: discord.utils.time_snowflake discord.utils.utcnow
#: discord.webhook.async_.Webhook.edit_message
#: discord.webhook.async_.Webhook.fetch
#: discord.webhook.async_.Webhook.fetch_message
#: discord.webhook.async_.Webhook.from_url
#: discord.webhook.async_.Webhook.partial discord.webhook.async_.Webhook.send
#: discord.webhook.async_.WebhookMessage.edit
#: discord.webhook.sync.SyncWebhook.edit discord.webhook.sync.SyncWebhook.fetch
#: discord.webhook.sync.SyncWebhook.fetch_message
#: discord.webhook.sync.SyncWebhook.from_url
#: discord.webhook.sync.SyncWebhook.partial
#: discord.webhook.sync.SyncWebhook.send
#: discord.webhook.sync.SyncWebhookMessage.edit
#: discord.widget.Widget.fetch_invite of
msgid "戻り値"
msgstr ""

#: discord.client.Client.fetch_application:10 of
msgid "The application information."
msgstr ""

#: ../../api.rst discord.ApplicationContext.edit
#: discord.ApplicationContext.selected_options
#: discord.ApplicationContext.send_followup
#: discord.ApplicationContext.send_response
#: discord.ApplicationContext.unselected_options
#: discord.CategoryChannel.overwrites discord.ForumChannel.last_message
#: discord.ForumChannel.overwrites discord.StageChannel.overwrites
#: discord.StageChannel.voice_states discord.TextChannel.last_message
#: discord.TextChannel.overwrites discord.Thread.category
#: discord.Thread.category_id discord.Thread.last_message
#: discord.Thread.starting_message discord.VoiceChannel.last_message
#: discord.VoiceChannel.overwrites discord.VoiceChannel.voice_states
#: discord.abc.Connectable.connect discord.abc.GuildChannel.clone
#: discord.abc.GuildChannel.create_invite discord.abc.GuildChannel.invites
#: discord.abc.GuildChannel.overwrites discord.abc.GuildChannel.overwrites_for
#: discord.abc.GuildChannel.permissions_for discord.abc.Messageable.can_send
#: discord.abc.Messageable.fetch_message discord.abc.Messageable.pins
#: discord.abc.Messageable.send discord.asset.Asset.replace
#: discord.asset.Asset.with_format discord.asset.Asset.with_size
#: discord.asset.Asset.with_static_format discord.asset.AssetMixin.read
#: discord.asset.AssetMixin.save discord.automod.AutoModRule.edit
#: discord.bot.ApplicationCommandMixin.application_command
#: discord.bot.ApplicationCommandMixin.command
#: discord.bot.ApplicationCommandMixin.create_group
#: discord.bot.ApplicationCommandMixin.get_application_command
#: discord.bot.ApplicationCommandMixin.get_application_context
#: discord.bot.ApplicationCommandMixin.get_autocomplete_context
#: discord.bot.ApplicationCommandMixin.get_desynced_commands
#: discord.bot.ApplicationCommandMixin.group
#: discord.bot.ApplicationCommandMixin.message_command
#: discord.bot.ApplicationCommandMixin.register_command
#: discord.bot.ApplicationCommandMixin.remove_application_command
#: discord.bot.ApplicationCommandMixin.slash_command
#: discord.bot.ApplicationCommandMixin.user_command
#: discord.bot.BotBase.is_owner discord.channel.CategoryChannel.clone
#: discord.channel.CategoryChannel.create_forum_channel
#: discord.channel.CategoryChannel.create_stage_channel
#: discord.channel.CategoryChannel.create_text_channel
#: discord.channel.CategoryChannel.create_voice_channel
#: discord.channel.CategoryChannel.edit
#: discord.channel.DMChannel.get_partial_message
#: discord.channel.DMChannel.permissions_for
#: discord.channel.ForumChannel.create_thread
#: discord.channel.GroupChannel.permissions_for
#: discord.channel.PartialMessageable.get_partial_message
#: discord.channel.StageChannel.clone
#: discord.channel.StageChannel.create_instance
#: discord.channel.StageChannel.edit
#: discord.channel.StageChannel.fetch_instance
#: discord.channel.TextChannel.create_thread
#: discord.channel.VocalGuildChannel.permissions_for
#: discord.channel.VoiceChannel.clone
#: discord.channel.VoiceChannel.create_activity_invite
#: discord.channel.VoiceChannel.create_webhook
#: discord.channel.VoiceChannel.edit
#: discord.channel.VoiceChannel.get_partial_message
#: discord.channel.VoiceChannel.purge discord.channel.VoiceChannel.webhooks
#: discord.channel._TextChannel.clone
#: discord.channel._TextChannel.create_webhook
#: discord.channel._TextChannel.edit discord.channel._TextChannel.follow
#: discord.channel._TextChannel.get_partial_message
#: discord.channel._TextChannel.get_thread
#: discord.channel._TextChannel.permissions_for
#: discord.channel._TextChannel.purge discord.channel._TextChannel.webhooks
#: discord.client.Client.application_info discord.client.Client.create_dm
#: discord.client.Client.create_guild discord.client.Client.fetch_application
#: discord.client.Client.fetch_channel discord.client.Client.fetch_guild
#: discord.client.Client.fetch_invite
#: discord.client.Client.fetch_premium_sticker_packs
#: discord.client.Client.fetch_stage_instance
#: discord.client.Client.fetch_sticker discord.client.Client.fetch_template
#: discord.client.Client.fetch_user discord.client.Client.fetch_webhook
#: discord.client.Client.fetch_widget discord.client.Client.get_channel
#: discord.client.Client.get_emoji discord.client.Client.get_guild
#: discord.client.Client.get_message discord.client.Client.get_or_fetch_user
#: discord.client.Client.get_partial_messageable
#: discord.client.Client.get_stage_instance discord.client.Client.get_sticker
#: discord.client.Client.get_user discord.client.Client.wait_for
#: discord.cog.Cog.get_commands discord.cog.Cog.get_listeners
#: discord.cog.CogMixin.get_cog discord.cog.CogMixin.load_extension
#: discord.cog.CogMixin.load_extensions discord.cog.CogMixin.remove_cog
#: discord.commands.context.ApplicationContext.respond
#: discord.commands.core.ApplicationCommand.get_cooldown_retry_after
#: discord.commands.core.ApplicationCommand.is_on_cooldown
#: discord.commands.core.MessageCommand.copy
#: discord.commands.core.SlashCommand.copy
#: discord.commands.core.SlashCommandGroup.copy
#: discord.commands.core.SlashCommandGroup.create_subgroup
#: discord.commands.core.SlashCommandGroup.subgroup
#: discord.commands.core.UserCommand.copy
#: discord.commands.core.application_command discord.commands.core.command
#: discord.commands.core.message_command discord.commands.core.slash_command
#: discord.commands.core.user_command discord.embeds.Embed.copy
#: discord.embeds.Embed.from_dict discord.embeds.Embed.to_dict
#: discord.embeds.EmbedField.to_dict discord.emoji.Emoji.edit
#: discord.flags.MemberCacheFlags.from_intents
#: discord.guild.Guild.active_threads discord.guild.Guild.by_category
#: discord.guild.Guild.create_auto_moderation_rule
#: discord.guild.Guild.create_category discord.guild.Guild.create_custom_emoji
#: discord.guild.Guild.create_forum_channel discord.guild.Guild.create_role
#: discord.guild.Guild.create_scheduled_event
#: discord.guild.Guild.create_stage_channel discord.guild.Guild.create_sticker
#: discord.guild.Guild.create_text_channel
#: discord.guild.Guild.create_voice_channel discord.guild.Guild.edit
#: discord.guild.Guild.edit_role_positions
#: discord.guild.Guild.edit_welcome_screen
#: discord.guild.Guild.estimate_pruned_members
#: discord.guild.Guild.fetch_auto_moderation_rule
#: discord.guild.Guild.fetch_auto_moderation_rules
#: discord.guild.Guild.fetch_ban discord.guild.Guild.fetch_channel
#: discord.guild.Guild.fetch_channels discord.guild.Guild.fetch_emoji
#: discord.guild.Guild.fetch_emojis discord.guild.Guild.fetch_member
#: discord.guild.Guild.fetch_roles discord.guild.Guild.fetch_scheduled_event
#: discord.guild.Guild.fetch_scheduled_events discord.guild.Guild.fetch_sticker
#: discord.guild.Guild.fetch_stickers discord.guild.Guild.get_channel
#: discord.guild.Guild.get_channel_or_thread discord.guild.Guild.get_member
#: discord.guild.Guild.get_member_named discord.guild.Guild.get_role
#: discord.guild.Guild.get_scheduled_event
#: discord.guild.Guild.get_stage_instance discord.guild.Guild.get_thread
#: discord.guild.Guild.integrations discord.guild.Guild.invites
#: discord.guild.Guild.prune_members discord.guild.Guild.query_members
#: discord.guild.Guild.templates discord.guild.Guild.vanity_invite
#: discord.guild.Guild.webhooks discord.guild.Guild.welcome_screen
#: discord.guild.Guild.widget
#: discord.interactions.Interaction.edit_original_message
#: discord.interactions.Interaction.original_message
#: discord.interactions.Interaction.to_dict
#: discord.interactions.InteractionMessage.edit
#: discord.interactions.InteractionResponse.send_message
#: discord.member.Member.edit discord.member.Member.get_role
#: discord.member.Member.mentioned_in
#: discord.member.flatten_user.<locals>.generate_function.<locals>.general
#: discord.message.Attachment.read discord.message.Attachment.save
#: discord.message.Attachment.to_file discord.message.Message.create_thread
#: discord.message.Message.reply discord.message.Message.to_reference
#: discord.message.MessageReference.from_message
#: discord.message.PartialMessage.edit discord.message.PartialMessage.fetch
#: discord.opus.is_loaded discord.partial_emoji.PartialEmoji.from_str
#: discord.partial_emoji.PartialEmoji.read
#: discord.permissions.PermissionOverwrite.is_empty
#: discord.player.AudioSource.read discord.player.FFmpegOpusAudio.from_probe
#: discord.player.FFmpegOpusAudio.probe discord.player.FFmpegOpusAudio.read
#: discord.player.FFmpegPCMAudio.read discord.player.PCMAudio.read
#: discord.player.PCMVolumeTransformer.read discord.role.Role.edit
#: discord.scheduled_events.ScheduledEvent.cancel
#: discord.scheduled_events.ScheduledEvent.complete
#: discord.scheduled_events.ScheduledEvent.edit
#: discord.scheduled_events.ScheduledEvent.start
#: discord.sticker.GuildSticker.edit discord.sticker.StandardSticker.pack
#: discord.sticker.StickerItem.fetch discord.template.Template.create_guild
#: discord.template.Template.edit discord.template.Template.sync
#: discord.threads.Thread.archive discord.threads.Thread.edit
#: discord.threads.Thread.fetch_members
#: discord.threads.Thread.get_partial_message
#: discord.threads.Thread.permissions_for discord.threads.Thread.purge
#: discord.threads.Thread.unarchive discord.ui.view.View.from_message
#: discord.ui.view.View.interaction_check discord.ui.view.View.wait
#: discord.user.BaseUser.mentioned_in discord.user.ClientUser.edit
#: discord.user.User.create_dm discord.utils.as_chunks
#: discord.utils.escape_markdown discord.utils.escape_mentions
#: discord.utils.format_dt discord.utils.generate_snowflake
#: discord.utils.oauth_url discord.utils.remove_markdown
#: discord.utils.resolve_invite discord.utils.resolve_template
#: discord.utils.snowflake_time discord.utils.time_snowflake
#: discord.utils.utcnow discord.webhook.async_.Webhook.edit_message
#: discord.webhook.async_.Webhook.fetch
#: discord.webhook.async_.Webhook.fetch_message
#: discord.webhook.async_.Webhook.from_url
#: discord.webhook.async_.Webhook.partial discord.webhook.async_.Webhook.send
#: discord.webhook.async_.WebhookMessage.edit
#: discord.webhook.sync.SyncWebhook.edit discord.webhook.sync.SyncWebhook.fetch
#: discord.webhook.sync.SyncWebhook.fetch_message
#: discord.webhook.sync.SyncWebhook.from_url
#: discord.webhook.sync.SyncWebhook.partial
#: discord.webhook.sync.SyncWebhook.send
#: discord.webhook.sync.SyncWebhookMessage.edit
#: discord.widget.Widget.fetch_invite of
msgid "戻り値の型"
msgstr ""

#: discord.client.Client.fetch_application:11 of
msgid ":class:`.PartialAppInfo`"
msgstr ""

#: discord.client.Client.get_channel:1
#: discord.guild.Guild.get_channel_or_thread:1 of
msgid "Returns a channel or thread with the given ID."
msgstr ""

#: discord.channel._TextChannel.get_thread:5
#: discord.client.Client.get_channel:3 discord.client.Client.get_emoji:3
#: discord.client.Client.get_guild:3 discord.client.Client.get_message:6
#: discord.client.Client.get_or_fetch_user:3
#: discord.client.Client.get_stage_instance:5 discord.client.Client.get_user:3
#: discord.guild.Guild.get_channel:7
#: discord.guild.Guild.get_channel_or_thread:5 discord.guild.Guild.get_member:3
#: discord.guild.Guild.get_role:3 discord.guild.Guild.get_scheduled_event:3
#: discord.guild.Guild.get_stage_instance:5 discord.guild.Guild.get_thread:5
#: discord.member.Member.get_role:5 of
msgid "The ID to search for."
msgstr ""

#: discord.client.Client.get_channel:6 discord.guild.Guild.get_channel:10 of
msgid "The returned channel or ``None`` if not found."
msgstr ""

#: discord.client.Client.get_channel:7 of
msgid ""
"Optional[Union[:class:`.abc.GuildChannel`, :class:`.Thread`, "
":class:`.abc.PrivateChannel`]]"
msgstr ""

#: discord.client.Client.get_message:1 of
msgid "Returns a message the given ID."
msgstr ""

#: discord.client.Client.get_message:3 of
msgid ""
"This is useful if you have a message_id but don't want to do an API call "
"to access the message."
msgstr ""

#: discord.client.Client.get_message:9 of
msgid "The returned message or ``None`` if not found."
msgstr ""

#: ../../docstring discord.ApplicationContext.message:4
#: discord.client.Client.get_message:10 discord.ui.view.View:37 of
msgid "Optional[:class:`.Message`]"
msgstr ""

#: discord.client.Client.get_partial_messageable:1 of
msgid "Returns a partial messageable with the given channel ID."
msgstr ""

#: discord.client.Client.get_partial_messageable:3 of
msgid ""
"This is useful if you have a channel_id but don't want to do an API call "
"to send messages to it."
msgstr ""

#: discord.client.Client.get_partial_messageable:8 of
msgid "The channel ID to create a partial messageable for."
msgstr ""

#: discord.client.Client.get_partial_messageable:10 of
msgid "The underlying channel type for the partial messageable."
msgstr ""

#: discord.client.Client.get_partial_messageable:13 of
msgid "The partial messageable"
msgstr ""

#: discord.client.Client.get_partial_messageable:14 of
msgid ":class:`.PartialMessageable`"
msgstr ""

#: discord.client.Client.get_stage_instance:1 of
msgid "Returns a stage instance with the given stage channel ID."
msgstr ""

#: discord.client.Client.get_stage_instance:8
#: discord.guild.Guild.get_stage_instance:8 of
msgid "The stage instance or ``None`` if not found."
msgstr ""

#: discord.client.Client.get_stage_instance:9 of
msgid "Optional[:class:`.StageInstance`]"
msgstr ""

#: discord.client.Client.get_guild:1 of
msgid "Returns a guild with the given ID."
msgstr ""

#: discord.client.Client.get_guild:6 of
msgid "The guild or ``None`` if not found."
msgstr ""

#: ../../docstring discord.ApplicationContext.guild:4
#: discord.client.Client.get_guild:7 of
msgid "Optional[:class:`.Guild`]"
msgstr ""

#: discord.client.Client.get_user:1 of
msgid "Returns a user with the given ID."
msgstr ""

#: discord.client.Client.get_or_fetch_user:6 discord.client.Client.get_user:6
#: of
msgid "The user or ``None`` if not found."
msgstr ""

#: discord.client.Client.get_or_fetch_user:7 discord.client.Client.get_user:7
#: of
msgid "Optional[:class:`~discord.User`]"
msgstr ""

#: discord.client.Client.get_emoji:1 of
msgid "Returns an emoji with the given ID."
msgstr ""

#: discord.client.Client.get_emoji:6 of
msgid "The custom emoji or ``None`` if not found."
msgstr ""

#: discord.client.Client.get_emoji:7 of
msgid "Optional[:class:`.Emoji`]"
msgstr ""

#: discord.client.Client.get_sticker:1 of
msgid "Returns a guild sticker with the given ID."
msgstr ""

#: discord.client.Client.get_sticker:7 of
msgid ""
"To retrieve standard stickers, use :meth:`.fetch_sticker`. or "
":meth:`.fetch_premium_sticker_packs`."
msgstr ""

#: discord.client.Client.get_sticker:10 of
msgid "The sticker or ``None`` if not found."
msgstr ""

#: discord.client.Client.get_sticker:11 of
msgid "Optional[:class:`.GuildSticker`]"
msgstr ""

#: discord.client.Client.get_all_channels:1 of
msgid ""
"A generator that retrieves every :class:`.abc.GuildChannel` the client "
"can 'access'."
msgstr ""

#: discord.client.Client.get_all_channels:3
#: discord.client.Client.get_all_members:3 of
msgid "This is equivalent to: ::"
msgstr ""

#: discord.client.Client.get_all_channels:11 of
msgid ""
"Just because you receive a :class:`.abc.GuildChannel` does not mean that "
"you can communicate in said channel. "
":meth:`.abc.GuildChannel.permissions_for` should be used for that."
msgstr ""

#: discord.client.Client.get_all_channels:15 of
msgid ":class:`.abc.GuildChannel` -- A channel the client can 'access'."
msgstr ""

#: discord.client.Client.get_all_members:1 of
msgid "Returns a generator with every :class:`.Member` the client can see."
msgstr ""

#: discord.client.Client.get_all_members:9 of
msgid ":class:`.Member` -- A member the client can see."
msgstr ""

#: discord.client.Client.get_or_fetch_user:1 of
msgid "Looks up a user in the user cache or fetches if not found."
msgstr ""

#: discord.client.Client.wait_until_ready:3 of
msgid "Waits until the client's internal cache is all ready."
msgstr ""

#: discord.client.Client.wait_for:3 of
msgid "Waits for a WebSocket event to be dispatched."
msgstr ""

#: discord.client.Client.wait_for:5 of
msgid ""
"This could be used to wait for a user to reply to a message, or to react "
"to a message, or to edit a message in a self-contained way."
msgstr ""

#: discord.client.Client.wait_for:9 of
msgid ""
"The ``timeout`` parameter is passed onto :func:`asyncio.wait_for`. By "
"default, it does not timeout. Note that this does propagate the "
":exc:`asyncio.TimeoutError` for you in case of timeout and is provided "
"for ease of use."
msgstr ""

#: discord.client.Client.wait_for:14 of
msgid ""
"In case the event returns multiple arguments, a :class:`tuple` containing"
" those arguments is returned instead. Please check the "
":ref:`documentation <discord-api-events>` for a list of events and their "
"parameters."
msgstr ""

#: discord.client.Client.wait_for:19 of
msgid "This function returns the **first event that meets the requirements**."
msgstr ""

#: discord.client.Client.wait_for:23 of
msgid "Waiting for a user reply: ::"
msgstr ""

#: discord.client.Client.wait_for:37 of
msgid "Waiting for a thumbs up reaction from the message author: ::"
msgstr ""

#: discord.client.Client.wait_for:55 of
msgid ""
"The event name, similar to the :ref:`event reference <discord-api-"
"events>`, but without the ``on_`` prefix, to wait for."
msgstr ""

#: discord.client.Client.wait_for:58 of
msgid ""
"A predicate to check what to wait for. The arguments must meet the "
"parameters of the event being waited for."
msgstr ""

#: discord.client.Client.wait_for:61 of
msgid ""
"The number of seconds to wait before timing out and raising "
":exc:`asyncio.TimeoutError`."
msgstr ""

#: discord.client.Client.wait_for:65 of
msgid "Raised if a timeout is provided and reached."
msgstr ""

#: discord.client.Client.wait_for:67 of
msgid ""
"Returns no arguments, a single argument, or a :class:`tuple` of multiple "
"arguments that mirrors the parameters passed in the :ref:`event reference"
" <discord-api-events>`."
msgstr ""

#: discord.client.Client.change_presence:3
#: discord.shard.AutoShardedClient.change_presence:3 of
msgid "Changes the client's presence."
msgstr ""

#: discord.client.Client.change_presence:12
#: discord.shard.AutoShardedClient.change_presence:10 of
msgid "Removed the ``afk`` keyword-only parameter."
msgstr ""

#: discord.client.Client.change_presence:15
#: discord.shard.AutoShardedClient.change_presence:13 of
msgid "The activity being done. ``None`` if no currently active activity is done."
msgstr ""

#: discord.client.Client.change_presence:17 of
msgid ""
"Indicates what status to change to. If ``None``, then "
":attr:`.Status.online` is used."
msgstr ""

#: discord.client.Client.change_presence:21 of
msgid "If the ``activity`` parameter is not the proper type."
msgstr ""

#: discord.client.Client.fetch_template:3 of
msgid "Gets a :class:`.Template` from a discord.new URL or code."
msgstr ""

#: discord.client.Client.fetch_template:5 of
msgid "The Discord Template Code or URL (must be a discord.new URL)."
msgstr ""

#: discord.client.Client.fetch_template:8 of
msgid "The template is invalid."
msgstr ""

#: discord.client.Client.fetch_template:9 of
msgid "Getting the template failed."
msgstr ""

#: discord.client.Client.fetch_template:11 of
msgid "The template from the URL/code."
msgstr ""

#: discord.client.Client.fetch_template:12 of
msgid ":class:`.Template`"
msgstr ""

#: discord.client.Client.fetch_guild:3 of
msgid "Retrieves a :class:`.Guild` from an ID."
msgstr ""

#: discord.client.Client.fetch_guild:7 of
msgid ""
"Using this, you will **not** receive :attr:`.Guild.channels`, "
":attr:`.Guild.members`, :attr:`.Member.activity` and "
":attr:`.Member.voice` per :class:`.Member`."
msgstr ""

#: discord.client.Client.fetch_guild:12 of
msgid ""
"This method is an API call. For general usage, consider :meth:`get_guild`"
" instead."
msgstr ""

#: discord.client.Client.fetch_guild:14 of
msgid "The guild's ID to fetch from."
msgstr ""

#: discord.client.Client.fetch_guild:16 of
msgid ""
"Whether to include count information in the guild. This fills the "
":attr:`.Guild.approximate_member_count` and "
":attr:`.Guild.approximate_presence_count` fields.  .. versionadded:: 2.0"
msgstr ""

#: discord.client.Client.fetch_guild:16 of
msgid ""
"Whether to include count information in the guild. This fills the "
":attr:`.Guild.approximate_member_count` and "
":attr:`.Guild.approximate_presence_count` fields."
msgstr ""

#: discord.client.Client.fetch_guild:23 discord.guild.Guild.fetch_member:13 of
msgid "You do not have access to the guild."
msgstr ""

#: discord.client.Client.fetch_guild:24 of
msgid "Getting the guild failed."
msgstr ""

#: discord.client.Client.fetch_guild:26 of
msgid "The guild from the ID."
msgstr ""

#: discord.client.Client.create_guild:22 discord.client.Client.fetch_guild:27
#: discord.template.Template.create_guild:18 of
msgid ":class:`.Guild`"
msgstr ""

#: discord.client.Client.create_guild:3 of
msgid "Creates a :class:`.Guild`."
msgstr ""

#: discord.client.Client.create_guild:5
#: discord.template.Template.create_guild:5 of
msgid "Bot accounts in more than 10 guilds are not allowed to create guilds."
msgstr ""

#: discord.client.Client.create_guild:7
#: discord.template.Template.create_guild:7 of
msgid "The name of the guild."
msgstr ""

#: discord.client.Client.create_guild:9
#: discord.template.Template.create_guild:9 of
msgid ""
"The :term:`py:bytes-like object` representing the icon. See "
":meth:`.ClientUser.edit` for more details on what is expected."
msgstr ""

#: discord.client.Client.create_guild:12 of
msgid "The code for a template to create the guild with.  .. versionadded:: 1.4"
msgstr ""

#: discord.client.Client.create_guild:12 of
msgid "The code for a template to create the guild with."
msgstr ""

#: discord.client.Client.create_guild:17
#: discord.template.Template.create_guild:13 of
msgid "Guild creation failed."
msgstr ""

#: discord.client.Client.create_guild:18
#: discord.template.Template.create_guild:14 of
msgid "Invalid icon image format given. Must be PNG or JPG."
msgstr ""

#: discord.client.Client.create_guild:20
#: discord.template.Template.create_guild:16 of
msgid "The guild created. This is not the same guild that is added to cache."
msgstr ""

#: discord.client.Client.fetch_stage_instance:3 of
msgid "Gets a :class:`.StageInstance` for a stage channel id."
msgstr ""

#: discord.client.Client.fetch_stage_instance:7 of
msgid "The stage channel ID."
msgstr ""

#: discord.channel.StageChannel.fetch_instance:7
#: discord.client.Client.fetch_stage_instance:10 of
msgid "The stage instance or channel could not be found."
msgstr ""

#: discord.channel.StageChannel.fetch_instance:8
#: discord.client.Client.fetch_stage_instance:11 of
msgid "Getting the stage instance failed."
msgstr ""

#: discord.client.Client.fetch_stage_instance:13 of
msgid "The stage instance from the stage channel ID."
msgstr ""

#: discord.client.Client.fetch_stage_instance:14 of
msgid ":class:`.StageInstance`"
msgstr ""

#: discord.client.Client.fetch_invite:3 of
msgid "Gets an :class:`.Invite` from a discord.gg URL or ID."
msgstr ""

#: discord.client.Client.fetch_invite:7 of
msgid ""
"If the invite is for a guild you have not joined, the guild and channel "
"attributes of the returned :class:`.Invite` will be "
":class:`.PartialInviteGuild` and :class:`.PartialInviteChannel` "
"respectively."
msgstr ""

#: discord.client.Client.fetch_invite:11 of
msgid "The Discord invite ID or URL (must be a discord.gg URL)."
msgstr ""

#: discord.client.Client.fetch_invite:13 of
msgid ""
"Whether to include count information in the invite. This fills the "
":attr:`.Invite.approximate_member_count` and "
":attr:`.Invite.approximate_presence_count` fields."
msgstr ""

#: discord.client.Client.fetch_invite:17 of
msgid ""
"Whether to include the expiration date of the invite. This fills the "
":attr:`.Invite.expires_at` field.  .. versionadded:: 2.0"
msgstr ""

#: discord.client.Client.fetch_invite:17 of
msgid ""
"Whether to include the expiration date of the invite. This fills the "
":attr:`.Invite.expires_at` field."
msgstr ""

#: discord.client.Client.fetch_invite:22 of
msgid ""
"The ID of the scheduled event to be associated with the event.  See "
":meth:`Invite.set_scheduled_event` for more info on event invite linking."
"  .. versionadded:: 2.0"
msgstr ""

#: discord.client.Client.fetch_invite:22 of
msgid "The ID of the scheduled event to be associated with the event."
msgstr ""

#: discord.client.Client.fetch_invite:24 of
msgid ""
"See :meth:`Invite.set_scheduled_event` for more info on event invite "
"linking."
msgstr ""

#: discord.client.Client.fetch_invite:30 of
msgid "The invite has expired or is invalid."
msgstr ""

#: discord.client.Client.fetch_invite:31 of
msgid "Getting the invite failed."
msgstr ""

#: discord.client.Client.fetch_invite:33 of
msgid "The invite from the URL/ID."
msgstr ""

#: discord.client.Client.fetch_invite:34 of
msgid ":class:`.Invite`"
msgstr ""

#: discord.client.Client.delete_invite:3 of
msgid "Revokes an :class:`.Invite`, URL, or ID to an invite."
msgstr ""

#: discord.client.Client.delete_invite:5 of
msgid ""
"You must have the :attr:`~.Permissions.manage_channels` permission in the"
" associated guild to do this."
msgstr ""

#: discord.client.Client.delete_invite:8 of
msgid "The invite to revoke."
msgstr ""

#: discord.client.Client.delete_invite:11 discord.invite.Invite.delete:10 of
msgid "You do not have permissions to revoke invites."
msgstr ""

#: discord.client.Client.delete_invite:12 discord.invite.Invite.delete:11 of
msgid "The invite is invalid or expired."
msgstr ""

#: discord.client.Client.delete_invite:13 discord.invite.Invite.delete:12 of
msgid "Revoking the invite failed."
msgstr ""

#: discord.client.Client.fetch_widget:3 of
msgid "Gets a :class:`.Widget` from a guild ID."
msgstr ""

#: discord.client.Client.fetch_widget:7 discord.guild.Guild.widget:7 of
msgid "The guild must have the widget enabled to get this information."
msgstr ""

#: discord.client.Client.fetch_widget:9 of
msgid "The ID of the guild."
msgstr ""

#: discord.client.Client.fetch_widget:12 discord.guild.Guild.widget:9 of
msgid "The widget for this guild is disabled."
msgstr ""

#: discord.client.Client.fetch_widget:13 discord.guild.Guild.widget:10 of
msgid "Retrieving the widget failed."
msgstr ""

#: discord.client.Client.fetch_widget:15 discord.guild.Guild.widget:12 of
msgid "The guild's widget."
msgstr ""

#: discord.client.Client.fetch_widget:16 of
msgid ":class:`.Widget`"
msgstr ""

#: discord.client.Client.application_info:3 of
msgid "Retrieves the bot's application information."
msgstr ""

#: discord.client.Client.application_info:5 of
msgid "Retrieving the information failed somehow."
msgstr ""

#: discord.client.Client.application_info:7 of
msgid "The bot's application information."
msgstr ""

#: discord.client.Client.application_info:8 of
msgid ":class:`.AppInfo`"
msgstr ""

#: discord.client.Client.fetch_user:3 of
msgid ""
"Retrieves a :class:`~discord.User` based on their ID. You do not have to "
"share any guilds with the user to get this information, however many "
"operations do require that you do."
msgstr ""

#: discord.client.Client.fetch_user:9 of
msgid ""
"This method is an API call. If you have :attr:`discord.Intents.members` "
"and member cache enabled, consider :meth:`get_user` instead."
msgstr ""

#: discord.client.Client.fetch_user:12 of
msgid "The user's ID to fetch from."
msgstr ""

#: discord.client.Client.fetch_user:15 of
msgid "A user with this ID does not exist."
msgstr ""

#: discord.client.Client.fetch_user:16 of
msgid "Fetching the user failed."
msgstr ""

#: discord.client.Client.fetch_user:18 of
msgid "The user you requested."
msgstr ""

#: discord.abc.Messageable:8 discord.abc.User:5
#: discord.client.Client.fetch_user:19 of
msgid ":class:`~discord.User`"
msgstr ""

#: discord.client.Client.fetch_channel:3 of
msgid ""
"Retrieves a :class:`.abc.GuildChannel`, :class:`.abc.PrivateChannel`, or "
":class:`.Thread` with the specified ID."
msgstr ""

#: discord.client.Client.fetch_channel:7 of
msgid ""
"This method is an API call. For general usage, consider "
":meth:`get_channel` instead."
msgstr ""

#: discord.client.Client.fetch_channel:11 discord.guild.Guild.fetch_channels:11
#: of
msgid "An unknown channel type was received from Discord."
msgstr ""

#: discord.client.Client.fetch_channel:12 discord.guild.Guild.fetch_channel:12
#: of
msgid "Retrieving the channel failed."
msgstr ""

#: discord.client.Client.fetch_channel:13 discord.guild.Guild.fetch_channel:13
#: of
msgid "Invalid Channel ID."
msgstr ""

#: discord.client.Client.fetch_channel:14 discord.guild.Guild.fetch_channel:14
#: of
msgid "You do not have permission to fetch this channel."
msgstr ""

#: discord.client.Client.fetch_channel:16 discord.guild.Guild.fetch_channel:16
#: of
msgid "The channel from the ID."
msgstr ""

#: discord.client.Client.fetch_channel:17 of
msgid ""
"Union[:class:`.abc.GuildChannel`, :class:`.abc.PrivateChannel`, "
":class:`.Thread`]"
msgstr ""

#: discord.client.Client.fetch_webhook:3 of
msgid "Retrieves a :class:`.Webhook` with the specified ID."
msgstr ""

#: discord.client.Client.fetch_webhook:5 of
msgid "Retrieving the webhook failed."
msgstr ""

#: discord.client.Client.fetch_webhook:6 of
msgid "Invalid webhook ID."
msgstr ""

#: discord.client.Client.fetch_webhook:7 of
msgid "You do not have permission to fetch this webhook."
msgstr ""

#: discord.client.Client.fetch_webhook:9 of
msgid "The webhook you requested."
msgstr ""

#: discord.client.Client.fetch_webhook:10 of
msgid ":class:`.Webhook`"
msgstr ""

#: discord.client.Client.fetch_sticker:3 of
msgid "Retrieves a :class:`.Sticker` with the specified ID."
msgstr ""

#: discord.client.Client.fetch_sticker:7 discord.sticker.StickerItem.fetch:5 of
msgid "Retrieving the sticker failed."
msgstr ""

#: discord.client.Client.fetch_sticker:8 of
msgid "Invalid sticker ID."
msgstr ""

#: discord.client.Client.fetch_sticker:10 of
msgid "The sticker you requested."
msgstr ""

#: discord.client.Client.fetch_sticker:11 of
msgid "Union[:class:`.StandardSticker`, :class:`.GuildSticker`]"
msgstr ""

#: discord.client.Client.fetch_premium_sticker_packs:3 of
msgid "Retrieves all available premium sticker packs."
msgstr ""

#: discord.client.Client.fetch_premium_sticker_packs:7 of
msgid "Retrieving the sticker packs failed."
msgstr ""

#: discord.client.Client.fetch_premium_sticker_packs:9 of
msgid "All available premium sticker packs."
msgstr ""

#: discord.client.Client.fetch_premium_sticker_packs:10 of
msgid "List[:class:`.StickerPack`]"
msgstr ""

#: discord.client.Client.create_dm:3 of
msgid "Creates a :class:`.DMChannel` with this user."
msgstr ""

#: discord.client.Client.create_dm:5
#: discord.member.flatten_user.<locals>.generate_function.<locals>.general:5
#: discord.user.User.create_dm:5 of
msgid ""
"This should be rarely called, as this is done transparently for most "
"people."
msgstr ""

#: discord.client.Client.create_dm:10 of
msgid "The user to create a DM with."
msgstr ""

#: discord.abc.GuildChannel.clone:20 discord.channel.CategoryChannel.clone:20
#: discord.channel.StageChannel.clone:20 discord.channel.VoiceChannel.clone:20
#: discord.channel._TextChannel.clone:20 discord.client.Client.create_dm:13
#: discord.member.flatten_user.<locals>.generate_function.<locals>.general:8
#: discord.user.User.create_dm:8 of
msgid "The channel that was created."
msgstr ""

#: discord.client.Client.create_dm:14
#: discord.member.flatten_user.<locals>.generate_function.<locals>.general:9
#: discord.user.User.create_dm:9 of
msgid ":class:`.DMChannel`"
msgstr ""

#: discord.client.Client.add_view:1 of
msgid "Registers a :class:`~discord.ui.View` for persistent listening."
msgstr ""

#: discord.client.Client.add_view:3 of
msgid ""
"This method should be used for when a view is comprised of components "
"that last longer than the lifecycle of the program."
msgstr ""

#: discord.client.Client.add_view:8 of
msgid "The view to register for dispatching."
msgstr ""

#: discord.client.Client.add_view:10 of
msgid ""
"The message ID that the view is attached to. This is currently used to "
"refresh the view's state during message update events. If not given then "
"message update events are not propagated for the view."
msgstr ""

#: discord.client.Client.add_view:15 of
msgid "A view was not passed."
msgstr ""

#: discord.client.Client.add_view:16 of
msgid ""
"The view is not persistent. A persistent view has no timeout     and all "
"their components have an explicitly provided ``custom_id``."
msgstr ""

#: discord.Bot.persistent_views:1 discord.Client.persistent_views:1 of
msgid "A sequence of persistent views added to the client."
msgstr ""

#: discord.Bot.persistent_views:5 discord.Client.persistent_views:5 of
msgid "Sequence[:class:`.View`]"
msgstr ""

#: ../../api.rst:52
msgid "AutoShardedClient"
msgstr ""

#: discord.shard.AutoShardedClient:1 of
msgid ""
"A client similar to :class:`Client` except it handles the complications "
"of sharding for the user into a more manageable and transparent single "
"process bot."
msgstr ""

#: discord.shard.AutoShardedClient:5 of
msgid ""
"When using this client, you will be able to use it as-if it was a regular"
" :class:`Client` with a single shard when implementation wise internally "
"it is split up into multiple shards. This allows you to not have to deal "
"with IPC or other complicated infrastructure."
msgstr ""

#: discord.shard.AutoShardedClient:10 of
msgid ""
"It is recommended to use this client only if you have surpassed at least "
"1000 guilds."
msgstr ""

#: discord.shard.AutoShardedClient:13 of
msgid ""
"If no :attr:`.shard_count` is provided, then the library will use the Bot"
" Gateway endpoint call to figure out how many shards to use."
msgstr ""

#: discord.shard.AutoShardedClient:16 of
msgid ""
"If a ``shard_ids`` parameter is given, then those shard IDs will be used "
"to launch the internal shards. Note that :attr:`.shard_count` must be "
"provided if this is used. By default, when omitted, the client will "
"launch shards from 0 to ``shard_count - 1``."
msgstr ""

#: discord.shard.AutoShardedClient:23 of
msgid "An optional list of shard_ids to launch the shards with."
msgstr ""

#: discord.bot.Bot:45 discord.cog.CogMeta:74
#: discord.commands.core.MessageCommand:22
#: discord.commands.core.SlashCommand:30
#: discord.commands.core.SlashCommandGroup:22
#: discord.commands.core.UserCommand:22 discord.shard.AutoShardedClient:25 of
msgid "Optional[List[:class:`int`]]"
msgstr ""

#: discord.AutoShardedClient.latency:3 of
msgid ""
"This operates similarly to :meth:`Client.latency` except it uses the "
"average latency of every shard's latency. To get a list of shard latency,"
" check the :attr:`latencies` property. Returns ``nan`` if there are no "
"shards ready."
msgstr ""

#: discord.AutoShardedClient.latencies:1 of
msgid ""
"List[Tuple[:class:`int`, :class:`float`]]: A list of latencies between a "
"HEARTBEAT and a HEARTBEAT_ACK in seconds."
msgstr ""

#: discord.AutoShardedClient.latencies:4 of
msgid "This returns a list of tuples with elements ``(shard_id, latency)``."
msgstr ""

#: discord.shard.AutoShardedClient.get_shard:1 of
msgid ""
"Optional[:class:`ShardInfo`]: Gets the shard information at a given shard"
" ID or ``None`` if not found."
msgstr ""

#: discord.AutoShardedClient.shards:1 of
msgid "Returns a mapping of shard IDs to their respective info object."
msgstr ""

#: discord.AutoShardedClient.shards:3 of
msgid "Mapping[int, :class:`ShardInfo`]"
msgstr ""

#: discord.shard.AutoShardedClient.change_presence:5 of
msgid "Example: ::"
msgstr ""

#: discord.shard.AutoShardedClient.change_presence:15 of
msgid ""
"Indicates what status to change to. If ``None``, then "
":attr:`Status.online` is used."
msgstr ""

#: discord.shard.AutoShardedClient.change_presence:18 of
msgid ""
"The shard_id to change the presence to. If not specified or ``None``, "
"then it will change the presence of every shard the bot can see."
msgstr ""

#: discord.shard.AutoShardedClient.change_presence:23 of
msgid "If the ``activity`` parameter is not of proper type."
msgstr ""

#: discord.shard.AutoShardedClient.is_ws_ratelimited:1
#: discord.shard.ShardInfo.is_ws_ratelimited:1 of
msgid ":class:`bool`: Whether the websocket is currently rate limited."
msgstr ""

#: discord.shard.AutoShardedClient.is_ws_ratelimited:6 of
msgid ""
"This implementation checks if any of the shards are rate limited. For "
"more granular control, consider :meth:`ShardInfo.is_ws_ratelimited`."
msgstr ""

#: ../../api.rst:60
msgid "Bots"
msgstr ""

#: ../../api.rst:63
msgid "Bot"
msgstr ""

#: discord.bot.Bot:1 of
msgid "Represents a discord bot."
msgstr ""

#: discord.bot.Bot:3 of
msgid ""
"This class is a subclass of :class:`discord.Client` and as a result "
"anything that you can do with a :class:`discord.Client` you can do with "
"this bot."
msgstr ""

#: discord.bot.Bot:7 of
msgid ""
"This class also subclasses ``ApplicationCommandMixin`` to provide the "
"functionality to manage commands."
msgstr ""

#: discord.bot.Bot:14 of
msgid "The content prefixed into the default help message."
msgstr ""

#: ../../api.rst:3567 ../../api.rst:3708 ../../api.rst:3728 ../../api.rst:3829
#: ../../api.rst:3941 ../../api.rst:3949 ../../docstring
#: discord.ApplicationCommand.full_parent_name:6
#: discord.ApplicationCommand.qualified_name:7
#: discord.ApplicationContext.guild_locale:4
#: discord.ApplicationContext.locale:4 discord.Asset.key:3 discord.Asset.url:3
#: discord.CategoryChannel.jump_url:5 discord.CategoryChannel.mention:3
#: discord.ClientUser.display_name:7 discord.ClientUser.jump_url:5
#: discord.ClientUser.mention:3 discord.Cog.description:3
#: discord.Cog.qualified_name:3 discord.DMChannel.jump_url:5
#: discord.Emoji.url:3 discord.ForumChannel.jump_url:5
#: discord.ForumChannel.mention:3 discord.GroupChannel.jump_url:5
#: discord.Guild.jump_url:5 discord.Invite.id:3 discord.Invite.url:3
#: discord.Member.display_name:7 discord.Member.mention:3
#: discord.Member.raw_status:5 discord.Message.clean_content:15
#: discord.Message.jump_url:3 discord.Message.system_content:8
#: discord.MessageReference.jump_url:5 discord.PartialEmoji.url:5
#: discord.PartialInviteChannel.mention:3 discord.PartialMessage.jump_url:3
#: discord.Role.mention:3 discord.ScheduledEvent.url:3 discord.Spotify.album:3
#: discord.Spotify.album_cover_url:3 discord.Spotify.artist:6
#: discord.Spotify.name:3 discord.Spotify.party_id:3 discord.Spotify.title:3
#: discord.Spotify.track_id:3 discord.Spotify.track_url:5
#: discord.StageChannel.jump_url:5 discord.StageChannel.mention:3
#: discord.SyncWebhook.url:3 discord.Template.url:5
#: discord.TextChannel.jump_url:5 discord.TextChannel.mention:3
#: discord.Thread.jump_url:5 discord.Thread.mention:3
#: discord.User.display_name:7 discord.User.jump_url:5 discord.User.mention:3
#: discord.VoiceChannel.jump_url:5 discord.VoiceChannel.mention:3
#: discord.Webhook.url:3 discord.Widget.json_url:3
#: discord.WidgetChannel.mention:3 discord.WidgetMember.display_name:3
#: discord.WidgetMember.jump_url:5 discord.WidgetMember.mention:3
#: discord.abc.GuildChannel:17 discord.abc.GuildChannel.jump_url:5
#: discord.abc.GuildChannel.mention:3 discord.abc.User:15 discord.abc.User:21
#: discord.abc.User.display_name:3 discord.abc.User.mention:3
#: discord.activity.Game:30 discord.activity.Streaming:55
#: discord.appinfo.AppInfo:14 discord.appinfo.AppInfo:34
#: discord.appinfo.AppInfo:63 discord.appinfo.AppInfo:72
#: discord.appinfo.PartialAppInfo:15 discord.appinfo.PartialAppInfo:21
#: discord.appinfo.PartialAppInfo:34 discord.appinfo.PartialAppInfo:41
#: discord.automod.AutoModRule:33 discord.bot.Bot:16
#: discord.channel.CategoryChannel:27 discord.channel.ForumChannel:25
#: discord.channel.StageChannel:27 discord.channel.TextChannel:25
#: discord.channel.VoiceChannel:25 discord.cog.CogMeta:37
#: discord.cog.CogMeta:45 discord.commands.core.MessageCommand:10
#: discord.commands.core.SlashCommand:12 discord.commands.core.SlashCommand:49
#: discord.commands.core.SlashCommandGroup:10
#: discord.commands.core.UserCommand:10 discord.commands.options.Option:32
#: discord.commands.options.OptionChoice:9 discord.components.SelectOption:12
#: discord.components.SelectOption:20 discord.embeds.Embed:31
#: discord.embeds.Embed:40 discord.embeds.Embed:48 discord.embeds.Embed:55
#: discord.embeds.EmbedField:9 discord.embeds.EmbedField:15
#: discord.emoji.Emoji:33 discord.errors.ConnectionClosed:14
#: discord.errors.ExtensionError:9 discord.errors.ExtensionFailed:9
#: discord.errors.ExtensionNotFound:12 discord.errors.HTTPException:15
#: discord.guild.Guild:27 discord.integrations.BotIntegration:15
#: discord.integrations.BotIntegration:27 discord.integrations.Integration:15
#: discord.integrations.Integration:27
#: discord.integrations.IntegrationAccount:9
#: discord.integrations.IntegrationAccount:15
#: discord.integrations.IntegrationApplication:15
#: discord.integrations.IntegrationApplication:27
#: discord.integrations.IntegrationApplication:33
#: discord.integrations.StreamIntegration:15
#: discord.integrations.StreamIntegration:27
#: discord.interactions.Interaction:55 discord.interactions.Interaction:67
#: discord.interactions.Interaction:73
#: discord.interactions.MessageInteraction:27 discord.invite.Invite:59
#: discord.invite.PartialInviteChannel:28 discord.invite.PartialInviteGuild:28
#: discord.message.Attachment:52 discord.message.Attachment:59
#: discord.message.Attachment:67 discord.message.Message:43
#: discord.raw_models.AutoModActionExecutionEvent:84
#: discord.raw_models.AutoModActionExecutionEvent:90
#: discord.raw_models.AutoModActionExecutionEvent:96
#: discord.raw_models.RawReactionActionEvent:51
#: discord.raw_models.RawScheduledEventSubscription:29 discord.role.Role:47
#: discord.scheduled_events.ScheduledEvent:33
#: discord.stage_instance.StageInstance:41 discord.sticker.GuildSticker:23
#: discord.sticker.GuildSticker:35 discord.sticker.GuildSticker:66
#: discord.sticker.StandardSticker:23 discord.sticker.StandardSticker:35
#: discord.sticker.Sticker:23 discord.sticker.Sticker:35
#: discord.sticker.Sticker:53 discord.sticker.StickerItem:23
#: discord.sticker.StickerItem:41 discord.sticker.StickerPack:23
#: discord.sticker.StickerPack:29 discord.team.Team:13
#: discord.team.TeamMember:27 discord.team.TeamMember:39
#: discord.template.Template:9 discord.template.Template:21
#: discord.template.Template:27 discord.threads.Thread:27
#: discord.ui.InputText.custom_id:3 discord.ui.InputText.label:3
#: discord.ui.Modal.custom_id:3 discord.ui.Modal.title:3
#: discord.ui.Select.custom_id:3 discord.user.ClientUser:25
#: discord.user.ClientUser:37 discord.user.User:25 discord.user.User:37
#: discord.utils.escape_markdown:18 discord.utils.escape_mentions:17
#: discord.utils.format_dt:34 discord.utils.oauth_url:23
#: discord.utils.remove_markdown:17 discord.utils.resolve_invite:7
#: discord.utils.resolve_template:9 discord.voice_client.VoiceClient:17
#: discord.voice_client.VoiceClient:23 discord.voice_client.VoiceClient:29
#: discord.webhook.async_.PartialWebhookChannel:17
#: discord.webhook.async_.PartialWebhookGuild:17
#: discord.welcome_screen.WelcomeScreen:9
#: discord.welcome_screen.WelcomeScreenChannel:15 discord.widget.Widget:27
#: discord.widget.WidgetChannel:31 discord.widget.WidgetMember:31
#: discord.widget.WidgetMember:37 of
msgid ":class:`str`"
msgstr ""

#: discord.bot.Bot:20 of
msgid ""
"The user ID that owns the bot. If this is not set and is then queried via"
" :meth:`.is_owner` then it is fetched automatically using "
":meth:`~.Bot.application_info`."
msgstr ""

#: discord.bot.Bot:28 of
msgid ""
"The user IDs that owns the bot. This is similar to :attr:`owner_id`. If "
"this is not set and the application is team based, then it is fetched "
"automatically using :meth:`~.Bot.application_info`. For performance "
"reasons it is recommended to use a :class:`set` for the collection. You "
"cannot set both ``owner_id`` and ``owner_ids``."
msgstr ""

#: discord.bot.Bot:36 of
msgid "Optional[Collection[:class:`int`]]"
msgstr ""

#: discord.bot.Bot:40 of
msgid ""
"Guild IDs of guilds to use for testing commands. The bot will not create "
"any global commands if debug guild IDs are passed."
msgstr ""

#: discord.bot.Bot:49 of
msgid ""
"Whether to automatically sync slash commands. This will call "
"sync_commands in on_connect, and in :attr:`.process_application_commands`"
" if the command is not found. Defaults to ``True``."
msgstr ""

#: ../../api.rst:3661 ../../api.rst:3780 ../../api.rst:3788 ../../api.rst:3813
#: ../../api.rst:3821 ../../api.rst:3878 ../../api.rst:3957 ../../api.rst:3963
#: ../../api.rst:3969 ../../api.rst:3989 ../../docstring
#: discord.ApplicationFlags.app_commands_badge:6
#: discord.ApplicationFlags.embedded:3
#: discord.ApplicationFlags.gateway_guild_members:4
#: discord.ApplicationFlags.gateway_guild_members_limited:4
#: discord.ApplicationFlags.gateway_message_content:3
#: discord.ApplicationFlags.gateway_message_content_limited:4
#: discord.ApplicationFlags.gateway_presence:4
#: discord.ApplicationFlags.gateway_presence_limited:4
#: discord.ApplicationFlags.group_dm_create:3
#: discord.ApplicationFlags.managed_emoji:3
#: discord.ApplicationFlags.rpc_has_connected:3
#: discord.ApplicationFlags.verification_pending_guild_limit:4
#: discord.CategoryChannel.permissions_synced:8 discord.ChannelFlags.pinned:3
#: discord.ForumChannel.permissions_synced:8 discord.Guild.chunked:9
#: discord.Guild.large:6 discord.Intents.auto_moderation_configuration:9
#: discord.Intents.auto_moderation_execution:7 discord.Intents.bans:10
#: discord.Intents.dm_messages:25 discord.Intents.dm_reactions:18
#: discord.Intents.dm_typing:11 discord.Intents.emojis:6
#: discord.Intents.emojis_and_stickers:21 discord.Intents.guild_messages:35
#: discord.Intents.guild_reactions:18 discord.Intents.guild_typing:11
#: discord.Intents.guilds:23 discord.Intents.integrations:12
#: discord.Intents.invites:10 discord.Intents.members:32
#: discord.Intents.message_content:22 discord.Intents.messages:29
#: discord.Intents.presences:20 discord.Intents.reactions:18
#: discord.Intents.scheduled_events:18 discord.Intents.typing:11
#: discord.Intents.voice_states:17 discord.Intents.webhooks:9
#: discord.MemberCacheFlags.interaction:6 discord.MemberCacheFlags.joined:8
#: discord.MemberCacheFlags.voice:7 discord.MessageFlags.crossposted:3
#: discord.MessageFlags.ephemeral:5
#: discord.MessageFlags.failed_to_mention_some_roles_in_thread:5
#: discord.MessageFlags.has_thread:5 discord.MessageFlags.is_crossposted:3
#: discord.MessageFlags.loading:7 discord.MessageFlags.source_message_deleted:3
#: discord.MessageFlags.suppress_embeds:3 discord.MessageFlags.urgent:5
#: discord.Permissions.add_reactions:3 discord.Permissions.administrator:5
#: discord.Permissions.attach_files:3 discord.Permissions.ban_members:3
#: discord.Permissions.change_nickname:3 discord.Permissions.connect:3
#: discord.Permissions.create_instant_invite:3
#: discord.Permissions.create_private_threads:5
#: discord.Permissions.create_public_threads:5
#: discord.Permissions.deafen_members:3 discord.Permissions.embed_links:3
#: discord.Permissions.external_emojis:3
#: discord.Permissions.external_stickers:5 discord.Permissions.kick_members:3
#: discord.Permissions.manage_channels:5 discord.Permissions.manage_emojis:3
#: discord.Permissions.manage_emojis_and_stickers:5
#: discord.Permissions.manage_events:5 discord.Permissions.manage_guild:3
#: discord.Permissions.manage_messages:7 discord.Permissions.manage_nicknames:3
#: discord.Permissions.manage_permissions:5 discord.Permissions.manage_roles:5
#: discord.Permissions.manage_threads:5 discord.Permissions.manage_webhooks:3
#: discord.Permissions.mention_everyone:3
#: discord.Permissions.moderate_members:5 discord.Permissions.move_members:3
#: discord.Permissions.mute_members:3 discord.Permissions.priority_speaker:3
#: discord.Permissions.read_message_history:3
#: discord.Permissions.read_messages:5 discord.Permissions.request_to_speak:5
#: discord.Permissions.send_messages:3
#: discord.Permissions.send_messages_in_threads:5
#: discord.Permissions.send_tts_messages:3 discord.Permissions.speak:3
#: discord.Permissions.start_embedded_activities:5 discord.Permissions.stream:3
#: discord.Permissions.use_application_commands:5
#: discord.Permissions.use_external_emojis:5
#: discord.Permissions.use_external_stickers:5
#: discord.Permissions.use_slash_commands:5
#: discord.Permissions.use_voice_activation:3
#: discord.Permissions.view_audit_log:3 discord.Permissions.view_channel:3
#: discord.Permissions.view_guild_insights:5
#: discord.PublicUserFlags.bot_http_interactions:5
#: discord.PublicUserFlags.bug_hunter:3
#: discord.PublicUserFlags.bug_hunter_level_2:3
#: discord.PublicUserFlags.discord_certified_moderator:5
#: discord.PublicUserFlags.early_supporter:3
#: discord.PublicUserFlags.early_verified_bot_developer:5
#: discord.PublicUserFlags.hypesquad:3
#: discord.PublicUserFlags.hypesquad_balance:3
#: discord.PublicUserFlags.hypesquad_bravery:3
#: discord.PublicUserFlags.hypesquad_brilliance:3
#: discord.PublicUserFlags.partner:3
#: discord.PublicUserFlags.premium_promo_dismissed:3
#: discord.PublicUserFlags.staff:3 discord.PublicUserFlags.system:3
#: discord.PublicUserFlags.team_user:3 discord.PublicUserFlags.verified_bot:3
#: discord.PublicUserFlags.verified_bot_developer:3
#: discord.StageChannel.permissions_synced:8
#: discord.SystemChannelFlags.guild_reminder_notifications:5
#: discord.SystemChannelFlags.join_notification_replies:5
#: discord.SystemChannelFlags.join_notifications:3
#: discord.SystemChannelFlags.premium_subscriptions:3
#: discord.TextChannel.permissions_synced:8
#: discord.VoiceChannel.permissions_synced:8 discord.WelcomeScreen.enabled:3
#: discord.abc.GuildChannel.permissions_synced:8
#: discord.abc.Messageable.can_send:6 discord.abc.User:33
#: discord.appinfo.AppInfo:41 discord.appinfo.AppInfo:48
#: discord.automod.AutoModRule:69 discord.bot.Bot:54
#: discord.bot.BotBase.is_owner:17 discord.channel.CategoryChannel:56
#: discord.channel.ForumChannel:86 discord.channel.TextChannel:82
#: discord.commands.core.ApplicationCommand.is_on_cooldown:11
#: discord.commands.core.SlashCommand:55
#: discord.commands.core.SlashCommandGroup:35 discord.components.Button:35
#: discord.components.SelectMenu:49 discord.components.SelectOption:33
#: discord.embeds.EmbedField:21 discord.emoji.Emoji:45 discord.emoji.Emoji:51
#: discord.emoji.Emoji:57 discord.emoji.Emoji:69 discord.file.File:42
#: discord.guild.Guild:75 discord.guild.Guild:200
#: discord.integrations.BotIntegration:33 discord.integrations.Integration:33
#: discord.integrations.StreamIntegration:33
#: discord.integrations.StreamIntegration:39 discord.invite.Invite:71
#: discord.invite.Invite:84 discord.member.Member:62
#: discord.member.Member.mentioned_in:7 discord.member.VoiceState:7
#: discord.member.VoiceState:13 discord.member.VoiceState:19
#: discord.member.VoiceState:25 discord.member.VoiceState:33
#: discord.member.VoiceState:39 discord.member.VoiceState:49
#: discord.member.VoiceState:67 discord.mentions.AllowedMentions:11
#: discord.mentions.AllowedMentions:40 discord.message.Attachment:81
#: discord.message.Message:23 discord.message.Message:89
#: discord.message.Message:142 discord.message.MessageReference:33
#: discord.opus.is_loaded:7 discord.partial_emoji.PartialEmoji:38
#: discord.permissions.PermissionOverwrite.is_empty:7
#: discord.reaction.Reaction:42 discord.role.Role:59 discord.role.Role:81
#: discord.role.Role:87 discord.stage_instance.StageInstance:53
#: discord.sticker.GuildSticker:47 discord.team.TeamMember:51
#: discord.threads.Thread:95 discord.threads.Thread:101
#: discord.threads.Thread:108 discord.ui.Button.disabled:3
#: discord.ui.Select.disabled:3 discord.ui.view.View:30
#: discord.ui.view.View.interaction_check:22 discord.ui.view.View.wait:8
#: discord.user.BaseUser.mentioned_in:7 discord.user.ClientUser:43
#: discord.user.ClientUser:51 discord.user.ClientUser:57
#: discord.user.ClientUser:69 discord.user.User:43 discord.user.User:49
#: discord.widget.WidgetMember:43 of
msgid ":class:`bool`"
msgstr ""

#: discord.bot.ApplicationCommandMixin.command:1
#: discord.commands.core.command:1 of
msgid "An alias for :meth:`application_command`."
msgstr ""

#: discord.bot.ApplicationCommandMixin.command:5 of
msgid "This decorator is overridden by :class:`discord.ext.commands.Bot`."
msgstr ""

#: discord.bot.ApplicationCommandMixin.application_command:6
#: discord.bot.ApplicationCommandMixin.command:9 of
msgid ""
"A decorator that converts the provided method into an "
":class:`.ApplicationCommand`, adds it to the bot, then returns it."
msgstr ""

#: discord.bot.ApplicationCommandMixin.application_command:8
#: discord.bot.ApplicationCommandMixin.command:11 of
msgid "Callable[..., :class:`ApplicationCommand`]"
msgstr ""

#: discord.bot.ApplicationCommandMixin.message_command:1 of
msgid ""
"A shortcut decorator that invokes :func:`command` and adds it to the "
"internal command list via :meth:`add_application_command`. This shortcut "
"is made specifically for :class:`.MessageCommand`."
msgstr ""

#: discord.bot.ApplicationCommandMixin.message_command:7 of
msgid ""
"A decorator that converts the provided method into a "
":class:`.MessageCommand`, adds it to the bot, then returns it."
msgstr ""

#: discord.bot.ApplicationCommandMixin.message_command:9 of
msgid "Callable[..., :class:`MessageCommand`]"
msgstr ""

#: discord.bot.ApplicationCommandMixin.slash_command:1 of
msgid ""
"A shortcut decorator that invokes :func:`command` and adds it to the "
"internal command list via :meth:`add_application_command`. This shortcut "
"is made specifically for :class:`.SlashCommand`."
msgstr ""

#: discord.bot.ApplicationCommandMixin.slash_command:7 of
msgid ""
"A decorator that converts the provided method into a "
":class:`.SlashCommand`, adds it to the bot, then returns it."
msgstr ""

#: discord.bot.ApplicationCommandMixin.slash_command:9 of
msgid "Callable[..., :class:`SlashCommand`]"
msgstr ""

#: discord.bot.ApplicationCommandMixin.user_command:1 of
msgid ""
"A shortcut decorator that invokes :func:`command` and adds it to the "
"internal command list via :meth:`add_application_command`. This shortcut "
"is made specifically for :class:`.UserCommand`."
msgstr ""

#: discord.bot.ApplicationCommandMixin.user_command:7 of
msgid ""
"A decorator that converts the provided method into a "
":class:`.UserCommand`, adds it to the bot, then returns it."
msgstr ""

#: discord.bot.ApplicationCommandMixin.user_command:9 of
msgid "Callable[..., :class:`UserCommand`]"
msgstr ""

#: discord.bot.BotBase.listen:1 of
msgid ""
"A decorator that registers another function as an external event "
"listener. Basically this allows you to listen to multiple events from "
"different places e.g. such as :func:`.on_ready`"
msgstr ""

#: discord.bot.BotBase.listen:5 of
msgid "The functions being listened to must be a :ref:`coroutine <coroutine>`."
msgstr ""

#: discord.bot.BotBase.listen:21 of
msgid "Would print one and two in an unspecified order."
msgstr ""

#: discord.bot.BotBase.listen:23 of
msgid "The function being listened to is not a coroutine."
msgstr ""

#: discord.bot.ApplicationCommandMixin.add_application_command:1 of
msgid "Adds a :class:`.ApplicationCommand` into the internal list of commands."
msgstr ""

#: discord.bot.ApplicationCommandMixin.add_application_command:3 of
msgid ""
"This is usually not called, instead the :meth:`command` or other shortcut"
" decorators are used instead."
msgstr ""

#: discord.bot.ApplicationCommandMixin.add_application_command:8 of
msgid "The command to add."
msgstr ""

#: discord.bot.BotBase.add_check:1 of
msgid ""
"Adds a global check to the bot. This is the non-decorator interface to "
":meth:`.check` and :meth:`.check_once`."
msgstr ""

#: discord.bot.BotBase.add_check:4 of
msgid "The function that was used as a global check."
msgstr ""

#: discord.bot.BotBase.add_check:5 of
msgid "If the function should only be called once per :meth:`.Bot.invoke` call."
msgstr ""

#: discord.cog.CogMixin.add_cog:1 of
msgid "Adds a \"cog\" to the bot."
msgstr ""

#: discord.cog.CogMixin.add_cog:3 of
msgid "A cog is a class that has its own event listeners and commands."
msgstr ""

#: discord.cog.CogMixin.add_cog:7 of
msgid ""
":exc:`.ClientException` is raised when a cog with the same name is "
"already loaded."
msgstr ""

#: discord.cog.CogMixin.add_cog:10 of
msgid "The cog to register to the bot."
msgstr ""

#: discord.cog.CogMixin.add_cog:12 of
msgid ""
"If a previously loaded cog with the same name should be ejected instead "
"of raising an error.  .. versionadded:: 2.0"
msgstr ""

#: discord.cog.CogMixin.add_cog:12 of
msgid ""
"If a previously loaded cog with the same name should be ejected instead "
"of raising an error."
msgstr ""

#: discord.cog.CogMixin.add_cog:18 of
msgid "The cog does not inherit from :class:`.Cog`."
msgstr ""

#: discord.cog.CogMixin.add_cog:19 of
msgid "An error happened during loading."
msgstr ""

#: discord.cog.CogMixin.add_cog:20 of
msgid "A cog with the same name is already loaded."
msgstr ""

#: discord.bot.BotBase.add_listener:1 of
msgid "The non decorator alternative to :meth:`.listen`."
msgstr ""

#: discord.bot.BotBase.add_listener:3 of
msgid "The function to call."
msgstr ""

#: discord.bot.BotBase.add_listener:5 of
msgid "The name of the event to listen for. Defaults to ``func.__name__``."
msgstr ""

#: discord.bot.BotBase.after_invoke:1 of
msgid ""
"A decorator that registers a coroutine as a post-invoke hook. A post-"
"invoke hook is called directly after the command is called. This makes it"
" a useful function to clean-up database connections or any type of clean "
"up required. This post-invoke hook takes a sole parameter, a "
":class:`.Context`."
msgstr ""

#: discord.bot.BotBase.after_invoke:9 of
msgid ""
"Similar to :meth:`~.Bot.before_invoke`\\, this is not called unless "
"checks and argument parsing procedures succeed. This hook is, however, "
"**always** called regardless of the internal command callback raising an "
"error (i.e. :exc:`.CommandInvokeError`\\). This makes it ideal for clean-"
"up scenarios."
msgstr ""

#: discord.bot.BotBase.after_invoke:15
#: discord.commands.core.ApplicationCommand.after_invoke:9 of
msgid "The coroutine to register as the post-invoke hook."
msgstr ""

#: discord.bot.ApplicationCommandMixin.application_command:1 of
msgid ""
"A shortcut decorator that invokes :func:`command` and adds it to the "
"internal command list via :meth:`~.Bot.add_application_command`."
msgstr ""

#: discord.bot.BotBase.before_invoke:1 of
msgid ""
"A decorator that registers a coroutine as a pre-invoke hook. A pre-invoke"
" hook is called directly before the command is called. This makes it a "
"useful function to set up database connections or any type of set up "
"required. This pre-invoke hook takes a sole parameter, a "
":class:`.Context`."
msgstr ""

#: discord.bot.BotBase.before_invoke:9 of
msgid ""
"The :meth:`~.Bot.before_invoke` and :meth:`~.Bot.after_invoke` hooks are "
"only called if all checks and argument parsing procedures pass without "
"error. If any check or argument parsing procedures fail then the hooks "
"are not called."
msgstr ""

#: discord.bot.BotBase.before_invoke:14
#: discord.commands.core.ApplicationCommand.before_invoke:9 of
msgid "The coroutine to register as the pre-invoke hook."
msgstr ""

#: discord.bot.BotBase.check:1 of
msgid ""
"A decorator that adds a global check to the bot. A global check is "
"similar to a :func:`.check` that is applied on a per-command basis except"
" it is run before any command checks have been verified and applies to "
"every command the bot has."
msgstr ""

#: discord.bot.BotBase.check:7 discord.bot.BotBase.check_once:13 of
msgid ""
"This function can either be a regular function or a coroutine. Similar to"
" a command :func:`.check`, this takes a single parameter of type "
":class:`.Context` and can only raise exceptions inherited from "
":exc:`.ApplicationCommandError`."
msgstr ""

#: discord.bot.BotBase.check_once:1 of
msgid ""
"A decorator that adds a \"call once\" global check to the bot. Unlike "
"regular global checks, this one is called only once per "
":meth:`.Bot.invoke` call. Regular global checks are called whenever a "
"command is called or :meth:`.Command.can_run` is called. This type of "
"check bypasses that and ensures that it's called only once, even inside "
"the default help command."
msgstr ""

#: discord.bot.BotBase.check_once:8 of
msgid ""
"When using this function the :class:`.Context` sent to a group subcommand"
" may only parse the parent command and not the subcommands due to it "
"being invoked once per :meth:`.Bot.invoke` call."
msgstr ""

#: discord.Bot.cogs:1 of
msgid "A read-only mapping of cog name to cog."
msgstr ""

#: discord.Bot.cogs:3 of
msgid "Mapping[:class:`str`, :class:`Cog`]"
msgstr ""

#: discord.bot.ApplicationCommandMixin.create_group:1 of
msgid ""
"A shortcut method that creates a slash command group with no subcommands "
"and adds it to the internal command list via "
":meth:`add_application_command`."
msgstr ""

#: discord.bot.ApplicationCommandMixin.create_group:6
#: discord.commands.core.SlashCommandGroup.create_subgroup:3 of
msgid "The name of the group to create."
msgstr ""

#: discord.bot.ApplicationCommandMixin.create_group:8
#: discord.bot.ApplicationCommandMixin.group:8
#: discord.commands.core.SlashCommandGroup.create_subgroup:5
#: discord.commands.core.SlashCommandGroup.subgroup:8 of
msgid "The description of the group to create."
msgstr ""

#: discord.bot.ApplicationCommandMixin.create_group:10
#: discord.bot.ApplicationCommandMixin.group:10
#: discord.commands.core.SlashCommandGroup.create_subgroup:7
#: discord.commands.core.SlashCommandGroup.subgroup:10 of
msgid ""
"A list of the IDs of each guild this group should be added to, making it "
"a guild command. This will be a global command if ``None`` is passed."
msgstr ""

#: discord.bot.ApplicationCommandMixin.create_group:13 of
msgid "Any additional keyword arguments to pass to :class:`.SlashCommandGroup`."
msgstr ""

#: discord.bot.ApplicationCommandMixin.create_group:15
#: discord.bot.ApplicationCommandMixin.group:14
#: discord.commands.core.SlashCommandGroup.create_subgroup:28
#: discord.commands.core.SlashCommandGroup.subgroup:14 of
msgid "The slash command group that was created."
msgstr ""

#: discord.Bot.extensions:1 of
msgid "A read-only mapping of extension name to extension."
msgstr ""

#: discord.Bot.extensions:3 of
msgid "Mapping[:class:`str`, :class:`py:types.ModuleType`]"
msgstr ""

#: discord.bot.ApplicationCommandMixin.get_application_command:1 of
msgid "Get a :class:`.ApplicationCommand` from the internal list of commands."
msgstr ""

#: discord.bot.ApplicationCommandMixin.get_application_command:6 of
msgid "The name of the command to get."
msgstr ""

#: discord.bot.ApplicationCommandMixin.get_application_command:8 of
msgid "The guild ids associated to the command to get."
msgstr ""

#: discord.bot.ApplicationCommandMixin.get_application_command:10 of
msgid "The type of the command to get. Defaults to :class:`.SlashCommand`."
msgstr ""

#: discord.bot.ApplicationCommandMixin.get_application_command:13 of
msgid "The command that was requested. If not found, returns ``None``."
msgstr ""

#: discord.bot.ApplicationCommandMixin.get_application_command:14
#: discord.bot.ApplicationCommandMixin.remove_application_command:11 of
msgid "Optional[:class:`.ApplicationCommand`]"
msgstr ""

#: discord.bot.ApplicationCommandMixin.get_application_context:3 of
msgid "Returns the invocation context from the interaction."
msgstr ""

#: discord.bot.ApplicationCommandMixin.get_application_context:5
#: discord.bot.ApplicationCommandMixin.get_autocomplete_context:5 of
msgid ""
"This is a more low-level counter-part for "
":meth:`.process_application_commands` to allow users more fine-grained "
"control over the processing."
msgstr ""

#: discord.bot.ApplicationCommandMixin.get_application_context:8
#: discord.bot.ApplicationCommandMixin.get_autocomplete_context:8 of
msgid "The interaction to get the invocation context from."
msgstr ""

#: discord.bot.ApplicationCommandMixin.get_application_context:10 of
msgid ""
"The factory class that will be used to create the context. By default, "
"this is :class:`.ApplicationContext`. Should a custom class be provided, "
"it must be similar enough to :class:`.ApplicationContext`\\'s interface."
msgstr ""

#: discord.bot.ApplicationCommandMixin.get_application_context:15 of
msgid ""
"The invocation context. The type of this can change via the ``cls`` "
"parameter."
msgstr ""

#: discord.bot.ApplicationCommandMixin.get_application_context:17 of
msgid ":class:`.ApplicationContext`"
msgstr ""

#: discord.bot.ApplicationCommandMixin.get_autocomplete_context:3 of
msgid "Returns the autocomplete context from the interaction."
msgstr ""

#: discord.bot.ApplicationCommandMixin.get_autocomplete_context:10 of
msgid ""
"The factory class that will be used to create the context. By default, "
"this is :class:`.AutocompleteContext`. Should a custom class be provided,"
" it must be similar enough to :class:`.AutocompleteContext`\\'s "
"interface."
msgstr ""

#: discord.bot.ApplicationCommandMixin.get_autocomplete_context:15 of
msgid ""
"The autocomplete context. The type of this can change via the ``cls`` "
"parameter."
msgstr ""

#: discord.bot.ApplicationCommandMixin.get_autocomplete_context:17 of
msgid ":class:`.AutocompleteContext`"
msgstr ""

#: discord.cog.CogMixin.get_cog:1 of
msgid "Gets the cog instance requested."
msgstr ""

#: discord.cog.CogMixin.get_cog:3 of
msgid "If the cog is not found, ``None`` is returned instead."
msgstr ""

#: discord.cog.CogMixin.get_cog:5 of
msgid ""
"The name of the cog you are requesting. This is equivalent to the name "
"passed via keyword argument in class creation or the class name if "
"unspecified."
msgstr ""

#: discord.cog.CogMixin.get_cog:10 of
msgid "The cog that was requested. If not found, returns ``None``."
msgstr ""

#: discord.cog.CogMixin.get_cog:11 discord.commands.core.SlashCommand:67 of
msgid "Optional[:class:`Cog`]"
msgstr ""

#: discord.Bot.get_command:1 of
msgid "Shortcut for :meth:`.get_application_command`."
msgstr ""

#: discord.Bot.get_command:4 of
msgid "Overridden in :class:`ext.commands.Bot`."
msgstr ""

#: discord.bot.ApplicationCommandMixin.get_desynced_commands:3 of
msgid ""
"Gets the list of commands that are desynced from discord. If ``guild_id``"
" is specified, it will only return guild commands that are desynced from "
"said guild, else it will return global commands."
msgstr ""

#: discord.bot.ApplicationCommandMixin.get_desynced_commands:7 of
msgid ""
"This function is meant to be used internally, and should only be used if "
"you want to override the default command registration behavior."
msgstr ""

#: discord.bot.ApplicationCommandMixin.get_desynced_commands:13 of
msgid ""
"The guild id to get the desynced commands for, else global commands if "
"unspecified."
msgstr ""

#: discord.bot.ApplicationCommandMixin.get_desynced_commands:15 of
msgid ""
"If you already fetched the commands, you can pass them here to be used. "
"Not recommended for typical usage."
msgstr ""

#: discord.bot.ApplicationCommandMixin.get_desynced_commands:18 of
msgid ""
"A list of the desynced commands. Each will come with at least the ``cmd``"
" and ``action`` keys, which respectively contain the command and the "
"action to perform. Other keys may also be present depending on the "
"action, including ``id``."
msgstr ""

#: discord.bot.ApplicationCommandMixin.get_desynced_commands:21 of
msgid "List[Dict[:class:`str`, Any]]"
msgstr ""

#: discord.bot.ApplicationCommandMixin.group:1 of
msgid ""
"A shortcut decorator that initializes the provided subclass of "
":class:`.SlashCommandGroup` and adds it to the internal command list via "
":meth:`add_application_command`."
msgstr ""

#: discord.bot.ApplicationCommandMixin.group:6
#: discord.commands.core.SlashCommandGroup.subgroup:6 of
msgid ""
"The name of the group to create. This will resolve to the name of the "
"decorated class if ``None`` is passed."
msgstr ""

#: discord.bot.ApplicationCommandMixin.invoke_application_command:3 of
msgid ""
"Invokes the application command given under the invocation context and "
"handles all the internal event dispatch mechanisms."
msgstr ""

#: discord.bot.ApplicationCommandMixin.invoke_application_command:6 of
msgid "The invocation context to invoke."
msgstr ""

#: discord.bot.BotBase.is_owner:3 of
msgid ""
"Checks if a :class:`~discord.User` or :class:`~discord.Member` is the "
"owner of this bot."
msgstr ""

#: discord.bot.BotBase.is_owner:6 of
msgid ""
"If an :attr:`owner_id` is not set, it is fetched automatically through "
"the use of :meth:`~.Bot.application_info`."
msgstr ""

#: discord.bot.BotBase.is_owner:9 of
msgid ""
"The function also checks if the application is team-owned if "
":attr:`owner_ids` is not set."
msgstr ""

#: discord.bot.BotBase.is_owner:13 of
msgid "The user to check for."
msgstr ""

#: discord.bot.BotBase.is_owner:16 of
msgid "Whether the user is the owner."
msgstr ""

#: discord.cog.CogMixin.load_extension:1 of
msgid "Loads an extension."
msgstr ""

#: discord.cog.CogMixin.load_extension:3 of
msgid ""
"An extension is a python module that contains commands, cogs, or "
"listeners."
msgstr ""

#: discord.cog.CogMixin.load_extension:6 of
msgid ""
"An extension must have a global function, ``setup`` defined as the entry "
"point on what to do when the extension is loaded. This entry point must "
"have a single argument, the ``bot``."
msgstr ""

#: discord.cog.CogMixin.load_extension:10 of
msgid ""
"The extension passed can either be the direct name of a file within the "
"current working directory or a folder that contains multiple extensions."
msgstr ""

#: discord.cog.CogMixin.load_extension:13 of
msgid ""
"The extension or folder name to load. It must be dot separated like "
"regular Python imports if accessing a submodule. e.g. ``foo.test`` if you"
" want to import ``foo/test.py``."
msgstr ""

#: discord.cog.CogMixin.load_extension:17
#: discord.cog.CogMixin.load_extensions:10 of
msgid ""
"The package name to resolve relative imports with. This is required when "
"loading an extension using a relative path, e.g ``.foo.test``. Defaults "
"to ``None``.  .. versionadded:: 1.7"
msgstr ""

#: discord.cog.CogMixin.load_extension:17
#: discord.cog.CogMixin.load_extensions:10 of
msgid ""
"The package name to resolve relative imports with. This is required when "
"loading an extension using a relative path, e.g ``.foo.test``. Defaults "
"to ``None``."
msgstr ""

#: discord.cog.CogMixin.load_extension:24
#: discord.cog.CogMixin.load_extensions:17 of
msgid ""
"If subdirectories under the given head directory should be recursively "
"loaded. Defaults to ``False``.  .. versionadded:: 2.0"
msgstr ""

#: discord.cog.CogMixin.load_extension:24
#: discord.cog.CogMixin.load_extensions:17 of
msgid ""
"If subdirectories under the given head directory should be recursively "
"loaded. Defaults to ``False``."
msgstr ""

#: discord.cog.CogMixin.load_extension:30
#: discord.cog.CogMixin.load_extensions:23 of
msgid ""
"If exceptions should be stored or raised. If set to ``True``, all "
"exceptions encountered will be stored in a returned dictionary as a load "
"status. If set to ``False``, if any exceptions are encountered they will "
"be raised and the bot will be closed. If no exceptions are encountered, a"
" list of loaded extension names will be returned. Defaults to ``False``."
"  .. versionadded:: 2.0"
msgstr ""

#: discord.cog.CogMixin.load_extension:30
#: discord.cog.CogMixin.load_extensions:23 of
msgid ""
"If exceptions should be stored or raised. If set to ``True``, all "
"exceptions encountered will be stored in a returned dictionary as a load "
"status. If set to ``False``, if any exceptions are encountered they will "
"be raised and the bot will be closed. If no exceptions are encountered, a"
" list of loaded extension names will be returned. Defaults to ``False``."
msgstr ""

#: discord.cog.CogMixin.load_extension:41
#: discord.cog.CogMixin.reload_extension:20 of
msgid ""
"The extension could not be imported.     This is also raised if the name "
"of the extension could not     be resolved using the provided ``package``"
" parameter."
msgstr ""

#: discord.cog.CogMixin.load_extension:42 of
msgid "The extension is already loaded."
msgstr ""

#: discord.cog.CogMixin.load_extension:43
#: discord.cog.CogMixin.reload_extension:21 of
msgid "The extension does not have a setup function."
msgstr ""

#: discord.cog.CogMixin.load_extension:44 of
msgid "The extension or its setup function had an execution error."
msgstr ""

#: discord.cog.CogMixin.load_extension:46 of
msgid ""
"If the store parameter is set to ``True``, a dictionary will be returned "
"that contains keys to represent the loaded extension names. The values "
"bound to each key can either be an exception that occurred when loading "
"that extension or a ``True`` boolean representing a successful load. If "
"the store parameter is set to ``False``, either a list containing a list "
"of loaded extensions or nothing due to an encountered exception."
msgstr ""

#: discord.cog.CogMixin.load_extension:52
#: discord.cog.CogMixin.load_extensions:45 of
msgid ""
"Optional[Union[Dict[:class:`str`, Union[:exc:`errors.ExtensionError`, "
":class:`bool`]], List[:class:`str`]]]"
msgstr ""

#: discord.cog.CogMixin.load_extensions:1 of
msgid "Loads multiple extensions at once."
msgstr ""

#: discord.cog.CogMixin.load_extensions:3 of
msgid ""
"This method simplifies the process of loading multiple extensions by "
"handling the looping of ``load_extension``."
msgstr ""

#: discord.cog.CogMixin.load_extensions:6 of
msgid ""
"The extension or folder names to load. It must be dot separated like "
"regular Python imports if accessing a submodule. e.g. ``foo.test`` if you"
" want to import ``foo/test.py``."
msgstr ""

#: discord.cog.CogMixin.load_extensions:34 of
msgid ""
"A given extension could not be imported.     This is also raised if the "
"name of the extension could not     be resolved using the provided "
"``package`` parameter."
msgstr ""

#: discord.cog.CogMixin.load_extensions:35 of
msgid "A given extension is already loaded."
msgstr ""

#: discord.cog.CogMixin.load_extensions:36 of
msgid "A given extension does not have a setup function."
msgstr ""

#: discord.cog.CogMixin.load_extensions:37 of
msgid "A given extension or its setup function had an execution error."
msgstr ""

#: discord.cog.CogMixin.load_extensions:39 of
msgid ""
"If the store parameter is set to ``True``, a dictionary will be returned "
"that contains keys to represent the loaded extension names. The values "
"bound to each key can either be an exception that occurred when loading "
"that extension or a ``True`` boolean representing a successful load. If "
"the store parameter is set to ``False``, either a list containing names "
"of loaded extensions or nothing due to an encountered exception."
msgstr ""

#: discord.bot.BotBase.on_application_command_error:3 of
msgid "The default command error handler provided by the bot."
msgstr ""

#: discord.bot.BotBase.on_application_command_error:5 of
msgid ""
"By default, this prints to :data:`sys.stderr` however it could be "
"overridden to have a different implementation."
msgstr ""

#: discord.bot.BotBase.on_application_command_error:8 of
msgid "This only fires if you do not specify any listeners for command error."
msgstr ""

#: discord.bot.ApplicationCommandMixin.process_application_commands:3 of
msgid ""
"This function processes the commands that have been registered to the bot"
" and other groups. Without this coroutine, none of the commands will be "
"triggered."
msgstr ""

#: discord.bot.ApplicationCommandMixin.process_application_commands:7 of
msgid ""
"By default, this coroutine is called inside the :func:`.on_interaction` "
"event. If you choose to override the :func:`.on_interaction` event, then "
"you should invoke this coroutine as well."
msgstr ""

#: discord.bot.ApplicationCommandMixin.process_application_commands:11 of
msgid ""
"This function finds a registered command matching the interaction id from"
" application commands and invokes it. If no matching command was found, "
"it replies to the interaction with a default message."
msgstr ""

#: discord.bot.ApplicationCommandMixin.process_application_commands:17 of
msgid "The interaction to process"
msgstr ""

#: discord.bot.ApplicationCommandMixin.process_application_commands:19 of
msgid ""
"Whether to automatically sync and unregister the command if it is not "
"found in the internal cache. This will invoke the "
":meth:`~.Bot.sync_commands` method on the context of the command, either "
"globally or per-guild, based on the type of the command, respectively. "
"Defaults to :attr:`.Bot.auto_sync_commands`."
msgstr ""

#: discord.bot.ApplicationCommandMixin.register_command:3 of
msgid ""
"Registers a command. If the command has ``guild_ids`` set, or if the "
"``guild_ids`` parameter is passed, the command will be registered as a "
"guild command for those guilds."
msgstr ""

#: discord.bot.ApplicationCommandMixin.register_command:6 of
msgid "The command to register."
msgstr ""

#: discord.bot.ApplicationCommandMixin.register_command:8 of
msgid ""
"Whether to force the command to be registered. If this is set to False, "
"the command will only be registered if it seems to already be registered "
"and up to date with our internal cache. Defaults to True."
msgstr ""

#: discord.bot.ApplicationCommandMixin.register_command:11 of
msgid ""
"A list of guild ids to register the command for. If this is not set, the "
"command's :attr:`ApplicationCommand.guild_ids` attribute will be used."
msgstr ""

#: discord.bot.ApplicationCommandMixin.register_command:15 of
msgid "The command that was registered"
msgstr ""

#: discord.bot.ApplicationCommandMixin.register_command:16 of
msgid ":class:`~.ApplicationCommand`"
msgstr ""

#: discord.bot.ApplicationCommandMixin.register_commands:3 of
msgid "Register a list of commands."
msgstr ""

#: discord.bot.ApplicationCommandMixin.register_commands:7 of
msgid ""
"A list of commands to register. If this is not set (``None``), then all "
"commands will be registered."
msgstr ""

#: discord.bot.ApplicationCommandMixin.register_commands:9 of
msgid ""
"If this is set, the commands will be registered as a guild command for "
"the respective guild. If it is not set, the commands will be registered "
"according to their :attr:`ApplicationCommand.guild_ids` attribute."
msgstr ""

#: discord.bot.ApplicationCommandMixin.register_commands:12
#: discord.bot.ApplicationCommandMixin.sync_commands:20 of
msgid ""
"The method to use when registering the commands. If this is set to "
"\"individual\", then each command will be registered individually. If "
"this is set to \"bulk\", then all commands will be registered in bulk. If"
" this is set to \"auto\", then the method will be determined "
"automatically. Defaults to \"bulk\"."
msgstr ""

#: discord.bot.ApplicationCommandMixin.register_commands:16
#: discord.bot.ApplicationCommandMixin.sync_commands:24 of
msgid ""
"Registers the commands regardless of the state of the command on Discord."
" This uses one less API call, but can result in hitting rate limits more "
"often. Defaults to False."
msgstr ""

#: discord.bot.ApplicationCommandMixin.register_commands:19
#: discord.bot.ApplicationCommandMixin.sync_commands:37 of
msgid ""
"Whether to delete existing commands that are not in the list of commands "
"to register. Defaults to True."
msgstr ""

#: discord.cog.CogMixin.reload_extension:1 of
msgid "Atomically reloads an extension."
msgstr ""

#: discord.cog.CogMixin.reload_extension:3 of
msgid ""
"This replaces the extension with the same extension, only refreshed. This"
" is equivalent to a :meth:`unload_extension` followed by a "
":meth:`load_extension` except done in an atomic way. That is, if an "
"operation fails mid-reload then the bot will roll back to the prior "
"working state."
msgstr ""

#: discord.cog.CogMixin.reload_extension:8 of
msgid ""
"The extension name to reload. It must be dot separated like regular "
"Python imports if accessing a submodule. e.g. ``foo.test`` if you want to"
" import ``foo/test.py``."
msgstr ""

#: discord.cog.CogMixin.reload_extension:12 of
msgid ""
"The package name to resolve relative imports with. This is required when "
"reloading an extension using a relative path, e.g ``.foo.test``. Defaults"
" to ``None``.  .. versionadded:: 1.7"
msgstr ""

#: discord.cog.CogMixin.reload_extension:12 of
msgid ""
"The package name to resolve relative imports with. This is required when "
"reloading an extension using a relative path, e.g ``.foo.test``. Defaults"
" to ``None``."
msgstr ""

#: discord.cog.CogMixin.reload_extension:19
#: discord.cog.CogMixin.unload_extension:23 of
msgid "The extension was not loaded."
msgstr ""

#: discord.cog.CogMixin.reload_extension:22 of
msgid "The extension setup function had an execution error."
msgstr ""

#: discord.bot.ApplicationCommandMixin.remove_application_command:1 of
msgid "Remove a :class:`.ApplicationCommand` from the internal list of commands."
msgstr ""

#: discord.bot.ApplicationCommandMixin.remove_application_command:6 of
msgid "The command to remove."
msgstr ""

#: discord.bot.ApplicationCommandMixin.remove_application_command:9 of
msgid ""
"The command that was removed. If the name is not valid then ``None`` is "
"returned instead."
msgstr ""

#: discord.bot.BotBase.remove_check:1 of
msgid ""
"Removes a global check from the bot. This function is idempotent and will"
" not raise an exception if the function is not in the global checks."
msgstr ""

#: discord.bot.BotBase.remove_check:5 of
msgid "The function to remove from the global checks."
msgstr ""

#: discord.bot.BotBase.remove_check:6 of
msgid ""
"If the function was added with ``call_once=True`` in the "
":meth:`.Bot.add_check` call or using :meth:`.check_once`."
msgstr ""

#: discord.cog.CogMixin.remove_cog:1 of
msgid "Removes a cog from the bot and returns it."
msgstr ""

#: discord.cog.CogMixin.remove_cog:3 of
msgid ""
"All registered commands and event listeners that the cog has registered "
"will be removed as well."
msgstr ""

#: discord.cog.CogMixin.remove_cog:6 of
msgid "If no cog is found then this method has no effect."
msgstr ""

#: discord.cog.CogMixin.remove_cog:8 of
msgid "The name of the cog to remove."
msgstr ""

#: discord.cog.CogMixin.remove_cog:11 of
msgid "The cog that was removed. ``None`` if not found."
msgstr ""

#: discord.ApplicationContext.cog:4 discord.AutocompleteContext.cog:4
#: discord.cog.CogMixin.remove_cog:12 discord.commands.core.MessageCommand:28
#: discord.commands.core.UserCommand:28 of
msgid "Optional[:class:`.Cog`]"
msgstr ""

#: discord.bot.BotBase.remove_listener:1 of
msgid "Removes a listener from the pool of listeners."
msgstr ""

#: discord.bot.BotBase.remove_listener:3 of
msgid "The function that was used as a listener to remove."
msgstr ""

#: discord.bot.BotBase.remove_listener:4 of
msgid "The name of the event we want to remove. Defaults to ``func.__name__``."
msgstr ""

#: discord.bot.ApplicationCommandMixin.sync_commands:3 of
msgid ""
"Registers all commands that have been added through "
":meth:`.add_application_command`. This method cleans up all commands over"
" the API and should sync them with the internal cache of commands. It "
"attempts to register the commands in the most efficient way possible, "
"unless ``force`` is set to ``True``, in which case it will always "
"register all commands."
msgstr ""

#: discord.bot.ApplicationCommandMixin.sync_commands:8 of
msgid ""
"By default, this coroutine is called inside the :func:`.on_connect` "
"event. If you choose to override the :func:`.on_connect` event, then you "
"should invoke this coroutine as well."
msgstr ""

#: discord.bot.ApplicationCommandMixin.sync_commands:12 of
msgid ""
"If you remove all guild commands from a particular guild, the library may"
" not be able to detect and update the commands accordingly, as it would "
"have to individually check for each guild. To force the library to "
"unregister a guild's commands, call this function with ``commands=[]`` "
"and ``guild_ids=[guild_id]``."
msgstr ""

#: discord.bot.ApplicationCommandMixin.sync_commands:18 of
msgid ""
"A list of commands to register. If this is not set (None), then all "
"commands will be registered."
msgstr ""

#: discord.bot.ApplicationCommandMixin.sync_commands:27 of
msgid ""
"A list of guild ids to register the commands for. If this is not set, the"
" commands' :attr:`~.ApplicationCommand.guild_ids` attribute will be used."
msgstr ""

#: discord.bot.ApplicationCommandMixin.sync_commands:30 of
msgid "Whether to register guild commands. Defaults to True."
msgstr ""

#: discord.bot.ApplicationCommandMixin.sync_commands:32 of
msgid ""
"A list of guilds ids to check for commands to unregister, since the bot "
"would otherwise have to check all guilds. Unlike ``guild_ids``, this does"
" not alter the commands' :attr:`~.ApplicationCommand.guild_ids` "
"attribute, instead it adds the guild ids to a list of guilds to sync "
"commands for. If ``register_guild_commands`` is set to False, then this "
"parameter is ignored."
msgstr ""

#: discord.cog.CogMixin.unload_extension:1 of
msgid "Unloads an extension."
msgstr ""

#: discord.cog.CogMixin.unload_extension:3 of
msgid ""
"When the extension is unloaded, all commands, listeners, and cogs are "
"removed from the bot and the module is un-imported."
msgstr ""

#: discord.cog.CogMixin.unload_extension:6 of
msgid ""
"The extension can provide an optional global function, ``teardown``, to "
"do miscellaneous clean-up if necessary. This function takes a single "
"parameter, the ``bot``, similar to ``setup`` from "
":meth:`~.Bot.load_extension`."
msgstr ""

#: discord.cog.CogMixin.unload_extension:11 of
msgid ""
"The extension name to unload. It must be dot separated like regular "
"Python imports if accessing a submodule. e.g. ``foo.test`` if you want to"
" import ``foo/test.py``."
msgstr ""

#: discord.cog.CogMixin.unload_extension:15 of
msgid ""
"The package name to resolve relative imports with. This is required when "
"unloading an extension using a relative path, e.g ``.foo.test``. Defaults"
" to ``None``.  .. versionadded:: 1.7"
msgstr ""

#: discord.cog.CogMixin.unload_extension:15 of
msgid ""
"The package name to resolve relative imports with. This is required when "
"unloading an extension using a relative path, e.g ``.foo.test``. Defaults"
" to ``None``."
msgstr ""

#: discord.cog.CogMixin.unload_extension:22 of
msgid ""
"The name of the extension could not     be resolved using the provided "
"``package`` parameter."
msgstr ""

#: discord.bot.ApplicationCommandMixin.walk_application_commands:1 of
msgid ""
"An iterator that recursively walks through all application commands and "
"subcommands."
msgstr ""

#: discord.bot.ApplicationCommandMixin.walk_application_commands:3 of
msgid ""
":class:`.ApplicationCommand` -- An application command from the internal "
"list of application commands."
msgstr ""

#: ../../api.rst:90
msgid "AutoShardedBot"
msgstr ""

#: discord.bot.AutoShardedBot:1 of
msgid ""
"This is similar to :class:`.Bot` except that it is inherited from "
":class:`discord.AutoShardedClient` instead."
msgstr ""

#: ../../api.rst:97
msgid "Application Commands"
msgstr ""

#: ../../api.rst:101
msgid "Command Permission Decorators"
msgstr ""

#: discord.commands.permissions.default_permissions:1 of
msgid ""
"A decorator that limits the usage of a slash command to members with "
"certain permissions."
msgstr ""

#: discord.commands.permissions.default_permissions:4 of
msgid ""
"The permissions passed in must be exactly like the properties shown under"
" :class:`.discord.Permissions`."
msgstr ""

#: discord.commands.permissions.default_permissions:8 of
msgid ""
"These permissions can be updated by server administrators per-guild. As "
"such, these are only \"defaults\", as the name suggests. If you want to "
"make sure that a user **always** has the specified permissions "
"regardless, you should use an internal check such as "
":func:`~.ext.commands.has_permissions`."
msgstr ""

#: discord.commands.permissions.default_permissions:12 of
msgid "An argument list of permissions to check for."
msgstr ""

#: discord.commands.permissions.guild_only:1 of
msgid ""
"A decorator that limits the usage of a slash command to guild contexts. "
"The command won't be able to be used in private message channels."
msgstr ""

#: ../../api.rst:112
msgid "ApplicationCommand"
msgstr ""

#: discord.commands.core.ApplicationCommand.is_on_cooldown:1 of
msgid "Checks whether the command is currently on cooldown."
msgstr ""

#: discord.commands.core.ApplicationCommand.get_cooldown_retry_after:5
#: discord.commands.core.ApplicationCommand.is_on_cooldown:5 of
msgid "This uses the current time instead of the interaction time."
msgstr ""

#: discord.commands.core.ApplicationCommand.is_on_cooldown:7 of
msgid "The invocation context to use when checking the command's cooldown status."
msgstr ""

#: discord.commands.core.ApplicationCommand.is_on_cooldown:10 of
msgid "A boolean indicating if the command is on cooldown."
msgstr ""

#: discord.commands.core.ApplicationCommand.reset_cooldown:1 of
msgid "Resets the cooldown on this command."
msgstr ""

#: discord.commands.core.ApplicationCommand.reset_cooldown:3 of
msgid "The invocation context to reset the cooldown under."
msgstr ""

#: discord.commands.core.ApplicationCommand.get_cooldown_retry_after:1 of
msgid "Retrieves the amount of seconds before this command can be tried again."
msgstr ""

#: discord.commands.core.ApplicationCommand.get_cooldown_retry_after:7 of
msgid "The invocation context to retrieve the cooldown from."
msgstr ""

#: discord.commands.core.ApplicationCommand.get_cooldown_retry_after:10 of
msgid ""
"The amount of time left on this command's cooldown in seconds. If this is"
" ``0.0`` then the command isn't on cooldown."
msgstr ""

#: discord.commands.core.ApplicationCommand.error:1 of
msgid "A decorator that registers a coroutine as a local error handler."
msgstr ""

#: discord.commands.core.ApplicationCommand.error:3 of
msgid ""
"A local error handler is an :func:`.on_command_error` event limited to a "
"single command. However, the :func:`.on_command_error` is still invoked "
"afterwards as the catch-all."
msgstr ""

#: discord.commands.core.ApplicationCommand.error:7 of
msgid "The coroutine to register as the local error handler."
msgstr ""

#: discord.commands.core.ApplicationCommand.has_error_handler:1 of
msgid ":class:`bool`: Checks whether the command has an error handler registered."
msgstr ""

#: discord.commands.core.ApplicationCommand.before_invoke:1 of
msgid ""
"A decorator that registers a coroutine as a pre-invoke hook. A pre-invoke"
" hook is called directly before the command is called. This makes it a "
"useful function to set up database connections or any type of set up "
"required."
msgstr ""

#: discord.commands.core.ApplicationCommand.before_invoke:6 of
msgid ""
"This pre-invoke hook takes a sole parameter, a "
":class:`.ApplicationContext`. See :meth:`.Bot.before_invoke` for more "
"info."
msgstr ""

#: discord.commands.core.ApplicationCommand.after_invoke:1 of
msgid ""
"A decorator that registers a coroutine as a post-invoke hook. A post-"
"invoke hook is called directly after the command is called. This makes it"
" a useful function to clean-up database connections or any type of clean "
"up required."
msgstr ""

#: discord.commands.core.ApplicationCommand.after_invoke:6 of
msgid ""
"This post-invoke hook takes a sole parameter, a "
":class:`.ApplicationContext`. See :meth:`.Bot.after_invoke` for more "
"info."
msgstr ""

#: discord.ApplicationCommand.full_parent_name:1 of
msgid "Retrieves the fully qualified parent command name."
msgstr ""

#: discord.ApplicationCommand.full_parent_name:3 of
msgid ""
"This the base command name required to execute it. For example, in ``/one"
" two three`` the parent name would be ``one two``."
msgstr ""

#: discord.ApplicationCommand.qualified_name:1 of
msgid "Retrieves the fully qualified command name."
msgstr ""

#: discord.ApplicationCommand.qualified_name:3 of
msgid ""
"This is the full parent name with the command name as well. For example, "
"in ``/one two three`` the qualified name would be ``one two three``."
msgstr ""

#: discord.commands.core.application_command:1 of
msgid ""
"A decorator that transforms a function into an "
":class:`.ApplicationCommand`. More specifically, usually one of "
":class:`.SlashCommand`, :class:`.UserCommand`, or "
":class:`.MessageCommand`. The exact class depends on the ``cls`` "
"parameter. By default, the ``description`` attribute is received "
"automatically from the docstring of the function and is cleaned up with "
"the use of ``inspect.cleandoc``. If the docstring is ``bytes``, then it "
"is decoded into :class:`str` using utf-8 encoding. The ``name`` attribute"
" also defaults to the function name unchanged."
msgstr ""

#: discord.commands.core.application_command:12 of
msgid ""
"The class to construct with. By default, this is :class:`.SlashCommand`. "
"You usually do not change this."
msgstr ""

#: discord.commands.core.application_command:15 of
msgid ""
"Keyword arguments to pass into the construction of the class denoted by "
"``cls``."
msgstr ""

#: discord.commands.core.application_command:18 of
msgid "If the function is not a coroutine or is already a command."
msgstr ""

#: discord.commands.core.application_command:20 of
msgid ""
"A decorator that converts the provided method into an "
":class:`.ApplicationCommand`, or subclass of it."
msgstr ""

#: discord.commands.core.application_command:21 discord.commands.core.command:9
#: of
msgid "Callable[..., :class:`.ApplicationCommand`]"
msgstr ""

#: discord.commands.core.command:4 of
msgid "This decorator is overridden by :func:`ext.commands.command`."
msgstr ""

#: discord.commands.core.command:8 of
msgid ""
"A decorator that converts the provided method into an "
":class:`.ApplicationCommand`."
msgstr ""

#: ../../api.rst:126
msgid "SlashCommand"
msgstr ""

#: discord.commands.core.SlashCommand:1 of
msgid "A class that implements the protocol for a slash command."
msgstr ""

#: discord.commands.core.MessageCommand:3 discord.commands.core.SlashCommand:3
#: discord.commands.core.UserCommand:3 of
msgid ""
"These are not created manually, instead they are created via the "
"decorator or functional interface."
msgstr ""

#: discord.commands.core.MessageCommand:8 discord.commands.core.SlashCommand:10
#: discord.commands.core.SlashCommandGroup:8
#: discord.commands.core.UserCommand:8 of
msgid "The name of the command."
msgstr ""

#: discord.commands.core.MessageCommand:14
#: discord.commands.core.SlashCommand:16 discord.commands.core.UserCommand:14
#: of
msgid "The coroutine that is executed when the command is called."
msgstr ""

#: discord.commands.core.MessageCommand:16
#: discord.commands.core.SlashCommand:18 discord.commands.core.UserCommand:16
#: of
msgid ":ref:`coroutine <coroutine>`"
msgstr ""

#: discord.commands.core.SlashCommand:22
#: discord.commands.core.SlashCommandGroup:14 of
msgid "The description for the command."
msgstr ""

#: ../../api.rst:3772 ../../api.rst:4261 discord.Activity.large_image_text:3
#: discord.Activity.large_image_url:3 discord.Activity.small_image_text:3
#: discord.Activity.small_image_url:3 discord.ForumChannel.guidelines:3
#: discord.Streaming.twitch_name:6 discord.Widget.invite_url:3
#: discord.activity.Activity:22 discord.activity.Activity:28
#: discord.activity.Activity:40 discord.activity.Activity:46
#: discord.activity.CustomActivity:27 discord.activity.Streaming:29
#: discord.activity.Streaming:35 discord.activity.Streaming:41
#: discord.activity.Streaming:49 discord.appinfo.AppInfo:100
#: discord.appinfo.AppInfo:108 discord.appinfo.AppInfo:116
#: discord.appinfo.PartialAppInfo:47 discord.appinfo.PartialAppInfo:53
#: discord.audit_logs.AuditLogEntry:52 discord.channel.ForumChannel:53
#: discord.channel.GroupChannel:57 discord.channel.StageChannel:45
#: discord.channel.TextChannel:49 discord.commands.core.SlashCommand:24
#: discord.commands.core.SlashCommandGroup:16
#: discord.commands.options.Option:39 discord.components.Button:23
#: discord.components.Button:29 discord.components.Button:41
#: discord.components.SelectMenu:17 discord.components.SelectMenu:23
#: discord.components.SelectOption:27 discord.file.File:30 discord.file.File:36
#: discord.guild.Guild:105 discord.guild.Guild:207
#: discord.integrations.IntegrationApplication:21
#: discord.interactions.Interaction:79 discord.invite.PartialInviteGuild:52
#: discord.member.Member:54 discord.message.Attachment:73
#: discord.message.Attachment:89 discord.partial_emoji.PartialEmoji:32
#: discord.role.Role:102 discord.scheduled_events.ScheduledEvent:39
#: discord.team.TeamMember:45 discord.ui.Button.custom_id:5
#: discord.ui.Button.label:3 discord.ui.Button.url:3
#: discord.ui.InputText.placeholder:3 discord.ui.InputText.value:3
#: discord.ui.Select.placeholder:3 discord.user.ClientUser:63
#: discord.webhook.async_.Webhook:64 discord.webhook.async_.Webhook:89
#: discord.webhook.sync.SyncWebhook:41 discord.webhook.sync.SyncWebhook:66
#: discord.widget.WidgetMember:55 discord.widget.WidgetMember:61 of
msgid "Optional[:class:`str`]"
msgstr ""

#: discord.commands.core.MessageCommand:20
#: discord.commands.core.SlashCommand:28
#: discord.commands.core.SlashCommandGroup:20
#: discord.commands.core.UserCommand:20 of
msgid "The ids of the guilds where this command will be registered."
msgstr ""

#: discord.commands.core.SlashCommand:34 of
msgid "The parameters for this command."
msgstr ""

#: discord.commands.core.SlashCommand:36 of
msgid "List[:class:`Option`]"
msgstr ""

#: discord.commands.core.SlashCommand:40 of
msgid ""
"The parent group that this command belongs to. ``None`` if there isn't "
"one."
msgstr ""

#: discord.commands.core.SlashCommand:43
#: discord.commands.core.SlashCommandGroup:29 of
msgid "Optional[:class:`SlashCommandGroup`]"
msgstr ""

#: discord.commands.core.SlashCommand:47 of
msgid "Returns a string that allows you to mention the slash command."
msgstr ""

#: discord.commands.core.SlashCommand:53
#: discord.commands.core.SlashCommandGroup:33
#: discord.commands.core.SlashCommandGroup.create_subgroup:10 of
msgid "Whether the command should only be usable inside a guild."
msgstr ""

#: discord.commands.core.SlashCommand:59
#: discord.commands.core.SlashCommandGroup:39
#: discord.commands.core.SlashCommandGroup.create_subgroup:12 of
msgid "The default permissions a member needs to be able to run the command."
msgstr ""

#: discord.abc.GuildChannel.permissions_for:28
#: discord.channel.VocalGuildChannel.permissions_for:28
#: discord.channel._TextChannel.permissions_for:28
#: discord.commands.core.SlashCommand:61
#: discord.commands.core.SlashCommandGroup:41
#: discord.threads.Thread.permissions_for:17 of
msgid ":class:`~discord.Permissions`"
msgstr ""

#: discord.commands.core.MessageCommand:26
#: discord.commands.core.SlashCommand:65 discord.commands.core.UserCommand:26
#: of
msgid "The cog that this command belongs to. ``None`` if there isn't one."
msgstr ""

#: discord.commands.core.MessageCommand:32
#: discord.commands.core.SlashCommand:71
#: discord.commands.core.SlashCommandGroup:45
#: discord.commands.core.SlashCommandGroup.create_subgroup:14
#: discord.commands.core.UserCommand:32 of
msgid ""
"A list of predicates that verifies if the command could be executed with "
"the given :class:`.ApplicationContext` as the sole parameter. If an "
"exception is necessary to be thrown to signal failure, then one inherited"
" from :exc:`.ApplicationCommandError` should be used. Note that if the "
"checks fail then :exc:`.CheckFailure` exception is raised to the "
":func:`.on_application_command_error` event."
msgstr ""

#: discord.commands.core.MessageCommand:39
#: discord.commands.core.SlashCommand:78
#: discord.commands.core.SlashCommandGroup:52
#: discord.commands.core.UserCommand:39 of
msgid "List[Callable[[:class:`.ApplicationContext`], :class:`bool`]]"
msgstr ""

#: discord.commands.core.SlashCommand:82 of
msgid ""
"The cooldown applied when the command is invoked. ``None`` if the command"
" doesn't have a cooldown."
msgstr ""

#: discord.commands.core.SlashCommand:85 of
msgid "Optional[:class:`~discord.ext.commands.Cooldown`]"
msgstr ""

#: discord.commands.core.SlashCommand:89
#: discord.commands.core.SlashCommandGroup:56
#: discord.commands.core.SlashCommandGroup.create_subgroup:21 of
msgid ""
"The name localizations for this command. The values of this should be "
"``\"locale\": \"name\"``. See `here "
"<https://discord.com/developers/docs/reference#locales>`_ for a list of "
"valid locales."
msgstr ""

#: discord.commands.core.SlashCommand:92 discord.commands.core.SlashCommand:99
#: discord.commands.core.SlashCommandGroup:59
#: discord.commands.core.SlashCommandGroup:66
#: discord.commands.options.Option:106 discord.commands.options.Option:113
#: discord.commands.options.OptionChoice:22 of
msgid "Optional[Dict[:class:`str`, :class:`str`]]"
msgstr ""

#: discord.commands.core.SlashCommand:96
#: discord.commands.core.SlashCommandGroup:63
#: discord.commands.core.SlashCommandGroup.create_subgroup:24 of
msgid ""
"The description localizations for this command. The values of this should"
" be ``\"locale\": \"description\"``. See `here "
"<https://discord.com/developers/docs/reference#locales>`_ for a list of "
"valid locales."
msgstr ""

#: discord.commands.core.MessageCommand.copy:1
#: discord.commands.core.SlashCommand.copy:1
#: discord.commands.core.UserCommand.copy:1 of
msgid "Creates a copy of this command."
msgstr ""

#: discord.commands.core.MessageCommand.copy:3
#: discord.commands.core.SlashCommand.copy:3
#: discord.commands.core.UserCommand.copy:3 of
msgid "A new instance of this command."
msgstr ""

#: discord.commands.core.SlashCommand.copy:4 of
msgid ":class:`SlashCommand`"
msgstr ""

#: discord.commands.core.slash_command:1 of
msgid "Decorator for slash commands that invokes :func:`application_command`."
msgstr ""

#: discord.commands.core.slash_command:5 of
msgid ""
"A decorator that converts the provided method into a "
":class:`.SlashCommand`."
msgstr ""

#: discord.commands.core.slash_command:6 of
msgid "Callable[..., :class:`.SlashCommand`]"
msgstr ""

#: ../../api.rst:137
msgid "SlashCommandGroup"
msgstr ""

#: discord.commands.core.SlashCommandGroup:1 of
msgid "A class that implements the protocol for a slash command group."
msgstr ""

#: discord.commands.core.SlashCommandGroup:3 of
msgid ""
"These can be created manually, but they should be created via the "
"decorator or functional interface."
msgstr ""

#: discord.commands.core.SlashCommandGroup:26 of
msgid "The parent group that this group belongs to. ``None`` if there isn't one."
msgstr ""

#: discord.commands.core.SlashCommandGroup.create_subgroup:1 of
msgid "Creates a new subgroup for this SlashCommandGroup."
msgstr ""

#: discord.commands.core.SlashCommandGroup.subgroup:1 of
msgid ""
"A shortcut decorator that initializes the provided subclass of "
":class:`.SlashCommandGroup` as a subgroup."
msgstr ""

#: discord.commands.core.SlashCommandGroup.walk_commands:1 of
msgid ""
"An iterator that recursively walks through all slash commands in this "
"group."
msgstr ""

#: discord.commands.core.SlashCommandGroup.walk_commands:3 of
msgid ":class:`.SlashCommand` -- A slash command from the group."
msgstr ""

#: discord.commands.core.SlashCommandGroup.copy:1 of
msgid "Creates a copy of this command group."
msgstr ""

#: discord.commands.core.SlashCommandGroup.copy:3 of
msgid "A new instance of this command group."
msgstr ""

#: discord.commands.core.SlashCommandGroup.copy:4 of
msgid ":class:`SlashCommandGroup`"
msgstr ""

#: ../../api.rst:145
msgid "Option"
msgstr ""

#: discord.commands.options.Option:1 of
msgid "Represents a selectable option for a slash command."
msgstr ""

#: discord.commands.options.Option:5 of
msgid "Basic usage: ::"
msgstr ""

#: discord.commands.options.Option:22 of
msgid ""
"The type of input that is expected for this option. This can be a "
":class:`SlashCommandOptionType`, an associated class, a channel type, a "
":class:`Converter`, a converter class or an :class:`enum.Enum`."
msgstr ""

#: discord.commands.options.Option:25 of
msgid ""
"Union[Type[:class:`str`], Type[:class:`bool`], Type[:class:`int`], "
"Type[:class:`float`], Type[:class:`.abc.GuildChannel`], "
"Type[:class:`Thread`], Type[:class:`Member`], Type[:class:`User`], "
"Type[:class:`Attachment`], Type[:class:`Role`], "
"Type[:class:`.abc.Mentionable`], :class:`SlashCommandOptionType`, "
"Type[:class:`.ext.commands.Converter`], Type[:class:`enums.Enum`], "
"Type[:class:`Enum`]]"
msgstr ""

#: discord.commands.options.Option:29 of
msgid ""
"The name of this option visible in the UI. Inherits from the variable "
"name if not provided as a parameter."
msgstr ""

#: discord.commands.options.Option:36 of
msgid "The description of this option. Must be 100 characters or fewer."
msgstr ""

#: discord.commands.options.Option:43 of
msgid ""
"The list of available choices for this option. Can be a list of values or"
" :class:`OptionChoice` objects (which represent a name:value pair). If "
"provided, the input from the user must match one of the choices in the "
"list."
msgstr ""

#: discord.commands.options.Option:47 of
msgid "Optional[List[Union[:class:`Any`, :class:`OptionChoice`]]]"
msgstr ""

#: discord.commands.options.Option:51 of
msgid "Whether this option is required."
msgstr ""

#: discord.commands.options.Option:53 discord.integrations.StreamIntegration:45
#: discord.template.Template:60 discord.ui.InputText.required:3
#: discord.widget.WidgetMember:73 discord.widget.WidgetMember:79
#: discord.widget.WidgetMember:85 of
msgid "Optional[:class:`bool`]"
msgstr ""

#: discord.commands.options.Option:57 of
msgid ""
"The default value for this option. If provided, ``required`` will be "
"considered ``False``."
msgstr ""

#: discord.commands.options.Option:59 discord.commands.options.Option:99 of
msgid "Optional[:class:`Any`]"
msgstr ""

#: discord.commands.options.Option:63 of
msgid ""
"The minimum value that can be entered. Only applies to Options with an "
":attr:`.input_type` of :class:`int` or :class:`float`."
msgstr ""

#: discord.commands.options.Option:70 of
msgid ""
"The maximum value that can be entered. Only applies to Options with an "
":attr:`.input_type` of :class:`int` or :class:`float`."
msgstr ""

#: discord.commands.options.Option:77 of
msgid ""
"The minimum length of the string that can be entered. Must be between 0 "
"and 6000 (inclusive). Only applies to Options with an :attr:`input_type` "
"of :class:`str`."
msgstr ""

#: discord.commands.options.Option:84 of
msgid ""
"The maximum length of the string that can be entered. Must be between 1 "
"and 6000 (inclusive). Only applies to Options with an :attr:`input_type` "
"of :class:`str`."
msgstr ""

#: discord.commands.options.Option:91 of
msgid ""
"The autocomplete handler for the option. Accepts an iterable of "
":class:`str`, a callable (sync or async) that takes a single argument of "
":class:`AutocompleteContext`, or a coroutine. Must resolve to an iterable"
" of :class:`str`."
msgstr ""

#: discord.commands.options.Option:97 of
msgid "Does not validate the input value against the autocomplete results."
msgstr ""

#: discord.commands.options.Option:103 of
msgid ""
"The name localizations for this option. The values of this should be "
"``\"locale\": \"name\"``. See `here "
"<https://discord.com/developers/docs/reference#locales>`_ for a list of "
"valid locales."
msgstr ""

#: discord.commands.options.Option:110 of
msgid ""
"The description localizations for this option. The values of this should "
"be ``\"locale\": \"description\"``. See `here "
"<https://discord.com/developers/docs/reference#locales>`_ for a list of "
"valid locales."
msgstr ""

#: discord.commands.options.option:1 of
msgid "A decorator that can be used instead of typehinting :class:`Option`."
msgstr ""

#: ../../api.rst:156
msgid "ThreadOption"
msgstr ""

#: discord.commands.options.ThreadOption:1 of
msgid ""
"Represents a class that can be passed as the ``input_type`` for an "
":class:`Option` class."
msgstr ""

#: discord.commands.options.ThreadOption:5 of
msgid "The thread type to expect for this options input."
msgstr ""

#: ../../api.rst:164
msgid "OptionChoice"
msgstr ""

#: discord.commands.options.OptionChoice:1 of
msgid "Represents a name:value pairing for a selected :class:`Option`."
msgstr ""

#: discord.commands.options.OptionChoice:7 of
msgid "The name of the choice. Shown in the UI when selecting an option."
msgstr ""

#: discord.commands.options.OptionChoice:13 of
msgid "The value of the choice. If not provided, will use the value of ``name``."
msgstr ""

#: discord.commands.options.OptionChoice:15 of
msgid "Optional[Union[:class:`str`, :class:`int`, :class:`float`]]"
msgstr ""

#: discord.commands.options.OptionChoice:19 of
msgid ""
"The name localizations for this choice. The values of this should be "
"``\"locale\": \"name\"``. See `here "
"<https://discord.com/developers/docs/reference#locales>`_ for a list of "
"valid locales."
msgstr ""

#: ../../api.rst:172
msgid "UserCommand"
msgstr ""

#: discord.commands.core.UserCommand:1 of
msgid "A class that implements the protocol for user context menu commands."
msgstr ""

#: discord.commands.core.UserCommand.copy:4 of
msgid ":class:`UserCommand`"
msgstr ""

#: discord.commands.core.user_command:1 of
msgid "Decorator for user commands that invokes :func:`application_command`."
msgstr ""

#: discord.commands.core.user_command:5 of
msgid ""
"A decorator that converts the provided method into a "
":class:`.UserCommand`."
msgstr ""

#: discord.commands.core.user_command:6 of
msgid "Callable[..., :class:`.UserCommand`]"
msgstr ""

#: ../../api.rst:183
msgid "MessageCommand"
msgstr ""

#: discord.commands.core.MessageCommand:1 of
msgid "A class that implements the protocol for message context menu commands."
msgstr ""

#: discord.commands.core.MessageCommand.copy:4 of
msgid ":class:`MessageCommand`"
msgstr ""

#: discord.commands.core.message_command:1 of
msgid "Decorator for message commands that invokes :func:`application_command`."
msgstr ""

#: discord.commands.core.message_command:5 of
msgid ""
"A decorator that converts the provided method into a "
":class:`.MessageCommand`."
msgstr ""

#: discord.commands.core.message_command:6 of
msgid "Callable[..., :class:`.MessageCommand`]"
msgstr ""

#: ../../api.rst:194
msgid "ApplicationContext"
msgstr ""

#: discord.commands.context.ApplicationContext:1 of
msgid "Represents a Discord application command interaction context."
msgstr ""

#: discord.commands.context.ApplicationContext:3 of
msgid ""
"This class is not created manually and is instead passed to application "
"commands as the first parameter."
msgstr ""

#: discord.commands.context.ApplicationContext:10
#: discord.commands.context.AutocompleteContext:9 of
msgid "The bot that the command belongs to."
msgstr ""

#: discord.commands.context.ApplicationContext:12
#: discord.commands.context.AutocompleteContext:11 of
msgid ":class:`.Bot`"
msgstr ""

#: discord.commands.context.ApplicationContext:16 of
msgid "The interaction object that invoked the command."
msgstr ""

#: discord.ApplicationContext.send_response:38
#: discord.commands.context.ApplicationContext:18
#: discord.commands.context.AutocompleteContext:17
#: discord.interactions.InteractionResponse.send_message:38 of
msgid ":class:`.Interaction`"
msgstr ""

#: discord.commands.context.ApplicationContext:22
#: discord.commands.context.AutocompleteContext:21 of
msgid "The command that this context belongs to."
msgstr ""

#: discord.commands.context.ApplicationContext:24
#: discord.commands.context.AutocompleteContext:23 of
msgid ":class:`.ApplicationCommand`"
msgstr ""

#: discord.commands.context.ApplicationContext.invoke:3 of
msgid ""
"Calls a command with the arguments given. This is useful if you want to "
"just call the callback that a :class:`.ApplicationCommand` holds "
"internally."
msgstr ""

#: discord.commands.context.ApplicationContext.invoke:9 of
msgid ""
"This does not handle converters, checks, cooldowns, pre-invoke, or after-"
"invoke hooks in any matter. It calls the internal callback directly as-if"
" it was a regular function. You must take care in passing the proper "
"arguments when using this function."
msgstr ""

#: discord.commands.context.ApplicationContext.invoke:15 of
msgid "The command that is going to be called."
msgstr ""

#: discord.commands.context.ApplicationContext.invoke:17 of
msgid "The arguments to use."
msgstr ""

#: discord.commands.context.ApplicationContext.invoke:18 of
msgid "The keyword arguments to use."
msgstr ""

#: discord.commands.context.ApplicationContext.invoke:20 of
msgid "The command argument to invoke is missing."
msgstr ""

#: ../../docstring discord.ApplicationContext.channel:1 of
msgid ""
"Union[:class:`abc.GuildChannel`, :class:`PartialMessageable`, "
":class:`Thread`]: Returns the channel associated with this context's "
"command. Shorthand for :attr:`.Interaction.channel`."
msgstr ""

#: ../../docstring discord.ApplicationContext.channel_id:1 of
msgid ""
"Returns the ID of the channel associated with this context's command. "
"Shorthand for :attr:`.Interaction.channel_id`."
msgstr ""

#: ../../api.rst:3649 ../../api.rst:3655 ../../api.rst:3700 ../../api.rst:3714
#: ../../api.rst:3736 ../../api.rst:3854 ../../api.rst:3862 ../../api.rst:3870
#: ../../api.rst:3891 ../../api.rst:3908 ../../api.rst:3977 ../../api.rst:3983
#: ../../api.rst:3995 ../../docstring discord.ApplicationContext.channel_id:4
#: discord.ApplicationContext.guild_id:4 discord.Colour.b:3 discord.Colour.g:3
#: discord.Colour.r:3 discord.DeletedReferencedMessage.channel_id:3
#: discord.DeletedReferencedMessage.id:3 discord.Guild.emoji_limit:3
#: discord.Guild.filesize_limit:3 discord.Guild.member_count:8
#: discord.Guild.shard_id:3 discord.Guild.sticker_limit:5
#: discord.Object.increment_id:3 discord.Object.process_id:3
#: discord.Object.worker_id:3 discord.abc.GuildChannel:30
#: discord.abc.Snowflake:13 discord.appinfo.AppInfo:8
#: discord.appinfo.PartialAppInfo:9 discord.asset.AssetMixin.save:18
#: discord.audit_logs.AuditLogEntry:39 discord.automod.AutoModRule:27
#: discord.automod.AutoModRule:39 discord.channel.CategoryChannel:39
#: discord.channel.DMChannel:39 discord.channel.ForumChannel:37
#: discord.channel.ForumChannel:76 discord.channel.ForumChannel:94
#: discord.channel.GroupChannel:37 discord.channel.GroupChannel:51
#: discord.channel.PartialMessageable:28 discord.channel.StageChannel:39
#: discord.channel.StageChannel:64 discord.channel.StageChannel:70
#: discord.channel.TextChannel:37 discord.channel.TextChannel:72
#: discord.channel.TextChannel:90 discord.channel.VoiceChannel:37
#: discord.channel.VoiceChannel:56 discord.channel.VoiceChannel:62
#: discord.colour.Colour:32 discord.components.SelectMenu:30
#: discord.components.SelectMenu:37 discord.emoji.Emoji:39
#: discord.emoji.Emoji:63 discord.errors.ConnectionClosed:8
#: discord.errors.HTTPException:21 discord.errors.HTTPException:27
#: discord.flags.ApplicationFlags:42 discord.flags.ChannelFlags:42
#: discord.flags.Intents:52 discord.flags.MemberCacheFlags:55
#: discord.flags.MessageFlags:44 discord.flags.PublicUserFlags:43
#: discord.flags.SystemChannelFlags:47 discord.guild.Guild:47
#: discord.guild.Guild:59 discord.guild.Guild:65 discord.guild.Guild:113
#: discord.guild.Guild:186 discord.guild.Guild:192
#: discord.guild.Guild.estimate_pruned_members:20
#: discord.integrations.BotIntegration:9 discord.integrations.Integration:9
#: discord.integrations.IntegrationApplication:9
#: discord.integrations.StreamIntegration:9
#: discord.integrations.StreamIntegration:57
#: discord.interactions.Interaction:12 discord.interactions.Interaction:36
#: discord.interactions.MessageInteraction:15 discord.invite.Invite:53
#: discord.invite.Invite:90 discord.invite.Invite:97
#: discord.invite.PartialInviteChannel:34 discord.invite.PartialInviteGuild:34
#: discord.message.Attachment:28 discord.message.Attachment:34
#: discord.message.Attachment.save:24 discord.message.Message:123
#: discord.message.MessageReference:18 discord.message.PartialMessage:39
#: discord.object.Object:32 discord.opus.OpusError:7
#: discord.permissions.Permissions:62
#: discord.raw_models.AutoModActionExecutionEvent:15
#: discord.raw_models.AutoModActionExecutionEvent:21
#: discord.raw_models.AutoModActionExecutionEvent:33
#: discord.raw_models.RawBulkMessageDeleteEvent:13
#: discord.raw_models.RawIntegrationDeleteEvent:9
#: discord.raw_models.RawIntegrationDeleteEvent:21
#: discord.raw_models.RawMessageDeleteEvent:7
#: discord.raw_models.RawMessageDeleteEvent:19
#: discord.raw_models.RawMessageUpdateEvent:7
#: discord.raw_models.RawMessageUpdateEvent:15
#: discord.raw_models.RawReactionActionEvent:8
#: discord.raw_models.RawReactionActionEvent:14
#: discord.raw_models.RawReactionActionEvent:20
#: discord.raw_models.RawReactionClearEmojiEvent:9
#: discord.raw_models.RawReactionClearEmojiEvent:15
#: discord.raw_models.RawReactionClearEvent:7
#: discord.raw_models.RawReactionClearEvent:13
#: discord.raw_models.RawScheduledEventSubscription:10
#: discord.raw_models.RawScheduledEventSubscription:16
#: discord.raw_models.RawThreadDeleteEvent:9
#: discord.raw_models.RawThreadDeleteEvent:21
#: discord.raw_models.RawThreadDeleteEvent:27
#: discord.raw_models.RawTypingEvent:9 discord.raw_models.RawTypingEvent:15
#: discord.reaction.Reaction:36 discord.role.Role:41 discord.role.Role:74
#: discord.shard.ShardInfo:12 discord.stage_instance.StageInstance:23
#: discord.stage_instance.StageInstance:35 discord.sticker.GuildSticker:29
#: discord.sticker.GuildSticker:53 discord.sticker.StandardSticker:29
#: discord.sticker.StandardSticker:41 discord.sticker.StandardSticker:59
#: discord.sticker.Sticker:29 discord.sticker.Sticker:41
#: discord.sticker.StickerItem:29 discord.sticker.StickerPack:35
#: discord.sticker.StickerPack:47 discord.sticker.StickerPack:53
#: discord.team.Team:7 discord.team.Team:19 discord.team.TeamMember:33
#: discord.template.Template:15 discord.threads.Thread:42
#: discord.threads.Thread:48 discord.threads.Thread:54
#: discord.threads.Thread:70 discord.threads.Thread:76
#: discord.threads.Thread:82 discord.threads.Thread:115
#: discord.threads.ThreadMember:27 discord.threads.ThreadMember:33
#: discord.ui.Select.max_values:3 discord.ui.Select.min_values:3
#: discord.user.ClientUser:31 discord.user.User:31
#: discord.utils.generate_snowflake:9 discord.utils.time_snowflake:16
#: discord.webhook.async_.PartialWebhookChannel:11
#: discord.webhook.async_.PartialWebhookGuild:11
#: discord.webhook.async_.Webhook:49 discord.webhook.sync.SyncWebhook:26
#: discord.widget.Widget:21 discord.widget.WidgetChannel:25
#: discord.widget.WidgetChannel:37 discord.widget.WidgetMember:25 of
msgid ":class:`int`"
msgstr ""

#: ../../docstring discord.ApplicationContext.guild:1 of
msgid ""
"Returns the guild associated with this context's command. Shorthand for "
":attr:`.Interaction.guild`."
msgstr ""

#: ../../docstring discord.ApplicationContext.guild_id:1 of
msgid ""
"Returns the ID of the guild associated with this context's command. "
"Shorthand for :attr:`.Interaction.guild_id`."
msgstr ""

#: ../../docstring discord.ApplicationContext.locale:1 of
msgid ""
"Returns the locale of the guild associated with this context's command. "
"Shorthand for :attr:`.Interaction.locale`."
msgstr ""

#: ../../docstring discord.ApplicationContext.guild_locale:1 of
msgid ""
"Returns the locale of the guild associated with this context's command. "
"Shorthand for :attr:`.Interaction.guild_locale`."
msgstr ""

#: ../../docstring discord.ApplicationContext.me:1 of
msgid ""
"Union[:class:`.Member`, :class:`.ClientUser`]: Similar to "
":attr:`.Guild.me` except it may return the :class:`.ClientUser` in "
"private message message contexts, or when :meth:`Intents.guilds` is "
"absent."
msgstr ""

#: ../../docstring discord.ApplicationContext.message:1 of
msgid ""
"Returns the message sent with this context's command. Shorthand for "
":attr:`.Interaction.message`, if applicable."
msgstr ""

#: ../../docstring discord.ApplicationContext.author:1
#: discord.ApplicationContext.user:1 of
msgid ""
"Returns the user that sent this context's command. Shorthand for "
":attr:`.Interaction.user`."
msgstr ""

#: ../../docstring discord.ApplicationContext.author:4
#: discord.ApplicationContext.user:4 of
msgid "Union[:class:`.Member`, :class:`.User`]"
msgstr ""

#: discord.ApplicationContext.voice_client:1 of
msgid ""
"Returns the voice client associated with this context's command. "
"Shorthand for "
":attr:`Interaction.guild.voice_client<~discord.Guild.voice_client>`, if "
"applicable."
msgstr ""

#: discord.ApplicationContext.voice_client:4 of
msgid "Optional[:class:`.VoiceProtocol`]"
msgstr ""

#: ../../docstring discord.ApplicationContext.response:1 of
msgid ""
"Returns the response object associated with this context's command. "
"Shorthand for :attr:`.Interaction.response`."
msgstr ""

#: ../../docstring discord.ApplicationContext.response:4 of
msgid ":class:`.InteractionResponse`"
msgstr ""

#: discord.ApplicationContext.selected_options:1 of
msgid ""
"The options and values that were selected by the user when sending the "
"command."
msgstr ""

#: discord.ApplicationContext.selected_options:3 of
msgid ""
"A dictionary containing the options and values that were selected by the "
"user when the command was processed, if applicable. Returns ``None`` if "
"the command has not yet been invoked, or if there are no options defined "
"for that command."
msgstr ""

#: discord.ApplicationContext.selected_options:6 of
msgid "Optional[List[Dict[:class:`str`, Any]]]"
msgstr ""

#: discord.ApplicationContext.unselected_options:1 of
msgid "The options that were not provided by the user when sending the command."
msgstr ""

#: discord.ApplicationContext.unselected_options:3 of
msgid ""
"A list of Option objects (if any) that were not selected by the user when"
" the command was processed. Returns ``None`` if there are no options "
"defined for that command."
msgstr ""

#: discord.ApplicationContext.unselected_options:5 of
msgid "Optional[List[:class:`.Option`]]"
msgstr ""

#: discord.ApplicationContext.send_modal:1
#: discord.interactions.InteractionResponse.send_modal:1 of
msgid ""
"|coro| Responds to this interaction by sending a modal dialog. This "
"cannot be used to respond to another modal dialog submission."
msgstr ""

#: discord.ApplicationContext.send_modal:5
#: discord.interactions.InteractionResponse.send_modal:5 of
msgid "The modal dialog to display to the user."
msgstr ""

#: discord.ApplicationContext.send_modal:8
#: discord.interactions.InteractionResponse.send_modal:8 of
msgid "Sending the modal failed."
msgstr ""

#: discord.ApplicationContext.defer:27 discord.ApplicationContext.send_modal:9
#: discord.ApplicationContext.send_response:35
#: discord.interactions.InteractionResponse.defer:27
#: discord.interactions.InteractionResponse.edit_message:31
#: discord.interactions.InteractionResponse.pong:8
#: discord.interactions.InteractionResponse.send_autocomplete_result:8
#: discord.interactions.InteractionResponse.send_message:35
#: discord.interactions.InteractionResponse.send_modal:9 of
msgid "This interaction has already been responded to before."
msgstr ""

#: discord.commands.context.ApplicationContext.respond:3 of
msgid ""
"Sends either a response or a message using the followup webhook "
"determined by whether the interaction has been responded to or not."
msgstr ""

#: discord.commands.context.ApplicationContext.respond:6 of
msgid ""
"The response, its type depending on whether it's an interaction response "
"or a followup."
msgstr ""

#: discord.commands.context.ApplicationContext.respond:7 of
msgid "Union[:class:`discord.Interaction`, :class:`discord.WebhookMessage`]"
msgstr ""

#: discord.ApplicationContext.send_response:3
#: discord.interactions.InteractionResponse.send_message:3 of
msgid "Responds to this interaction by sending a message."
msgstr ""

#: discord.ApplicationContext.send_followup:14
#: discord.ApplicationContext.send_response:5 discord.abc.Messageable.send:19
#: discord.channel.ForumChannel.create_thread:12
#: discord.interactions.InteractionResponse.send_message:5
#: discord.webhook.async_.Webhook.send:14
#: discord.webhook.sync.SyncWebhook.send:12 of
msgid "The content of the message to send."
msgstr ""

#: discord.ApplicationContext.send_followup:45
#: discord.ApplicationContext.send_response:7
#: discord.interactions.InteractionResponse.send_message:7
#: discord.webhook.async_.Webhook.send:45
#: discord.webhook.sync.SyncWebhook.send:35 of
msgid ""
"A list of embeds to send with the content. Maximum of 10. This cannot be "
"mixed with the ``embed`` parameter."
msgstr ""

#: discord.ApplicationContext.send_followup:42
#: discord.ApplicationContext.send_response:10
#: discord.interactions.InteractionResponse.send_message:10
#: discord.webhook.async_.Webhook.send:42
#: discord.webhook.sync.SyncWebhook.send:32 of
msgid ""
"The rich embed for the content to send. This cannot be mixed with "
"``embeds`` parameter."
msgstr ""

#: discord.ApplicationContext.send_followup:28
#: discord.ApplicationContext.send_response:13 discord.abc.Messageable.send:21
#: discord.interactions.InteractionResponse.send_message:13
#: discord.webhook.async_.Webhook.send:28
#: discord.webhook.sync.SyncWebhook.send:25 of
msgid "Indicates if the message should be sent using text-to-speech."
msgstr ""

#: discord.ApplicationContext.send_response:15
#: discord.interactions.InteractionResponse.send_message:15 of
msgid "The view to send with the message."
msgstr ""

#: discord.ApplicationContext.send_response:17
#: discord.interactions.InteractionResponse.send_message:17 of
msgid ""
"Indicates if the message should only be visible to the user who started "
"the interaction. If a view is sent with an ephemeral message, and it has "
"no timeout set then the timeout is set to 15 minutes."
msgstr ""

#: discord.ApplicationContext.edit:26
#: discord.ApplicationContext.send_response:21
#: discord.interactions.Interaction.edit_original_message:26
#: discord.interactions.InteractionMessage.edit:20
#: discord.interactions.InteractionResponse.send_message:21
#: discord.webhook.async_.Webhook.edit_message:34
#: discord.webhook.async_.WebhookMessage.edit:31
#: discord.webhook.sync.SyncWebhook.edit_message:22
#: discord.webhook.sync.SyncWebhookMessage.edit:15 of
msgid ""
"Controls the mentions being processed in this message. See "
":meth:`.abc.Messageable.send` for more information."
msgstr ""

#: discord.ApplicationContext.send_followup:67
#: discord.ApplicationContext.send_response:24
#: discord.interactions.InteractionResponse.send_message:24
#: discord.webhook.async_.Webhook.send:67 of
msgid ""
"If provided, the number of seconds to wait in the background before "
"deleting the message we just sent."
msgstr ""

#: discord.ApplicationContext.send_response:27 discord.abc.Messageable.send:25
#: discord.channel.ForumChannel.create_thread:18
#: discord.interactions.InteractionResponse.send_message:27 of
msgid "The file to upload."
msgstr ""

#: discord.ApplicationContext.send_response:29 discord.abc.Messageable.send:27
#: discord.channel.ForumChannel.create_thread:20
#: discord.interactions.InteractionResponse.send_message:29 of
msgid "A list of files to upload. Must be a maximum of 10."
msgstr ""

#: discord.ApplicationContext.send_followup:71
#: discord.ApplicationContext.send_response:32 discord.abc.Messageable.send:69
#: discord.interactions.InteractionResponse.send_message:32
#: discord.message.Message.reply:8 discord.webhook.async_.Webhook.send:71
#: discord.webhook.sync.SyncWebhook.send:51 of
msgid "Sending the message failed."
msgstr ""

#: discord.ApplicationContext.send_response:33
#: discord.interactions.InteractionResponse.edit_message:30
#: discord.interactions.InteractionResponse.send_message:33 of
msgid "You specified both ``embed`` and ``embeds``."
msgstr ""

#: discord.ApplicationContext.edit:40
#: discord.ApplicationContext.send_followup:75
#: discord.ApplicationContext.send_response:34
#: discord.interactions.Interaction.edit_original_message:40
#: discord.interactions.InteractionMessage.edit:34
#: discord.interactions.InteractionResponse.send_message:34
#: discord.webhook.async_.Webhook.send:75 of
msgid "The length of ``embeds`` was invalid."
msgstr ""

#: discord.ApplicationContext.send_response:37
#: discord.interactions.InteractionResponse.send_message:37 of
msgid "The interaction object associated with the sent message."
msgstr ""

#: discord.ApplicationContext.send_followup:3
#: discord.webhook.async_.Webhook.send:3
#: discord.webhook.sync.SyncWebhook.send:1 of
msgid "Sends a message using the webhook."
msgstr ""

#: discord.ApplicationContext.send_followup:5
#: discord.webhook.async_.Webhook.send:5
#: discord.webhook.sync.SyncWebhook.send:3 of
msgid ""
"The content must be a type that can convert to a string through "
"``str(content)``."
msgstr ""

#: discord.ApplicationContext.send_followup:7
#: discord.webhook.async_.Webhook.send:7
#: discord.webhook.sync.SyncWebhook.send:5 of
msgid ""
"To upload a single file, the ``file`` parameter should be used with a "
"single :class:`File` object."
msgstr ""

#: discord.ApplicationContext.send_followup:10
#: discord.webhook.async_.Webhook.send:10
#: discord.webhook.sync.SyncWebhook.send:8 of
msgid ""
"If the ``embed`` parameter is provided, it must be of type :class:`Embed`"
" and it must be a rich embed type. You cannot mix the ``embed`` parameter"
" with the ``embeds`` parameter, which must be a :class:`list` of "
":class:`Embed` objects to send."
msgstr ""

#: discord.ApplicationContext.send_followup:16
#: discord.webhook.async_.Webhook.send:16 of
msgid ""
"Whether the server should wait before sending a response. This "
"essentially means that the return type of this function changes from "
"``None`` to a :class:`WebhookMessage` if set to ``True``. If the type of "
"webhook is :attr:`WebhookType.application` then this is always set to "
"``True``."
msgstr ""

#: discord.ApplicationContext.send_followup:21
#: discord.webhook.async_.Webhook.send:21
#: discord.webhook.sync.SyncWebhook.send:18 of
msgid ""
"The username to send with this message. If no username is provided then "
"the default username for the webhook is used."
msgstr ""

#: discord.ApplicationContext.send_followup:24
#: discord.webhook.async_.Webhook.send:24
#: discord.webhook.sync.SyncWebhook.send:21 of
msgid ""
"The avatar URL to send with this message. If no avatar URL is provided "
"then the default avatar for the webhook is used. If this is not a string "
"then it is explicitly cast using ``str``."
msgstr ""

#: discord.ApplicationContext.send_followup:30
#: discord.webhook.async_.Webhook.send:30 of
msgid ""
"Indicates if the message should only be visible to the user. This is only"
" available to :attr:`WebhookType.application` webhooks. If a view is sent"
" with an ephemeral message, and it has no timeout set then the timeout is"
" set to 15 minutes.  .. versionadded:: 2.0"
msgstr ""

#: discord.ApplicationContext.send_followup:30
#: discord.webhook.async_.Webhook.send:30 of
msgid ""
"Indicates if the message should only be visible to the user. This is only"
" available to :attr:`WebhookType.application` webhooks. If a view is sent"
" with an ephemeral message, and it has no timeout set then the timeout is"
" set to 15 minutes."
msgstr ""

#: discord.ApplicationContext.edit:18
#: discord.ApplicationContext.send_followup:37
#: discord.interactions.Interaction.edit_original_message:18
#: discord.interactions.InteractionMessage.edit:12
#: discord.webhook.async_.Webhook.edit_message:25
#: discord.webhook.async_.Webhook.send:37
#: discord.webhook.async_.WebhookMessage.edit:17
#: discord.webhook.sync.SyncWebhook.edit_message:17
#: discord.webhook.sync.SyncWebhook.send:27
#: discord.webhook.sync.SyncWebhookMessage.edit:10 of
msgid "The file to upload. This cannot be mixed with ``files`` parameter."
msgstr ""

#: discord.ApplicationContext.edit:20
#: discord.ApplicationContext.send_followup:39
#: discord.interactions.Interaction.edit_original_message:20
#: discord.interactions.InteractionMessage.edit:14
#: discord.webhook.async_.Webhook.edit_message:29
#: discord.webhook.async_.Webhook.send:39
#: discord.webhook.async_.WebhookMessage.edit:21
#: discord.webhook.sync.SyncWebhook.edit_message:19
#: discord.webhook.sync.SyncWebhook.send:29
#: discord.webhook.sync.SyncWebhookMessage.edit:12 of
msgid ""
"A list of files to send with the content. This cannot be mixed with the "
"``file`` parameter."
msgstr ""

#: discord.ApplicationContext.send_followup:48
#: discord.webhook.async_.Webhook.send:48
#: discord.webhook.sync.SyncWebhook.send:38 of
msgid ""
"Controls the mentions being processed in this message.  .. versionadded::"
" 1.4"
msgstr ""

#: discord.ApplicationContext.send_followup:48
#: discord.webhook.async_.Webhook.send:48
#: discord.webhook.sync.SyncWebhook.send:38 of
msgid "Controls the mentions being processed in this message."
msgstr ""

#: discord.ApplicationContext.send_followup:52
#: discord.webhook.async_.Webhook.send:52 of
msgid ""
"The view to send with the message. You can only send a view if this "
"webhook is not partial and has state attached. A webhook has state "
"attached if the webhook is managed by the library.  .. versionadded:: 2.0"
msgstr ""

#: discord.ApplicationContext.send_followup:52
#: discord.webhook.async_.Webhook.send:52 of
msgid ""
"The view to send with the message. You can only send a view if this "
"webhook is not partial and has state attached. A webhook has state "
"attached if the webhook is managed by the library."
msgstr ""

#: discord.ApplicationContext.send_followup:59
#: discord.webhook.async_.Webhook.send:59 of
msgid "The thread to send this webhook to.  .. versionadded:: 2.0"
msgstr ""

#: discord.ApplicationContext.send_followup:59
#: discord.webhook.async_.Webhook.send:59 of
msgid "The thread to send this webhook to."
msgstr ""

#: discord.ApplicationContext.send_followup:63
#: discord.webhook.async_.Webhook.send:63
#: discord.webhook.sync.SyncWebhook.send:46 of
msgid ""
"The name of the thread to create. Only works for forum channels.  .. "
"versionadded:: 2.0"
msgstr ""

#: discord.ApplicationContext.send_followup:63
#: discord.webhook.async_.Webhook.send:63
#: discord.webhook.sync.SyncWebhook.send:46 of
msgid "The name of the thread to create. Only works for forum channels."
msgstr ""

#: discord.ApplicationContext.send_followup:72
#: discord.webhook.async_.Webhook.send:72
#: discord.webhook.sync.SyncWebhook.send:52 of
msgid "This webhook was not found."
msgstr ""

#: discord.ApplicationContext.send_followup:73
#: discord.webhook.async_.Webhook.send:73
#: discord.webhook.sync.SyncWebhook.send:53 of
msgid "The authorization token for the webhook is incorrect."
msgstr ""

#: discord.ApplicationContext.send_followup:74
#: discord.webhook.async_.Webhook.send:74 of
msgid "You specified both ``embed`` and ``embeds`` or ``file`` and ``files``."
msgstr ""

#: discord.ApplicationContext.send_followup:76
#: discord.webhook.async_.Webhook.send:76 of
msgid ""
"Either there was no token associated with this webhook, ``ephemeral`` was"
" passed     with the improper webhook type, there was no state attached "
"with this webhook when     giving it a view, or you specified both "
"``thread_name`` and ``thread``."
msgstr ""

#: discord.ApplicationContext.send_followup:78
#: discord.webhook.async_.Webhook.send:78
#: discord.webhook.sync.SyncWebhook.send:58 of
msgid ""
"If ``wait`` is ``True`` then the message that was sent, otherwise "
"``None``."
msgstr ""

#: discord.ApplicationContext.send_followup:79
#: discord.webhook.async_.Webhook.send:79 of
msgid "Optional[:class:`WebhookMessage`]"
msgstr ""

#: discord.ApplicationContext.defer:3
#: discord.interactions.InteractionResponse.defer:3 of
msgid "Defers the interaction response."
msgstr ""

#: discord.ApplicationContext.defer:5
#: discord.interactions.InteractionResponse.defer:5 of
msgid ""
"This is typically used when the interaction is acknowledged and a "
"secondary action will be done later."
msgstr ""

#: discord.ApplicationContext.defer:8
#: discord.interactions.InteractionResponse.defer:8 of
msgid "This can only be used with the following interaction types:"
msgstr ""

#: discord.ApplicationContext.defer:10
#: discord.interactions.InteractionResponse.defer:10 of
msgid ":attr:`InteractionType.application_command`"
msgstr ""

#: discord.ApplicationContext.defer:11
#: discord.interactions.InteractionResponse.defer:11 of
msgid ":attr:`InteractionType.component`"
msgstr ""

#: discord.ApplicationContext.defer:12
#: discord.interactions.InteractionResponse.defer:12 of
msgid ":attr:`InteractionType.modal_submit`"
msgstr ""

#: discord.ApplicationContext.defer:14
#: discord.interactions.InteractionResponse.defer:14 of
msgid ""
"Indicates whether the deferred message will eventually be ephemeral. This"
" only applies to :attr:`InteractionType.application_command` "
"interactions, or if ``invisible`` is ``False``."
msgstr ""

#: discord.ApplicationContext.defer:18
#: discord.interactions.InteractionResponse.defer:18 of
msgid ""
"Indicates whether the deferred type should be 'invisible' "
"(:attr:`InteractionResponseType.deferred_message_update`) instead of "
"'thinking' (:attr:`InteractionResponseType.deferred_channel_message`). In"
" the Discord UI, this is represented as the bot thinking of a response. "
"You must eventually send a followup message via "
":attr:`Interaction.followup` to make this thinking state go away. This "
"parameter does not apply to interactions of type "
":attr:`InteractionType.application_command`."
msgstr ""

#: discord.ApplicationContext.defer:26
#: discord.interactions.InteractionResponse.defer:26 of
msgid "Deferring the interaction failed."
msgstr ""

#: ../../docstring discord.ApplicationContext.followup:1
#: discord.Interaction.followup:1 of
msgid "Returns the followup webhook for followup interactions."
msgstr ""

#: ../../docstring discord.ApplicationContext.followup:3
#: discord.Interaction.followup:3
#: discord.channel.VoiceChannel.create_webhook:22
#: discord.channel._TextChannel.create_webhook:22
#: discord.channel._TextChannel.follow:23
#: discord.webhook.async_.Webhook.fetch:24
#: discord.webhook.async_.Webhook.from_url:21
#: discord.webhook.async_.Webhook.partial:21
#: discord.webhook.sync.SyncWebhook.from_url:18
#: discord.webhook.sync.SyncWebhook.partial:18 of
msgid ":class:`Webhook`"
msgstr ""

#: discord.commands.context.ApplicationContext.delete:3
#: discord.interactions.Interaction.delete_original_message:3 of
msgid "Deletes the original interaction response message."
msgstr ""

#: discord.commands.context.ApplicationContext.delete:5 of
msgid ""
"This is a higher level interface to "
":meth:`Interaction.delete_original_message`."
msgstr ""

#: discord.commands.context.ApplicationContext.delete:7 of
msgid "If provided, the number of seconds to wait before deleting the message."
msgstr ""

#: discord.commands.context.ApplicationContext.delete:10
#: discord.interactions.Interaction.delete_original_message:12
#: discord.interactions.InteractionMessage.delete:11
#: discord.message.Message.delete:20
#: discord.webhook.async_.Webhook.delete_message:15
#: discord.webhook.async_.WebhookMessage.delete:11
#: discord.webhook.sync.SyncWebhook.delete_message:13
#: discord.webhook.sync.SyncWebhookMessage.delete:9 of
msgid "Deleting the message failed."
msgstr ""

#: discord.commands.context.ApplicationContext.delete:11
#: discord.interactions.InteractionMessage.delete:9
#: discord.message.Message.delete:18
#: discord.webhook.async_.WebhookMessage.delete:9
#: discord.webhook.sync.SyncWebhookMessage.delete:7 of
msgid "You do not have proper permissions to delete the message."
msgstr ""

#: discord.ApplicationContext.edit:3
#: discord.interactions.Interaction.edit_original_message:3 of
msgid "Edits the original interaction response message."
msgstr ""

#: discord.ApplicationContext.edit:5
#: discord.interactions.Interaction.edit_original_message:5 of
msgid ""
"This is a lower level interface to :meth:`InteractionMessage.edit` in "
"case you do not want to fetch the message and save an HTTP request."
msgstr ""

#: discord.ApplicationContext.edit:8
#: discord.interactions.Interaction.edit_original_message:8 of
msgid ""
"This method is also the only way to edit the original message if the "
"message sent was ephemeral."
msgstr ""

#: discord.ApplicationContext.edit:11
#: discord.interactions.Interaction.edit_original_message:11
#: discord.interactions.InteractionMessage.edit:5
#: discord.webhook.async_.Webhook.edit_message:15
#: discord.webhook.async_.WebhookMessage.edit:10
#: discord.webhook.sync.SyncWebhook.edit_message:10
#: discord.webhook.sync.SyncWebhookMessage.edit:3 of
msgid "The content to edit the message with or ``None`` to clear it."
msgstr ""

#: discord.ApplicationContext.edit:13
#: discord.interactions.Interaction.edit_original_message:13
#: discord.interactions.InteractionMessage.edit:7
#: discord.interactions.InteractionResponse.edit_message:8
#: discord.webhook.async_.Webhook.edit_message:17
#: discord.webhook.async_.WebhookMessage.edit:12
#: discord.webhook.sync.SyncWebhook.edit_message:12
#: discord.webhook.sync.SyncWebhookMessage.edit:5 of
msgid "A list of embeds to edit the message with."
msgstr ""

#: discord.ApplicationContext.edit:15
#: discord.interactions.Interaction.edit_original_message:15
#: discord.interactions.InteractionMessage.edit:9
#: discord.interactions.InteractionResponse.edit_message:10
#: discord.webhook.async_.Webhook.edit_message:19
#: discord.webhook.async_.WebhookMessage.edit:14
#: discord.webhook.sync.SyncWebhook.edit_message:14
#: discord.webhook.sync.SyncWebhookMessage.edit:7 of
msgid ""
"The embed to edit the message with. ``None`` suppresses the embeds. This "
"should not be mixed with the ``embeds`` parameter."
msgstr ""

#: discord.ApplicationContext.edit:23
#: discord.interactions.Interaction.edit_original_message:23
#: discord.interactions.InteractionMessage.edit:17
#: discord.interactions.InteractionResponse.edit_message:18
#: discord.message.Message.edit:25
#: discord.webhook.async_.Webhook.edit_message:22
#: discord.webhook.async_.WebhookMessage.edit:26 of
msgid ""
"A list of attachments to keep in the message. If ``[]`` is passed then "
"all attachments are removed."
msgstr ""

#: discord.ApplicationContext.edit:29
#: discord.interactions.Interaction.edit_original_message:29
#: discord.interactions.InteractionMessage.edit:23
#: discord.interactions.InteractionResponse.edit_message:21
#: discord.message.Message.edit:46 discord.message.PartialMessage.edit:34
#: discord.webhook.async_.WebhookMessage.edit:34 of
msgid ""
"The updated view to update this message with. If ``None`` is passed then "
"the view is removed."
msgstr ""

#: discord.ApplicationContext.edit:32
#: discord.interactions.Interaction.edit_original_message:32
#: discord.interactions.InteractionMessage.edit:26
#: discord.interactions.InteractionResponse.edit_message:24
#: discord.message.Message.edit:33 discord.message.PartialMessage.edit:23 of
msgid ""
"If provided, the number of seconds to wait in the background before "
"deleting the message we just edited. If the deletion fails, then it is "
"silently ignored."
msgstr ""

#: discord.ApplicationContext.edit:37
#: discord.interactions.Interaction.edit_original_message:37
#: discord.interactions.InteractionMessage.edit:31
#: discord.interactions.InteractionResponse.edit_message:29
#: discord.message.Message.edit:50 discord.message.PartialMessage.edit:41
#: discord.webhook.async_.Webhook.edit_message:46
#: discord.webhook.async_.WebhookMessage.edit:40
#: discord.webhook.sync.SyncWebhook.edit_message:28
#: discord.webhook.sync.SyncWebhookMessage.edit:19 of
msgid "Editing the message failed."
msgstr ""

#: discord.ApplicationContext.edit:38
#: discord.interactions.Interaction.edit_original_message:38
#: discord.interactions.InteractionMessage.edit:32
#: discord.webhook.async_.Webhook.edit_message:47
#: discord.webhook.async_.WebhookMessage.edit:41
#: discord.webhook.sync.SyncWebhook.edit_message:29
#: discord.webhook.sync.SyncWebhookMessage.edit:20 of
msgid "Edited a message that is not yours."
msgstr ""

#: discord.ApplicationContext.edit:39
#: discord.interactions.Interaction.edit_original_message:39
#: discord.interactions.InteractionMessage.edit:33
#: discord.webhook.async_.Webhook.edit_message:48
#: discord.webhook.async_.WebhookMessage.edit:42
#: discord.webhook.sync.SyncWebhook.edit_message:30
#: discord.webhook.sync.SyncWebhook.send:54
#: discord.webhook.sync.SyncWebhookMessage.edit:21 of
msgid "You specified both ``embed`` and ``embeds`` or ``file`` and ``files``"
msgstr ""

#: discord.ApplicationContext.edit:42
#: discord.interactions.Interaction.edit_original_message:42
#: discord.interactions.InteractionMessage.edit:36
#: discord.webhook.async_.WebhookMessage.edit:46
#: discord.webhook.sync.SyncWebhookMessage.edit:25 of
msgid "The newly edited message."
msgstr ""

#: discord.ApplicationContext.edit:43
#: discord.interactions.Interaction.edit_original_message:43
#: discord.interactions.InteractionMessage.edit:37 of
msgid ":class:`InteractionMessage`"
msgstr ""

#: discord.ApplicationContext.cog:1 discord.AutocompleteContext.cog:1 of
msgid ""
"Returns the cog associated with this context's command. ``None`` if it "
"does not exist."
msgstr ""

#: ../../api.rst:202
msgid "AutocompleteContext"
msgstr ""

#: discord.commands.context.AutocompleteContext:1 of
msgid "Represents context for a slash command's option autocomplete."
msgstr ""

#: discord.commands.context.AutocompleteContext:3 of
msgid ""
"This class is not created manually and is instead passed to an "
":class:`.Option`'s autocomplete callback."
msgstr ""

#: discord.commands.context.AutocompleteContext:15 of
msgid "The interaction object that invoked the autocomplete."
msgstr ""

#: discord.commands.context.AutocompleteContext:27 of
msgid "The option the user is currently typing."
msgstr ""

#: discord.commands.context.AutocompleteContext:29 of
msgid ":class:`.Option`"
msgstr ""

#: discord.commands.context.AutocompleteContext:33 of
msgid "The content of the focused option."
msgstr ""

#: discord.commands.context.AutocompleteContext:35 of
msgid ":class:`.str`"
msgstr ""

#: discord.commands.context.AutocompleteContext:39 of
msgid ""
"A name to value mapping of the options that the user has selected before "
"this option."
msgstr ""

#: discord.commands.context.AutocompleteContext:41
#: discord.interactions.Interaction.to_dict:4 of
msgid "Dict[:class:`str`, Any]"
msgstr ""

#: ../../api.rst:210
msgid "Cogs"
msgstr ""

#: ../../api.rst:213
msgid "Cog"
msgstr ""

#: discord.cog.Cog:1 of
msgid "The base class that all cogs must inherit from."
msgstr ""

#: discord.cog.Cog:3 of
msgid ""
"A cog is a collection of commands, listeners, and optional state to help "
"group commands together. More information on them can be found on the "
":ref:`ext_commands_cogs` page."
msgstr ""

#: discord.cog.Cog:7 of
msgid ""
"When inheriting from this class, the options shown in :class:`CogMeta` "
"are equally valid here."
msgstr ""

#: discord.cog.Cog.get_commands:1 of
msgid ""
"A :class:`list` of :class:`.ApplicationCommand`\\s that are defined "
"inside this cog.  .. note::      This does not include subcommands."
msgstr ""

#: discord.cog.Cog.get_commands:1 of
msgid ""
"A :class:`list` of :class:`.ApplicationCommand`\\s that are defined "
"inside this cog."
msgstr ""

#: discord.cog.Cog.get_commands:6 of
msgid "This does not include subcommands."
msgstr ""

#: discord.cog.Cog.get_commands:7 of
msgid "List[:class:`.ApplicationCommand`]"
msgstr ""

#: discord.Cog.qualified_name:1 of
msgid "Returns the cog's specified name, not the class name."
msgstr ""

#: discord.Cog.description:1 of
msgid "Returns the cog's description, typically the cleaned docstring."
msgstr ""

#: discord.cog.Cog.walk_commands:1 of
msgid ""
"An iterator that recursively walks through this cog's commands and "
"subcommands."
msgstr ""

#: discord.cog.Cog.walk_commands:3 of
msgid ""
"Union[:class:`.Command`, :class:`.Group`] -- A command or group from the "
"cog."
msgstr ""

#: discord.cog.Cog.get_listeners:1 of
msgid ""
"Returns a :class:`list` of (name, function) listener pairs that are "
"defined in this cog."
msgstr ""

#: discord.cog.Cog.get_listeners:3 of
msgid "The listeners defined in this cog."
msgstr ""

#: discord.cog.Cog.get_listeners:4 of
msgid "List[Tuple[:class:`str`, :ref:`coroutine <coroutine>`]]"
msgstr ""

#: discord.cog.Cog.listener:1 of
msgid "A decorator that marks a function as a listener."
msgstr ""

#: discord.cog.Cog.listener:3 of
msgid "This is the cog equivalent of :meth:`.Bot.listen`."
msgstr ""

#: discord.cog.Cog.listener:5 of
msgid ""
"The name of the event being listened to. If not provided, it defaults to "
"the function's name."
msgstr ""

#: discord.cog.Cog.listener:9 of
msgid ""
"The function is not a coroutine function or a string was not passed as"
"     the name."
msgstr ""

#: discord.cog.Cog.has_error_handler:1 of
msgid ":class:`bool`: Checks whether the cog has an error handler."
msgstr ""

#: discord.cog.Cog.cog_unload:1 of
msgid "A special method that is called when the cog gets removed."
msgstr ""

#: discord.cog.Cog.cog_unload:3 of
msgid "This function **cannot** be a coroutine. It must be a regular function."
msgstr ""

#: discord.cog.Cog.cog_unload:6 of
msgid "Subclasses must replace this if they want special unloading behaviour."
msgstr ""

#: discord.cog.Cog.bot_check_once:1 of
msgid "A special method that registers as a :meth:`.Bot.check_once` check."
msgstr ""

#: discord.cog.Cog.bot_check:4 discord.cog.Cog.bot_check_once:4
#: discord.cog.Cog.cog_check:4 of
msgid ""
"This function **can** be a coroutine and must take a sole parameter, "
"``ctx``, to represent the :class:`.Context` or "
":class:`.ApplicationContext`."
msgstr ""

#: discord.cog.Cog.bot_check:7 discord.cog.Cog.bot_check_once:7
#: discord.cog.Cog.cog_after_invoke:7 discord.cog.Cog.cog_before_invoke:7
#: discord.cog.Cog.cog_check:7 of
msgid "The invocation context."
msgstr ""

#: discord.cog.Cog.bot_check:1 of
msgid "A special method that registers as a :meth:`.Bot.check` check."
msgstr ""

#: discord.cog.Cog.cog_check:1 of
msgid ""
"A special method that registers as a :func:`~discord.ext.commands.check` "
"for every command and subcommand in this cog."
msgstr ""

#: discord.cog.Cog.cog_command_error:1 of
msgid ""
"A special method that is called whenever an error is dispatched inside "
"this cog."
msgstr ""

#: discord.cog.Cog.cog_command_error:4 of
msgid ""
"This is similar to :func:`.on_command_error` except only applying to the "
"commands inside this cog."
msgstr ""

#: discord.cog.Cog.cog_after_invoke:5 discord.cog.Cog.cog_before_invoke:5
#: discord.cog.Cog.cog_command_error:7 of
msgid "This **must** be a coroutine."
msgstr ""

#: discord.cog.Cog.cog_command_error:9 of
msgid "The invocation context where the error happened."
msgstr ""

#: discord.cog.Cog.cog_command_error:11 of
msgid "The error that happened."
msgstr ""

#: discord.cog.Cog.cog_before_invoke:1 of
msgid "A special method that acts as a cog local pre-invoke hook."
msgstr ""

#: discord.cog.Cog.cog_before_invoke:3 of
msgid "This is similar to :meth:`.Command.before_invoke`."
msgstr ""

#: discord.cog.Cog.cog_after_invoke:1 of
msgid "A special method that acts as a cog local post-invoke hook."
msgstr ""

#: discord.cog.Cog.cog_after_invoke:3 of
msgid "This is similar to :meth:`.Command.after_invoke`."
msgstr ""

#: ../../api.rst:221
msgid "CogMeta"
msgstr ""

#: discord.cog.CogMeta:1 of
msgid "A metaclass for defining a cog."
msgstr ""

#: discord.cog.CogMeta:3 of
msgid ""
"Note that you should probably not use this directly. It is exposed purely"
" for documentation purposes along with making custom metaclasses to "
"intermix with other metaclasses such as the :class:`abc.ABCMeta` "
"metaclass."
msgstr ""

#: discord.cog.CogMeta:7 of
msgid ""
"For example, to create an abstract cog mixin class, the following would "
"be done."
msgstr ""

#: discord.cog.CogMeta:24 of
msgid ""
"When passing an attribute of a metaclass that is documented below, note "
"that you must pass it as a keyword-only argument to the class creation "
"like the following example:"
msgstr ""

#: discord.cog.CogMeta:35 of
msgid ""
"The cog name. By default, it is the name of the class with no "
"modification."
msgstr ""

#: discord.cog.CogMeta:41 of
msgid "The cog description. By default, it is the cleaned docstring of the class."
msgstr ""

#: discord.cog.CogMeta:49 of
msgid ""
"A list of attributes to apply to every command inside this cog. The "
"dictionary is passed into the :class:`Command` options at ``__init__``. "
"If you specify attributes inside the command attribute in the class, it "
"will override the one specified inside this attribute. For example:"
msgstr ""

#: discord.cog.CogMeta:65 discord.interactions.Interaction:61
#: discord.interactions.MessageInteraction:39
#: discord.raw_models.RawMessageUpdateEvent:29 of
msgid ":class:`dict`"
msgstr ""

#: discord.cog.CogMeta:69 of
msgid ""
"A shortcut to :attr:`.command_attrs`, what ``guild_ids`` should all "
"application commands have in the cog. You can override this by setting "
"``guild_ids`` per command."
msgstr ""

#: ../../api.rst:229
msgid "Application Info"
msgstr ""

#: ../../api.rst:232
msgid "AppInfo"
msgstr ""

#: discord.appinfo.AppInfo:1 of
msgid "Represents the application info for the bot provided by Discord."
msgstr ""

#: discord.appinfo.AppInfo:6 discord.appinfo.PartialAppInfo:7 of
msgid "The application ID."
msgstr ""

#: discord.appinfo.AppInfo:12 discord.appinfo.PartialAppInfo:13 of
msgid "The application name."
msgstr ""

#: discord.appinfo.AppInfo:18 of
msgid "The application owner."
msgstr ""

#: ../../api.rst:4266 discord.appinfo.AppInfo:20
#: discord.integrations.BotIntegration:39 discord.integrations.Integration:45
#: discord.integrations.StreamIntegration:63
#: discord.interactions.MessageInteraction:33 discord.template.Template:33 of
msgid ":class:`User`"
msgstr ""

#: discord.appinfo.AppInfo:24 of
msgid "The application's team."
msgstr ""

#: discord.appinfo.AppInfo:28 of
msgid "Optional[:class:`Team`]"
msgstr ""

#: discord.appinfo.AppInfo:32 discord.appinfo.PartialAppInfo:19 of
msgid "The application description."
msgstr ""

#: discord.appinfo.AppInfo:38 of
msgid ""
"Whether the bot can be invited by anyone or if it is locked to the "
"application owner."
msgstr ""

#: discord.appinfo.AppInfo:45 of
msgid ""
"Whether the bot requires the completion of the full OAuth2 code grant "
"flow to join."
msgstr ""

#: discord.appinfo.AppInfo:52 discord.appinfo.PartialAppInfo:25 of
msgid "A list of RPC origin URLs, if RPC is enabled."
msgstr ""

#: discord.appinfo.AppInfo:54 discord.appinfo.PartialAppInfo:27 of
msgid "Optional[List[:class:`str`]]"
msgstr ""

#: discord.appinfo.AppInfo:58 discord.appinfo.PartialAppInfo:31 of
msgid ""
"If this application is a game sold on Discord, this field will be the "
"summary field for the store page of its primary SKU."
msgstr ""

#: discord.appinfo.AppInfo:67 discord.appinfo.PartialAppInfo:38 of
msgid ""
"The hex encoded key for verification in interactions and the GameSDK's "
"`GetTicket <https://discord.com/developers/docs/game-"
"sdk/applications#getticket>`_."
msgstr ""

#: discord.appinfo.AppInfo:76 of
msgid ""
"If this application is a game sold on Discord, this field will be the "
"guild to which it has been linked to."
msgstr ""

#: discord.appinfo.AppInfo:85 of
msgid ""
"If this application is a game sold on Discord, this field will be the id "
"of the \"Game SKU\" that is created, if it exists."
msgstr ""

#: discord.appinfo.AppInfo:95 of
msgid ""
"If this application is a game sold on Discord, this field will be the URL"
" slug that links to the store page."
msgstr ""

#: discord.appinfo.AppInfo:104 discord.appinfo.PartialAppInfo:45 of
msgid "The application's terms of service URL, if set."
msgstr ""

#: discord.appinfo.AppInfo:112 discord.appinfo.PartialAppInfo:51 of
msgid "The application's privacy policy URL, if set."
msgstr ""

#: discord.AppInfo.icon:1 discord.PartialAppInfo.icon:1 of
msgid "Retrieves the application's icon asset, if any."
msgstr ""

#: discord.AppInfo.cover_image:5 discord.AppInfo.icon:3
#: discord.PartialAppInfo.icon:3 discord.Team.icon:3 of
msgid "Optional[:class:`.Asset`]"
msgstr ""

#: discord.AppInfo.cover_image:1 of
msgid "Retrieves the cover image on a store embed, if any."
msgstr ""

#: discord.AppInfo.cover_image:3 of
msgid "This is only available if the application is a game sold on Discord."
msgstr ""

#: discord.AppInfo.guild:1 of
msgid ""
"If this application is a game sold on Discord, this field will be the "
"guild to which it has been linked."
msgstr ""

#: ../../docstring discord.AppInfo.guild:6 discord.AutoModRule.guild:3
#: discord.GuildSticker.guild:6 discord.Interaction.guild:3
#: discord.PartialMessage.guild:3 discord.SyncWebhook.guild:5
#: discord.VoiceClient.guild:3 discord.Webhook.guild:5
#: discord.message.Message:204
#: discord.raw_models.AutoModActionExecutionEvent:27
#: discord.raw_models.RawScheduledEventSubscription:22 of
msgid "Optional[:class:`Guild`]"
msgstr ""

#: ../../api.rst:240
msgid "PartialAppInfo"
msgstr ""

#: discord.appinfo.PartialAppInfo:1 of
msgid ""
"Represents a partial AppInfo given by "
":func:`~discord.abc.GuildChannel.create_invite`"
msgstr ""

#: ../../api.rst:248
msgid "Team"
msgstr ""

#: discord.team.Team:1 of
msgid "Represents an application team for a bot provided by Discord."
msgstr ""

#: discord.team.Team:5 of
msgid "The team ID."
msgstr ""

#: discord.team.Team:11 of
msgid "The team name."
msgstr ""

#: discord.team.Team:17 of
msgid "The team's owner ID."
msgstr ""

#: discord.team.Team:23 of
msgid "A list of the members in the team."
msgstr ""

#: discord.team.Team:27 of
msgid "List[:class:`TeamMember`]"
msgstr ""

#: discord.Team.icon:1 of
msgid "Retrieves the team's icon asset, if any."
msgstr ""

#: discord.Team.owner:1 of
msgid "The team's owner."
msgstr ""

#: discord.Team.owner:3 of
msgid "Optional[:class:`TeamMember`]"
msgstr ""

#: ../../api.rst:256
msgid "TeamMember"
msgstr ""

#: discord.team.TeamMember:1 of
msgid "Represents a team member in a team."
msgstr ""

#: discord.team.TeamMember:7 of
msgid "Checks if two team members are equal."
msgstr ""

#: discord.team.TeamMember:11 of
msgid "Checks if two team members are not equal."
msgstr ""

#: discord.team.TeamMember:15 of
msgid "Return the team member's hash."
msgstr ""

#: discord.team.TeamMember:19 of
msgid "Returns the team member's name with discriminator."
msgstr ""

#: discord.team.TeamMember:25 of
msgid "The team member's username."
msgstr ""

#: discord.team.TeamMember:31 of
msgid "The team member's unique ID."
msgstr ""

#: discord.team.TeamMember:37 of
msgid ""
"The team member's discriminator. This is given when the username has "
"conflicts."
msgstr ""

#: discord.team.TeamMember:43 of
msgid "The avatar hash the team member has. Could be ``None``."
msgstr ""

#: discord.team.TeamMember:49 discord.user.ClientUser:41 discord.user.User:41
#: of
msgid "Specifies if the user is a bot account."
msgstr ""

#: discord.team.TeamMember:55 of
msgid "The team that the member is from."
msgstr ""

#: discord.team.TeamMember:57 of
msgid ":class:`Team`"
msgstr ""

#: discord.team.TeamMember:61 of
msgid "The membership state of the member (e.g. invited or accepted)"
msgstr ""

#: discord.team.TeamMember:63 of
msgid ":class:`TeamMembershipState`"
msgstr ""

#: ../../api.rst:264
msgid "Voice Related"
msgstr ""

#: ../../api.rst:267
msgid "VoiceClient"
msgstr ""

#: discord.voice_client.VoiceClient:1 of
msgid "Represents a Discord voice connection."
msgstr ""

#: discord.voice_client.VoiceClient:3 of
msgid ""
"You do not create these, you typically get them from e.g. "
":meth:`VoiceChannel.connect`."
msgstr ""

#: discord.voice_client.VoiceClient:8 of
msgid ""
"In order to use PCM based AudioSources, you must have the opus library "
"installed on your system and loaded through :func:`opus.load_opus`. "
"Otherwise, your AudioSources must be opus encoded (e.g. using "
":class:`FFmpegOpusAudio`) or the library will not be able to transmit "
"audio."
msgstr ""

#: discord.voice_client.VoiceClient:15 of
msgid "The voice connection session ID."
msgstr ""

#: discord.voice_client.VoiceClient:21 of
msgid "The voice connection token."
msgstr ""

#: discord.voice_client.VoiceClient:27 of
msgid "The endpoint we are connecting to."
msgstr ""

#: discord.voice_client.VoiceClient:33 of
msgid "The voice channel connected to."
msgstr ""

#: discord.voice_client.VoiceClient:35 of
msgid ":class:`abc.Connectable`"
msgstr ""

#: discord.voice_client.VoiceClient:39 of
msgid "The event loop that the voice client is running on."
msgstr ""

#: discord.VoiceClient.guild:1 of
msgid "The guild we're connected to, if applicable."
msgstr ""

#: discord.VoiceClient.user:1 of
msgid "The user connected to voice (i.e. ourselves)."
msgstr ""

#: discord.VoiceClient.user:3 discord.channel.DMChannel:33
#: discord.channel.GroupChannel:31 discord.user.ClientUser.edit:27 of
msgid ":class:`ClientUser`"
msgstr ""

#: discord.VoiceClient.latency:1 of
msgid "Latency between a HEARTBEAT and a HEARTBEAT_ACK in seconds."
msgstr ""

#: discord.VoiceClient.latency:3 of
msgid ""
"This could be referred to as the Discord Voice WebSocket latency and is "
"an analogue of user's voice latencies as seen in the Discord client."
msgstr ""

#: discord.VoiceClient.average_latency:1 of
msgid "Average of most recent 20 HEARTBEAT latencies in seconds."
msgstr ""

#: discord.voice_client.VoiceClient.disconnect:3 of
msgid "Disconnects this voice client from voice."
msgstr ""

#: discord.voice_client.VoiceClient.move_to:3 of
msgid "Moves you to a different voice channel."
msgstr ""

#: discord.voice_client.VoiceClient.move_to:5 of
msgid "The channel to move to. Must be a voice channel."
msgstr ""

#: discord.voice_client.VoiceClient.is_connected:1 of
msgid ":class:`bool`: Indicates if the voice client is connected to voice."
msgstr ""

#: discord.voice_client.VoiceClient.play:1 of
msgid "Plays an :class:`AudioSource`."
msgstr ""

#: discord.voice_client.VoiceClient.play:3 of
msgid ""
"The finalizer, ``after`` is called after the source has been exhausted or"
" an error occurred."
msgstr ""

#: discord.voice_client.VoiceClient.play:6 of
msgid ""
"If an error happens while the audio player is running, the exception is "
"caught and the audio player is then stopped. If no after callback is "
"passed, any caught exception will be displayed as if it were raised."
msgstr ""

#: discord.voice_client.VoiceClient.play:10 of
msgid "The audio source we're reading from."
msgstr ""

#: discord.voice_client.VoiceClient.play:12 of
msgid ""
"The finalizer that is called after the stream is exhausted. This function"
" must have a single parameter, ``error``, that denotes an optional "
"exception that was raised during playing."
msgstr ""

#: discord.voice_client.VoiceClient.play:17 of
msgid "Already playing audio or not connected."
msgstr ""

#: discord.voice_client.VoiceClient.play:18 of
msgid "Source is not a :class:`AudioSource` or after is not a callable."
msgstr ""

#: discord.voice_client.VoiceClient.play:19 of
msgid "Source is not opus encoded and opus is not loaded."
msgstr ""

#: discord.voice_client.VoiceClient.unpack_audio:1 of
msgid ""
"Takes an audio packet received from Discord and decodes it into pcm audio"
" data. If there are no users talking in the channel, `None` will be "
"returned."
msgstr ""

#: discord.voice_client.VoiceClient.unpack_audio:4 of
msgid "You must be connected to receive audio."
msgstr ""

#: discord.voice_client.VoiceClient.unpack_audio:8 of
msgid ""
"Bytes received by Discord via the UDP connection used for sending and "
"receiving voice data."
msgstr ""

#: discord.voice_client.VoiceClient.start_recording:1 of
msgid ""
"The bot will begin recording audio from the current voice channel it is "
"in. This function uses a thread so the current code line will not be "
"stopped. Must be in a voice channel to use. Must not be already "
"recording."
msgstr ""

#: discord.voice_client.VoiceClient.start_recording:8 of
msgid "A Sink which will \"store\" all the audio data."
msgstr ""

#: discord.voice_client.VoiceClient.start_recording:10 of
msgid "A function which is called after the bot has stopped recording."
msgstr ""

#: discord.voice_client.VoiceClient.start_recording:12 of
msgid "Args which will be passed to the callback function."
msgstr ""

#: discord.voice_client.VoiceClient.start_recording:14 of
msgid "Not connected to a voice channel."
msgstr ""

#: discord.voice_client.VoiceClient.start_recording:15 of
msgid "Already recording."
msgstr ""

#: discord.voice_client.VoiceClient.start_recording:16 of
msgid "Must provide a Sink object."
msgstr ""

#: discord.voice_client.VoiceClient.stop_recording:1 of
msgid "Stops the recording. Must be already recording."
msgstr ""

#: discord.voice_client.VoiceClient.stop_recording:6
#: discord.voice_client.VoiceClient.toggle_pause:6 of
msgid "Not currently recording."
msgstr ""

#: discord.voice_client.VoiceClient.toggle_pause:1 of
msgid "Pauses or unpauses the recording. Must be already recording."
msgstr ""

#: discord.voice_client.VoiceClient.is_playing:1 of
msgid ":class:`bool`: Indicates if we're currently playing audio."
msgstr ""

#: discord.voice_client.VoiceClient.is_paused:1 of
msgid ":class:`bool`: Indicates if we're playing audio, but if we're paused."
msgstr ""

#: discord.voice_client.VoiceClient.stop:1 of
msgid "Stops playing audio."
msgstr ""

#: discord.voice_client.VoiceClient.pause:1 of
msgid "Pauses the audio playing."
msgstr ""

#: discord.voice_client.VoiceClient.resume:1 of
msgid "Resumes the audio playing."
msgstr ""

#: discord.VoiceClient.source:1 of
msgid "The audio source being played, if playing."
msgstr ""

#: discord.VoiceClient.source:3 of
msgid ""
"This property can also be used to change the audio source currently being"
" played."
msgstr ""

#: discord.VoiceClient.source:5 of
msgid "Optional[:class:`AudioSource`]"
msgstr ""

#: discord.voice_client.VoiceClient.send_audio_packet:1 of
msgid "Sends an audio packet composed of the data."
msgstr ""

#: discord.voice_client.VoiceClient.send_audio_packet:3 of
msgid "You must be connected to play audio."
msgstr ""

#: discord.voice_client.VoiceClient.send_audio_packet:5 of
msgid "The :term:`py:bytes-like object` denoting PCM or Opus voice data."
msgstr ""

#: discord.voice_client.VoiceClient.send_audio_packet:7 of
msgid "Indicates if ``data`` should be encoded into Opus."
msgstr ""

#: discord.voice_client.VoiceClient.send_audio_packet:10 of
msgid "You are not connected."
msgstr ""

#: discord.voice_client.VoiceClient.send_audio_packet:11 of
msgid "Encoding the data failed."
msgstr ""

#: ../../api.rst:276
msgid "VoiceProtocol"
msgstr ""

#: discord.voice_client.VoiceProtocol:1 of
msgid "A class that represents the Discord voice protocol."
msgstr ""

#: discord.voice_client.VoiceProtocol:3 of
msgid ""
"This is an abstract class. The library provides a concrete implementation"
" under :class:`VoiceClient`."
msgstr ""

#: discord.voice_client.VoiceProtocol:6 of
msgid ""
"This class allows you to implement a protocol to allow for an external "
"method of sending voice, such as Lavalink_ or a native library "
"implementation."
msgstr ""

#: discord.voice_client.VoiceProtocol:9 of
msgid ""
"These classes are passed to :meth:`abc.Connectable.connect "
"<VoiceChannel.connect>`."
msgstr ""

#: discord.voice_client.VoiceProtocol:13 of
msgid "The client (or its subclasses) that started the connection request."
msgstr ""

#: discord.voice_client.VoiceProtocol:15 of
msgid "The voice channel that is being connected to."
msgstr ""

#: discord.voice_client.VoiceProtocol.on_voice_state_update:3 of
msgid ""
"An abstract method that is called when the client's voice state has "
"changed. This corresponds to ``VOICE_STATE_UPDATE``."
msgstr ""

#: discord.voice_client.VoiceProtocol.on_voice_state_update:6 of
msgid ""
"The raw `voice state payload`__.  .. _voice_state_update_payload: "
"https://discord.com/developers/docs/resources/voice#voice-state-object  "
"__ voice_state_update_payload_"
msgstr ""

#: discord.voice_client.VoiceProtocol.on_voice_state_update:6 of
msgid "The raw `voice state payload`__."
msgstr ""

#: discord.voice_client.VoiceProtocol.on_voice_server_update:3 of
msgid ""
"An abstract method that is called when initially connecting to voice. "
"This corresponds to ``VOICE_SERVER_UPDATE``."
msgstr ""

#: discord.voice_client.VoiceProtocol.on_voice_server_update:6 of
msgid ""
"The raw `voice server update payload`__.  .. "
"_voice_server_update_payload: "
"https://discord.com/developers/docs/topics/gateway#voice-server-update-"
"voice-server-update-event-fields  __ voice_server_update_payload_"
msgstr ""

#: discord.voice_client.VoiceProtocol.on_voice_server_update:6 of
msgid "The raw `voice server update payload`__."
msgstr ""

#: discord.voice_client.VoiceProtocol.connect:3 of
msgid ""
"An abstract method called when the client initiates the connection "
"request."
msgstr ""

#: discord.voice_client.VoiceProtocol.connect:5 of
msgid ""
"When a connection is requested initially, the library calls the "
"constructor under ``__init__`` and then calls :meth:`connect`. If "
":meth:`connect` fails at some point then :meth:`disconnect` is called."
msgstr ""

#: discord.voice_client.VoiceProtocol.connect:9 of
msgid ""
"Within this method, to start the voice connection flow it is recommended "
"to use :meth:`Guild.change_voice_state` to start the flow. After which, "
":meth:`on_voice_server_update` and :meth:`on_voice_state_update` will be "
"called. The order that these two are called is unspecified."
msgstr ""

#: discord.voice_client.VoiceProtocol.connect:14 of
msgid "The timeout for the connection."
msgstr ""

#: discord.voice_client.VoiceProtocol.connect:16 of
msgid "Whether reconnection is expected."
msgstr ""

#: discord.voice_client.VoiceProtocol.disconnect:3 of
msgid "An abstract method called when the client terminates the connection."
msgstr ""

#: discord.voice_client.VoiceProtocol.disconnect:5 of
msgid "See :meth:`cleanup`."
msgstr ""

#: discord.voice_client.VoiceProtocol.disconnect:7 of
msgid "Whether the disconnection was forced."
msgstr ""

#: discord.voice_client.VoiceProtocol.cleanup:1 of
msgid ""
"This method *must* be called to ensure proper clean-up during a "
"disconnect."
msgstr ""

#: discord.voice_client.VoiceProtocol.cleanup:3 of
msgid ""
"It is advisable to call this from within :meth:`disconnect` when you are "
"completely done with the voice protocol instance."
msgstr ""

#: discord.voice_client.VoiceProtocol.cleanup:6 of
msgid ""
"This method removes it from the internal state cache that keeps track of "
"currently alive voice clients. Failure to clean-up will cause subsequent "
"connections to report that it's still connected."
msgstr ""

#: ../../api.rst:284
msgid "AudioSource"
msgstr ""

#: discord.player.AudioSource:1 of
msgid "Represents an audio stream."
msgstr ""

#: discord.player.AudioSource:3 of
msgid ""
"The audio stream can be Opus encoded or not, however if the audio stream "
"is not Opus encoded then the audio format must be 16-bit 48KHz stereo "
"PCM."
msgstr ""

#: discord.player.AudioSource:8 of
msgid "The audio source reads are done in a separate thread."
msgstr ""

#: discord.player.AudioSource.read:1 discord.player.FFmpegOpusAudio.read:1
#: discord.player.FFmpegPCMAudio.read:1 discord.player.PCMAudio.read:1
#: discord.player.PCMVolumeTransformer.read:1 of
msgid "Reads 20ms worth of audio."
msgstr ""

#: discord.player.AudioSource.read:3 discord.player.FFmpegOpusAudio.read:3
#: discord.player.FFmpegPCMAudio.read:3 discord.player.PCMAudio.read:3
#: discord.player.PCMVolumeTransformer.read:3 of
msgid "Subclasses must implement this."
msgstr ""

#: discord.player.AudioSource.read:5 discord.player.FFmpegOpusAudio.read:5
#: discord.player.FFmpegPCMAudio.read:5 discord.player.PCMAudio.read:5
#: discord.player.PCMVolumeTransformer.read:5 of
msgid ""
"If the audio is complete, then returning an empty :term:`py:bytes-like "
"object` to signal this is the way to do so."
msgstr ""

#: discord.player.AudioSource.read:8 discord.player.FFmpegOpusAudio.read:8
#: discord.player.FFmpegPCMAudio.read:8 discord.player.PCMAudio.read:8
#: discord.player.PCMVolumeTransformer.read:8 of
msgid ""
"If :meth:`~AudioSource.is_opus` method returns ``True``, then it must "
"return 20ms worth of Opus encoded audio. Otherwise, it must be 20ms worth"
" of 16-bit 48KHz stereo PCM, which is about 3,840 bytes per frame (20ms "
"worth of audio)."
msgstr ""

#: discord.player.AudioSource.read:13 discord.player.FFmpegOpusAudio.read:13
#: discord.player.FFmpegPCMAudio.read:13 discord.player.PCMAudio.read:13
#: discord.player.PCMVolumeTransformer.read:13 of
msgid "A bytes like object that represents the PCM or Opus data."
msgstr ""

#: discord.asset.AssetMixin.read:10 discord.message.Attachment.read:20
#: discord.partial_emoji.PartialEmoji.read:10
#: discord.player.AudioSource.read:14 discord.player.FFmpegOpusAudio.read:14
#: discord.player.FFmpegPCMAudio.read:14 discord.player.PCMAudio.read:14
#: discord.player.PCMVolumeTransformer.read:14 of
msgid ":class:`bytes`"
msgstr ""

#: discord.player.AudioSource.is_opus:1
#: discord.player.FFmpegOpusAudio.is_opus:1
#: discord.player.FFmpegPCMAudio.is_opus:1 of
msgid ":class:`bool`: Checks if the audio source is already encoded in Opus."
msgstr ""

#: discord.player.AudioSource.cleanup:1 discord.player.FFmpegAudio.cleanup:1
#: discord.player.PCMVolumeTransformer.cleanup:1 of
msgid "Called when clean-up is needed to be done."
msgstr ""

#: discord.player.AudioSource.cleanup:3 discord.player.FFmpegAudio.cleanup:3
#: discord.player.PCMVolumeTransformer.cleanup:3 of
msgid ""
"Useful for clearing buffer data or processes after it is done playing "
"audio."
msgstr ""

#: ../../api.rst:292
msgid "PCMAudio"
msgstr ""

#: discord.player.PCMAudio:1 of
msgid "Represents raw 16-bit 48KHz stereo PCM audio source."
msgstr ""

#: discord.player.PCMAudio:5 of
msgid "A file-like object that reads byte data representing raw PCM."
msgstr ""

#: discord.player.PCMAudio:7 of
msgid ":term:`py:file object`"
msgstr ""

#: ../../api.rst:300
msgid "FFmpegAudio"
msgstr ""

#: discord.player.FFmpegAudio:1 of
msgid "Represents an FFmpeg (or AVConv) based AudioSource."
msgstr ""

#: discord.player.FFmpegAudio:3 of
msgid ""
"User created AudioSources using FFmpeg differently from how "
":class:`FFmpegPCMAudio` and :class:`FFmpegOpusAudio` work should subclass"
" this."
msgstr ""

#: ../../api.rst:308
msgid "FFmpegPCMAudio"
msgstr ""

#: discord.player.FFmpegOpusAudio:1 discord.player.FFmpegPCMAudio:1 of
msgid "An audio source from FFmpeg (or AVConv)."
msgstr ""

#: discord.player.FFmpegPCMAudio:3 of
msgid "This launches a sub-process to a specific input file given."
msgstr ""

#: discord.player.FFmpegOpusAudio:18 discord.player.FFmpegPCMAudio:7 of
msgid ""
"You must have the ffmpeg or avconv executable in your path environment "
"variable in order for this to work."
msgstr ""

#: discord.player.FFmpegPCMAudio:10 of
msgid ""
"The input that ffmpeg will take and convert to PCM bytes. If ``pipe`` is "
"``True`` then this is a file-like object that is passed to the stdin of "
"ffmpeg."
msgstr ""

#: discord.player.FFmpegOpusAudio:39 discord.player.FFmpegPCMAudio:14 of
msgid "The executable name (and path) to use. Defaults to ``ffmpeg``."
msgstr ""

#: discord.player.FFmpegOpusAudio:41 discord.player.FFmpegPCMAudio:16 of
msgid ""
"If ``True``, denotes that ``source`` parameter will be passed to the "
"stdin of ffmpeg. Defaults to ``False``."
msgstr ""

#: discord.player.FFmpegOpusAudio:44 discord.player.FFmpegPCMAudio:19 of
msgid ""
"A file-like object to pass to the Popen constructor. Could also be an "
"instance of ``subprocess.PIPE``."
msgstr ""

#: discord.player.FFmpegOpusAudio:47 discord.player.FFmpegPCMAudio:22 of
msgid "Extra command line arguments to pass to ffmpeg before the ``-i`` flag."
msgstr ""

#: discord.player.FFmpegOpusAudio:49 discord.player.FFmpegPCMAudio:24 of
msgid "Extra command line arguments to pass to ffmpeg after the ``-i`` flag."
msgstr ""

#: discord.player.FFmpegOpusAudio:52 discord.player.FFmpegPCMAudio:27 of
msgid "The subprocess failed to be created."
msgstr ""

#: ../../api.rst:316
msgid "FFmpegOpusAudio"
msgstr ""

#: discord.player.FFmpegOpusAudio:3 of
msgid ""
"This launches a sub-process to a specific input file given.  However, "
"rather than producing PCM packets like :class:`FFmpegPCMAudio` does that "
"need to be encoded to Opus, this class produces Opus packets, skipping "
"the encoding step done by the library."
msgstr ""

#: discord.player.FFmpegOpusAudio:7 of
msgid ""
"Alternatively, instead of instantiating this class directly, you can use "
":meth:`FFmpegOpusAudio.from_probe` to probe for bitrate and codec "
"information.  This can be used to opportunistically skip pointless re-"
"encoding of existing Opus audio data for a boost in performance at the "
"cost of a short initial delay to gather the information. The same can be "
"achieved by passing ``copy`` to the ``codec`` parameter, but only if you "
"know that the input source is Opus encoded beforehand."
msgstr ""

#: discord.player.FFmpegOpusAudio:21 of
msgid ""
"The input that ffmpeg will take and convert to Opus bytes. If ``pipe`` is"
" ``True`` then this is a file-like object that is passed to the stdin of "
"ffmpeg."
msgstr ""

#: discord.player.FFmpegOpusAudio:25 of
msgid "The bitrate in kbps to encode the output to.  Defaults to ``128``."
msgstr ""

#: discord.player.FFmpegOpusAudio:27 of
msgid ""
"The codec to use to encode the audio data.  Normally this would be just "
"``libopus``, but is used by :meth:`FFmpegOpusAudio.from_probe` to "
"opportunistically skip pointlessly re-encoding Opus audio data by passing"
" ``copy`` as the codec value.  Any values other than ``copy``, ``opus``, "
"or ``libopus`` will be considered ``libopus``.  Defaults to ``libopus``."
"  .. warning::      Do not provide this parameter unless you are certain "
"that the audio input is     already Opus encoded.  For typical use "
":meth:`FFmpegOpusAudio.from_probe`     should be used to determine the "
"proper value for this parameter."
msgstr ""

#: discord.player.FFmpegOpusAudio:27 of
msgid ""
"The codec to use to encode the audio data.  Normally this would be just "
"``libopus``, but is used by :meth:`FFmpegOpusAudio.from_probe` to "
"opportunistically skip pointlessly re-encoding Opus audio data by passing"
" ``copy`` as the codec value.  Any values other than ``copy``, ``opus``, "
"or ``libopus`` will be considered ``libopus``.  Defaults to ``libopus``."
msgstr ""

#: discord.player.FFmpegOpusAudio:35 of
msgid ""
"Do not provide this parameter unless you are certain that the audio input"
" is already Opus encoded.  For typical use "
":meth:`FFmpegOpusAudio.from_probe` should be used to determine the proper"
" value for this parameter."
msgstr ""

#: discord.player.FFmpegOpusAudio.from_probe:3 of
msgid ""
"A factory method that creates a :class:`FFmpegOpusAudio` after probing "
"the input source for audio codec and bitrate information."
msgstr ""

#: discord.player.FFmpegOpusAudio.from_probe:8 of
msgid ""
"Use this function to create an :class:`FFmpegOpusAudio` instance instead "
"of the constructor: ::"
msgstr ""

#: discord.player.FFmpegOpusAudio.from_probe:13 of
msgid ""
"If you are on Windows and don't have ffprobe installed, use the "
"``fallback`` method to probe using ffmpeg instead: ::"
msgstr ""

#: discord.player.FFmpegOpusAudio.from_probe:19 of
msgid "Using a custom method of determining codec and bitrate: ::"
msgstr ""

#: discord.player.FFmpegOpusAudio.from_probe:28 of
msgid "Identical to the ``source`` parameter for the constructor."
msgstr ""

#: discord.player.FFmpegOpusAudio.from_probe:29 of
msgid ""
"The probing method used to determine bitrate and codec information. As a "
"string, valid values are ``native`` to use ffprobe (or avprobe) and "
"``fallback`` to use ffmpeg (or avconv).  As a callable, it must take two "
"string arguments, ``source`` and ``executable``.  Both parameters are the"
" same values passed to this factory function. ``executable`` will default"
" to ``ffmpeg`` if not provided as a keyword argument."
msgstr ""

#: discord.player.FFmpegOpusAudio.from_probe:35 of
msgid ""
"The remaining parameters to be passed to the :class:`FFmpegOpusAudio` "
"constructor, excluding ``bitrate`` and ``codec``."
msgstr ""

#: discord.player.FFmpegOpusAudio.from_probe:38
#: discord.player.FFmpegOpusAudio.probe:10 of
msgid "Invalid probe method, must be ``'native'`` or ``'fallback'``."
msgstr ""

#: discord.player.FFmpegOpusAudio.from_probe:39
#: discord.player.FFmpegOpusAudio.probe:11 of
msgid "Invalid value for ``probe`` parameter, must be :class:`str` or a callable."
msgstr ""

#: discord.player.FFmpegOpusAudio.from_probe:41 of
msgid "An instance of this class."
msgstr ""

#: discord.player.FFmpegOpusAudio.from_probe:42 of
msgid ":class:`FFmpegOpusAudio`"
msgstr ""

#: discord.player.FFmpegOpusAudio.probe:3 of
msgid "Probes the input source for bitrate and codec information."
msgstr ""

#: discord.player.FFmpegOpusAudio.probe:5 of
msgid "Identical to the ``source`` parameter for :class:`FFmpegOpusAudio`."
msgstr ""

#: discord.player.FFmpegOpusAudio.probe:6 of
msgid ""
"Identical to the ``method`` parameter for "
":meth:`FFmpegOpusAudio.from_probe`."
msgstr ""

#: discord.player.FFmpegOpusAudio.probe:7 of
msgid "Identical to the ``executable`` parameter for :class:`FFmpegOpusAudio`."
msgstr ""

#: discord.player.FFmpegOpusAudio.probe:13 of
msgid "A 2-tuple with the codec and bitrate of the input source."
msgstr ""

#: discord.player.FFmpegOpusAudio.probe:14 of
msgid "Optional[Tuple[Optional[:class:`str`], Optional[:class:`int`]]]"
msgstr ""

#: ../../api.rst:324
msgid "PCMVolumeTransformer"
msgstr ""

#: discord.player.PCMVolumeTransformer:1 of
msgid "Transforms a previous :class:`AudioSource` to have volume controls."
msgstr ""

#: discord.player.PCMVolumeTransformer:3 of
msgid ""
"This does not work on audio sources that have :meth:`AudioSource.is_opus`"
" set to ``True``."
msgstr ""

#: discord.player.PCMVolumeTransformer:6 of
msgid "The original AudioSource to transform."
msgstr ""

#: discord.player.PCMVolumeTransformer:8 of
msgid "The initial volume to set it to. See :attr:`volume` for more info."
msgstr ""

#: discord.player.PCMVolumeTransformer:12 of
msgid "Not an audio source."
msgstr ""

#: discord.player.PCMVolumeTransformer:13 of
msgid "The audio source is opus encoded."
msgstr ""

#: discord.PCMVolumeTransformer.volume:1 of
msgid ""
"Retrieves or sets the volume as a floating point percentage (e.g. ``1.0``"
" for 100%)."
msgstr ""

#: ../../api.rst:332
msgid "Opus Library"
msgstr ""

#: discord.opus.load_opus:1 of
msgid "Loads the libopus shared library for use with voice."
msgstr ""

#: discord.opus.load_opus:3 of
msgid ""
"If this function is not called then the library uses the function "
":func:`ctypes.util.find_library` and then loads that one if available."
msgstr ""

#: discord.opus.load_opus:6 of
msgid ""
"Not loading a library and attempting to use PCM based AudioSources will "
"lead to voice not working."
msgstr ""

#: discord.opus.load_opus:9 of
msgid "This function propagates the exceptions thrown."
msgstr ""

#: discord.opus.load_opus:13 of
msgid ""
"The bitness of the library must match the bitness of your python "
"interpreter. If the library is 64-bit then your python interpreter must "
"be 64-bit as well. Usually if there's a mismatch in bitness then the load"
" will throw an exception."
msgstr ""

#: discord.opus.load_opus:20 of
msgid ""
"On Windows, this function should not need to be called as the binaries "
"are automatically loaded."
msgstr ""

#: discord.opus.load_opus:25 of
msgid ""
"On Windows, the .dll extension is not necessary. However, on Linux the "
"full extension is required to load the library, e.g. ``libopus.so.1``. On"
" Linux however, :func:`ctypes.util.find_library` will usually find the "
"library automatically without you having to call this."
msgstr ""

#: discord.opus.load_opus:30 of
msgid "The filename of the shared library."
msgstr ""

#: discord.opus.is_loaded:1 of
msgid ""
"Function to check if opus lib is successfully loaded either via the "
":func:`ctypes.util.find_library` call of :func:`load_opus`."
msgstr ""

#: discord.opus.is_loaded:4 of
msgid "This must return ``True`` for voice to work."
msgstr ""

#: discord.opus.is_loaded:6 of
msgid "Indicates if the opus library has been loaded."
msgstr ""

#: ../../api.rst:341
msgid "Event Reference"
msgstr ""

#: ../../api.rst:343
msgid ""
"This section outlines the different types of events listened by "
":class:`Client`."
msgstr ""

#: ../../api.rst:345
msgid ""
"There are two ways to register an event, the first way is through the use"
" of :meth:`Client.event`. The second way is through subclassing "
":class:`Client` and overriding the specific events. For example: ::"
msgstr ""

#: ../../api.rst:360
msgid ""
"If an event handler raises an exception, :func:`on_error` will be called "
"to handle it, which defaults to print a traceback and ignoring the "
"exception."
msgstr ""

#: ../../api.rst:365
msgid ""
"All the events must be a |coroutine_link|_. If they aren't, then you "
"might get unexpected errors. In order to turn a function into a coroutine"
" they must be ``async def`` functions."
msgstr ""

#: ../../api.rst:371
msgid ""
"Called when the client has successfully connected to Discord. This is not"
" the same as the client being fully prepared, see :func:`on_ready` for "
"that."
msgstr ""

#: ../../api.rst:374
msgid "The warnings on :func:`on_ready` also apply."
msgstr ""

#: ../../api.rst:378
msgid ""
"Similar to :func:`on_connect` except used by :class:`AutoShardedClient` "
"to denote when a particular shard ID has connected to Discord."
msgstr ""

#: ../../api.rst:383
msgid "The shard ID that has connected."
msgstr ""

#: ../../api.rst:388
msgid ""
"Called when the client has disconnected from Discord, or a connection "
"attempt to Discord has failed. This could happen either through the "
"internet being disconnected, explicit calls to close, or Discord "
"terminating the connection one way or the other."
msgstr ""

#: ../../api.rst:392
msgid ""
"This function can be called many times without a corresponding "
":func:`on_connect` call."
msgstr ""

#: ../../api.rst:396
msgid ""
"Similar to :func:`on_disconnect` except used by "
":class:`AutoShardedClient` to denote when a particular shard ID has "
"disconnected from Discord."
msgstr ""

#: ../../api.rst:401
msgid "The shard ID that has disconnected."
msgstr ""

#: ../../api.rst:406
msgid ""
"Called when the client is done preparing the data received from Discord. "
"Usually after login is successful and the :attr:`Client.guilds` and co. "
"are filled up."
msgstr ""

#: ../../api.rst:411
msgid ""
"This function is not guaranteed to be the first event called. Likewise, "
"this function is **not** guaranteed to only be called once. This library "
"implements reconnection logic and thus will end up calling this event "
"whenever a RESUME request fails."
msgstr ""

#: ../../api.rst:418
msgid ""
"Similar to :func:`on_ready` except used by :class:`AutoShardedClient` to "
"denote when a particular shard ID has become ready."
msgstr ""

#: ../../api.rst:421
msgid "The shard ID that is ready."
msgstr ""

#: ../../api.rst:426
msgid "Called when the client has resumed a session."
msgstr ""

#: ../../api.rst:430
msgid ""
"Similar to :func:`on_resumed` except used by :class:`AutoShardedClient` "
"to denote when a particular shard ID has resumed a session."
msgstr ""

#: ../../api.rst:435
msgid "The shard ID that has resumed."
msgstr ""

#: ../../api.rst:440
msgid ""
"Usually when an event raises an uncaught exception, a traceback is "
"printed to stderr and the exception is ignored. If you want to change "
"this behaviour and handle the exception for whatever reason yourself, "
"this event can be overridden. Which, when done, will suppress the default"
" action of printing the traceback."
msgstr ""

#: ../../api.rst:446
msgid ""
"The information of the exception raised and the exception itself can be "
"retrieved with a standard call to :func:`sys.exc_info`."
msgstr ""

#: ../../api.rst:449
msgid ""
"If you want exception to propagate out of the :class:`Client` class you "
"can define an ``on_error`` handler consisting of a single empty "
":ref:`raise statement <py:raise>`. Exceptions raised by ``on_error`` will"
" not be handled in any way by :class:`Client`."
msgstr ""

#: ../../api.rst:456
msgid "``on_error`` will only be dispatched to :meth:`Client.event`."
msgstr ""

#: ../../api.rst:458
msgid ""
"It will not be received by :meth:`Client.wait_for`, or, if used, "
":ref:`ext_commands_api_bot` listeners such as "
":meth:`~ext.commands.Bot.listen` or :meth:`~ext.commands.Cog.listener`."
msgstr ""

#: ../../api.rst:462
msgid "The name of the event that raised the exception."
msgstr ""

#: ../../api.rst:465
msgid "The positional arguments for the event that raised the exception."
msgstr ""

#: ../../api.rst:467
msgid "The keyword arguments for the event that raised the exception."
msgstr ""

#: ../../api.rst:472
msgid "Called whenever a WebSocket event is received from the WebSocket."
msgstr ""

#: ../../api.rst:474
msgid ""
"This is mainly useful for logging how many events you are receiving from "
"the Discord gateway."
msgstr ""

#: ../../api.rst:479
msgid "The event type from Discord that is received, e.g. ``'READY'``."
msgstr ""

#: ../../api.rst:484
msgid ""
"Called whenever a message is completely received from the WebSocket, "
"before it's processed and parsed. This event is always dispatched when a "
"complete message is received and the passed data is not parsed in any "
"way."
msgstr ""

#: ../../api.rst:488 ../../api.rst:507
msgid ""
"This is only really useful for grabbing the WebSocket stream and "
"debugging purposes."
msgstr ""

#: ../../api.rst:491 ../../api.rst:510
msgid ""
"This requires setting the ``enable_debug_events`` setting in the "
":class:`Client`."
msgstr ""

#: ../../api.rst:495
msgid ""
"This is only for the messages received from the client WebSocket. The "
"voice WebSocket will not trigger this event."
msgstr ""

#: ../../api.rst:498
msgid "The message passed in from the WebSocket library."
msgstr ""

#: ../../api.rst:503
msgid ""
"Called whenever a send operation is done on the WebSocket before the "
"message is sent. The passed parameter is the message that is being sent "
"to the WebSocket."
msgstr ""

#: ../../api.rst:514
msgid ""
"This is only for the messages sent from the client WebSocket. The voice "
"WebSocket will not trigger this event."
msgstr ""

#: ../../api.rst:517
msgid ""
"The message that is about to be passed on to the WebSocket library. It "
"can be :class:`bytes` to denote a binary message or :class:`str` to "
"denote a regular text message."
msgstr ""

#: ../../api.rst:523
msgid "Called when someone begins typing a message."
msgstr ""

#: ../../api.rst:525
msgid ""
"The ``channel`` parameter can be a :class:`abc.Messageable` instance. "
"Which could either be :class:`TextChannel`, :class:`GroupChannel`, or "
":class:`DMChannel`."
msgstr ""

#: ../../api.rst:529
msgid ""
"If the ``channel`` is a :class:`TextChannel` then the ``user`` parameter "
"is a :class:`Member`, otherwise it is a :class:`User`."
msgstr ""

#: ../../api.rst:532 ../../api.rst:549
msgid "This requires :attr:`Intents.typing` to be enabled."
msgstr ""

#: ../../api.rst:534
msgid "The location where the typing originated from."
msgstr ""

#: ../../api.rst:536
msgid "The user that started typing."
msgstr ""

#: ../../api.rst:538 discord.raw_models.RawTypingEvent:19 of
msgid "When the typing started as an aware datetime in UTC."
msgstr ""

#: ../../api.rst:543
msgid ""
"Called when someone begins typing a message. Unlike :func:`on_typing`, "
"this is called regardless if the user can be found in the bot's cache or "
"not."
msgstr ""

#: ../../api.rst:546
msgid ""
"If the typing event is occurring in a guild, the member that started "
"typing can be accessed via :attr:`RawTypingEvent.member`"
msgstr ""

#: ../../api.rst:551
msgid "The raw typing payload."
msgstr ""

#: ../../api.rst:556
msgid "Called when a :class:`Message` is created and sent."
msgstr ""

#: ../../api.rst:558 ../../api.rst:581 ../../api.rst:598 ../../api.rst:611
#: ../../api.rst:624 ../../api.rst:650 ../../api.rst:676 ../../api.rst:856
msgid "This requires :attr:`Intents.messages` to be enabled."
msgstr ""

#: ../../api.rst:562
msgid ""
"Your bot's own messages and private messages are sent through this event."
" This can lead cases of 'recursion' depending on how your bot was "
"programmed. If you want the bot to not reply to itself, consider checking"
" the user IDs. Note that :class:`~ext.commands.Bot` does not have this "
"problem."
msgstr ""

#: ../../api.rst:568
msgid "The current message."
msgstr ""

#: ../../api.rst:573
msgid ""
"Called when a message is deleted. If the message is not found in the "
"internal message cache, then this event will not be called. Messages "
"might not be in cache if the message is too old or the client is "
"participating in high traffic guilds."
msgstr ""

#: ../../api.rst:578
msgid ""
"If this occurs increase the :class:`max_messages <Client>` parameter or "
"use the :func:`on_raw_message_delete` event instead."
msgstr ""

#: ../../api.rst:583
msgid "The deleted message."
msgstr ""

#: ../../api.rst:588
msgid ""
"Called when messages are bulk deleted. If none of the messages deleted "
"are found in the internal message cache, then this event will not be "
"called. If individual messages were not found in the internal message "
"cache, this event will still be called, but the messages not found will "
"not be included in the messages list. Messages might not be in cache if "
"the message is too old or the client is participating in high traffic "
"guilds."
msgstr ""

#: ../../api.rst:595
msgid ""
"If this occurs increase the :class:`max_messages <Client>` parameter or "
"use the :func:`on_raw_bulk_message_delete` event instead."
msgstr ""

#: ../../api.rst:600
msgid "The messages that have been deleted."
msgstr ""

#: ../../api.rst:605
msgid ""
"Called when a message is deleted. Unlike :func:`on_message_delete`, this "
"is called regardless of the message being in the internal message cache "
"or not."
msgstr ""

#: ../../api.rst:608
msgid ""
"If the message is found in the message cache, it can be accessed via "
":attr:`RawMessageDeleteEvent.cached_message`"
msgstr ""

#: ../../api.rst:613 ../../api.rst:626 ../../api.rst:678 ../../api.rst:713
#: ../../api.rst:745 ../../api.rst:768 ../../api.rst:793 ../../api.rst:972
#: ../../api.rst:1043 ../../api.rst:1393 ../../api.rst:1417
msgid "The raw event payload data."
msgstr ""

#: ../../api.rst:618
msgid ""
"Called when a bulk delete is triggered. Unlike "
":func:`on_bulk_message_delete`, this is called regardless of the messages"
" being in the internal message cache or not."
msgstr ""

#: ../../api.rst:621
msgid ""
"If the messages are found in the message cache, they can be accessed via "
":attr:`RawBulkMessageDeleteEvent.cached_messages`"
msgstr ""

#: ../../api.rst:631
msgid ""
"Called when a :class:`Message` receives an update event. If the message "
"is not found in the internal message cache, then these events will not be"
" called. Messages might not be in cache if the message is too old or the "
"client is participating in high traffic guilds."
msgstr ""

#: ../../api.rst:636
msgid ""
"If this occurs increase the :class:`max_messages <Client>` parameter or "
"use the :func:`on_raw_message_edit` event instead."
msgstr ""

#: ../../api.rst:639
msgid "The following non-exhaustive cases trigger this event:"
msgstr ""

#: ../../api.rst:641
msgid "A message has been pinned or unpinned."
msgstr ""

#: ../../api.rst:642
msgid "The message content has been changed."
msgstr ""

#: ../../api.rst:643
msgid "The message has received an embed."
msgstr ""

#: ../../api.rst:645
msgid ""
"For performance reasons, the embed server does not do this in a "
"\"consistent\" manner."
msgstr ""

#: ../../api.rst:647
msgid "The message's embeds were suppressed or unsuppressed."
msgstr ""

#: ../../api.rst:648
msgid "A call message has received an update to its participants or ending time."
msgstr ""

#: ../../api.rst:652
msgid "The previous version of the message."
msgstr ""

#: ../../api.rst:654
msgid "The current version of the message."
msgstr ""

#: ../../api.rst:659
msgid ""
"Called when a message is edited. Unlike :func:`on_message_edit`, this is "
"called regardless of the state of the internal message cache."
msgstr ""

#: ../../api.rst:662
msgid ""
"If the message is found in the message cache, it can be accessed via "
":attr:`RawMessageUpdateEvent.cached_message`. The cached message "
"represents the message before it has been edited. For example, if the "
"content of a message is modified and triggers the "
":func:`on_raw_message_edit` coroutine, the "
":attr:`RawMessageUpdateEvent.cached_message` will return a "
":class:`Message` object that represents the message before the content "
"was modified."
msgstr ""

#: ../../api.rst:668
msgid ""
"Due to the inherently raw nature of this event, the data parameter "
"coincides with the raw data given by the `gateway "
"<https://discord.com/developers/docs/topics/gateway#message-update>`_."
msgstr ""

#: ../../api.rst:671
msgid ""
"Since the data payload can be partial, care must be taken when accessing "
"stuff in the dictionary. One example of a common case of partial data is "
"when the ``'content'`` key is inaccessible. This denotes an \"embed\" "
"only edit, which is an edit in which only the embeds are updated by the "
"Discord embed server."
msgstr ""

#: ../../api.rst:683
msgid ""
"Called when a message has a reaction added to it. Similar to "
":func:`on_message_edit`, if the message is not found in the internal "
"message cache, then this event will not be called. Consider using "
":func:`on_raw_reaction_add` instead."
msgstr ""

#: ../../api.rst:689
msgid ""
"To get the :class:`Message` being reacted, access it via "
":attr:`Reaction.message`."
msgstr ""

#: ../../api.rst:691 ../../api.rst:711 ../../api.rst:743 ../../api.rst:754
#: ../../api.rst:766 ../../api.rst:777 ../../api.rst:789
msgid "This requires :attr:`Intents.reactions` to be enabled."
msgstr ""

#: ../../api.rst:695
msgid ""
"This doesn't require :attr:`Intents.members` within a guild context, but "
"due to Discord not providing updated user information in a direct message"
" it's required for direct messages to receive this event. Consider using "
":func:`on_raw_reaction_add` if you need this and do not otherwise want to"
" enable the members intent."
msgstr ""

#: ../../api.rst:701 ../../api.rst:733
msgid "The current state of the reaction."
msgstr ""

#: ../../api.rst:703 ../../api.rst:735
msgid "The user who added the reaction."
msgstr ""

#: ../../api.rst:708
msgid ""
"Called when a message has a reaction added. Unlike "
":func:`on_reaction_add`, this is called regardless of the state of the "
"internal message cache."
msgstr ""

#: ../../api.rst:718
msgid ""
"Called when a message has a reaction removed from it. Similar to "
"on_message_edit, if the message is not found in the internal message "
"cache, then this event will not be called."
msgstr ""

#: ../../api.rst:724
msgid "To get the message being reacted, access it via :attr:`Reaction.message`."
msgstr ""

#: ../../api.rst:726
msgid ""
"This requires both :attr:`Intents.reactions` and :attr:`Intents.members` "
"to be enabled."
msgstr ""

#: ../../api.rst:730
msgid ""
"Consider using :func:`on_raw_reaction_remove` if you need this and do not"
" want to enable the members intent."
msgstr ""

#: ../../api.rst:740
msgid ""
"Called when a message has a reaction removed. Unlike "
":func:`on_reaction_remove`, this is called regardless of the state of the"
" internal message cache."
msgstr ""

#: ../../api.rst:750
msgid ""
"Called when a message has all its reactions removed from it. Similar to "
":func:`on_message_edit`, if the message is not found in the internal "
"message cache, then this event will not be called. Consider using "
":func:`on_raw_reaction_clear` instead."
msgstr ""

#: ../../api.rst:756
msgid "The message that had its reactions cleared."
msgstr ""

#: ../../api.rst:758
msgid "The reactions that were removed."
msgstr ""

#: ../../api.rst:763
msgid ""
"Called when a message has all its reactions removed. Unlike "
":func:`on_reaction_clear`, this is called regardless of the state of the "
"internal message cache."
msgstr ""

#: ../../api.rst:773
msgid ""
"Called when a message has a specific reaction removed from it. Similar to"
" :func:`on_message_edit`, if the message is not found in the internal "
"message cache, then this event will not be called. Consider using "
":func:`on_raw_reaction_clear_emoji` instead."
msgstr ""

#: ../../api.rst:781
msgid "The reaction that got cleared."
msgstr ""

#: ../../api.rst:786
msgid ""
"Called when a message has a specific reaction removed from it. Unlike "
":func:`on_reaction_clear_emoji` this is called regardless of the state of"
" the internal message cache."
msgstr ""

#: ../../api.rst:798
msgid "Called when an interaction happened."
msgstr ""

#: ../../api.rst:800
msgid ""
"This currently happens due to application command invocations or "
"components being used."
msgstr ""

#: ../../api.rst:804
msgid ""
"This is a low level function that is not generally meant to be used. If "
"you are working with components, consider using the callbacks associated "
"with the :class:`~discord.ui.View` instead as it provides a nicer user "
"experience."
msgstr ""

#: ../../api.rst:810
msgid "The interaction data."
msgstr ""

#: ../../api.rst:815
msgid "Called when an application command is received."
msgstr ""

#: ../../api.rst:819
msgid "The ApplicationContext associated to the command being received."
msgstr ""

#: ../../api.rst:824
msgid ""
"Called when an application command is completed, after any checks have "
"finished."
msgstr ""

#: ../../api.rst:828
msgid "The ApplicationContext associated to the command that was completed."
msgstr ""

#: ../../api.rst:833
msgid "Called when an application command has an error."
msgstr ""

#: ../../api.rst:837
msgid "The ApplicationContext associated to the command that has an error."
msgstr ""

#: ../../api.rst:840
msgid "The DiscordException associated to the error."
msgstr ""

#: ../../api.rst:845
msgid ""
"Called when an application command was not found in the bot's internal "
"cache."
msgstr ""

#: ../../api.rst:849
msgid "The interaction associated to the unknown command."
msgstr ""

#: ../../api.rst:854
msgid "Called whenever a private group DM is updated. e.g. changed name or topic."
msgstr ""

#: ../../api.rst:858
msgid "The updated group channel's old info."
msgstr ""

#: ../../api.rst:860
msgid "The updated group channel's new info."
msgstr ""

#: ../../api.rst:865
msgid "Called whenever a message is pinned or unpinned from a private channel."
msgstr ""

#: ../../api.rst:867
msgid "The private channel that had its pins updated."
msgstr ""

#: ../../api.rst:869 ../../api.rst:903
msgid ""
"The latest message that was pinned as an aware datetime in UTC. Could be "
"``None``."
msgstr ""

#: ../../api.rst:875
msgid "Called whenever a guild channel is deleted or created."
msgstr ""

#: ../../api.rst:877
msgid "Note that you can get the guild from :attr:`~abc.GuildChannel.guild`."
msgstr ""

#: ../../api.rst:879 ../../api.rst:888 ../../api.rst:899 ../../api.rst:912
#: ../../api.rst:925 ../../api.rst:938 ../../api.rst:960 ../../api.rst:993
#: ../../api.rst:1124 ../../api.rst:1143 ../../api.rst:1157 ../../api.rst:1171
#: ../../api.rst:1180 ../../api.rst:1221
msgid "This requires :attr:`Intents.guilds` to be enabled."
msgstr ""

#: ../../api.rst:881
msgid "The guild channel that got created or deleted."
msgstr ""

#: ../../api.rst:886
msgid ""
"Called whenever a guild channel is updated. e.g. changed name, topic, "
"permissions."
msgstr ""

#: ../../api.rst:890
msgid "The updated guild channel's old info."
msgstr ""

#: ../../api.rst:892
msgid "The updated guild channel's new info."
msgstr ""

#: ../../api.rst:897
msgid "Called whenever a message is pinned or unpinned from a guild channel."
msgstr ""

#: ../../api.rst:901
msgid "The guild channel that had its pins updated."
msgstr ""

#: ../../api.rst:908
msgid "Called whenever a thread is joined."
msgstr ""

#: ../../api.rst:910 ../../api.rst:923 ../../api.rst:936 ../../api.rst:958
msgid "Note that you can get the guild from :attr:`Thread.guild`."
msgstr ""

#: ../../api.rst:916
msgid "The thread that got joined."
msgstr ""

#: ../../api.rst:921
msgid "Called whenever a thread is created."
msgstr ""

#: ../../api.rst:929
msgid "The thread that got created."
msgstr ""

#: ../../api.rst:934
msgid ""
"Called whenever a thread is removed. This is different from a thread "
"being deleted."
msgstr ""

#: ../../api.rst:942
msgid ""
"Due to technical limitations, this event might not be called as soon as "
"one expects. Since the library tracks thread membership locally, the API "
"only sends updated thread membership status upon being synced by joining "
"a thread."
msgstr ""

#: ../../api.rst:949
msgid "The thread that got removed."
msgstr ""

#: ../../api.rst:954
msgid ""
"Called whenever a thread is deleted.  If the deleted thread isn't found "
"in internal cache then this will not be called. Archived threads are not "
"in the cache. Consider using :func:`on_raw_thread_delete`"
msgstr ""

#: ../../api.rst:964
msgid "The thread that got deleted."
msgstr ""

#: ../../api.rst:969
msgid ""
"Called whenever a thread is deleted. Unlike :func:`on_thread_delete` this"
" is called regardless of the state of the internal cache."
msgstr ""

#: ../../api.rst:978
msgid "Called when a :class:`ThreadMember` leaves or joins a :class:`Thread`."
msgstr ""

#: ../../api.rst:980
msgid ""
"You can get the thread a member belongs in by accessing "
":attr:`ThreadMember.thread`."
msgstr ""

#: ../../api.rst:982 ../../api.rst:1060 ../../api.rst:1077 ../../api.rst:1112
msgid "This requires :attr:`Intents.members` to be enabled."
msgstr ""

#: ../../api.rst:986 ../../api.rst:1062
msgid "The member who joined or left."
msgstr ""

#: ../../api.rst:991
msgid "Called whenever a thread is updated."
msgstr ""

#: ../../api.rst:997
msgid "The updated thread's old info."
msgstr ""

#: ../../api.rst:999
msgid "The updated thread's new info."
msgstr ""

#: ../../api.rst:1004
msgid ""
"Called whenever an integration is created, modified, or removed from a "
"guild."
msgstr ""

#: ../../api.rst:1006 ../../api.rst:1017 ../../api.rst:1028 ../../api.rst:1039
msgid "This requires :attr:`Intents.integrations` to be enabled."
msgstr ""

#: ../../api.rst:1010
msgid "The guild that had its integrations updated."
msgstr ""

#: ../../api.rst:1015
msgid "Called when an integration is created."
msgstr ""

#: ../../api.rst:1021 ../../api.rst:1032
msgid "The integration that was created."
msgstr ""

#: ../../api.rst:1026
msgid "Called when an integration is updated."
msgstr ""

#: ../../api.rst:1037
msgid "Called when an integration is deleted."
msgstr ""

#: ../../api.rst:1048
msgid ""
"Called whenever a webhook is created, modified, or removed from a guild "
"channel."
msgstr ""

#: ../../api.rst:1050
msgid "This requires :attr:`Intents.webhooks` to be enabled."
msgstr ""

#: ../../api.rst:1052
msgid "The channel that had its webhooks updated."
msgstr ""

#: ../../api.rst:1058
msgid "Called when a :class:`Member` leaves or joins a :class:`Guild`."
msgstr ""

#: ../../api.rst:1067
msgid "Called when a :class:`Member` updates their profile."
msgstr ""

#: ../../api.rst:1069 ../../api.rst:1088 ../../api.rst:1106
msgid "This is called when one or more of the following things change:"
msgstr ""

#: ../../api.rst:1071
msgid "nickname"
msgstr ""

#: ../../api.rst:1072 discord.member.Member.edit:16 of
msgid "roles"
msgstr ""

#: ../../api.rst:1073
msgid "pending"
msgstr ""

#: ../../api.rst:1074 discord.member.Member.edit:20 of
msgid "communication_disabled_until"
msgstr ""

#: ../../api.rst:1075
msgid "timed_out"
msgstr ""

#: ../../api.rst:1079 ../../api.rst:1097
msgid "The updated member's old info."
msgstr ""

#: ../../api.rst:1081 ../../api.rst:1099
msgid "The updated member's updated info."
msgstr ""

#: ../../api.rst:1086
msgid "Called when a :class:`Member` updates their presence."
msgstr ""

#: ../../api.rst:1090
msgid "status"
msgstr ""

#: ../../api.rst:1091
msgid "activity"
msgstr ""

#: ../../api.rst:1093
msgid ""
"This requires :attr:`Intents.presences` and :attr:`Intents.members` to be"
" enabled."
msgstr ""

#: ../../api.rst:1104
msgid "Called when a :class:`User` updates their profile."
msgstr ""

#: ../../api.rst:1108
msgid "avatar"
msgstr ""

#: ../../api.rst:1109
msgid "username"
msgstr ""

#: ../../api.rst:1110
msgid "discriminator"
msgstr ""

#: ../../api.rst:1114
msgid "The updated user's old info."
msgstr ""

#: ../../api.rst:1116
msgid "The updated user's updated info."
msgstr ""

#: ../../api.rst:1121
msgid ""
"Called when a :class:`Guild` is either created by the :class:`Client` or "
"when the :class:`Client` joins a guild."
msgstr ""

#: ../../api.rst:1126
msgid "The guild that was joined."
msgstr ""

#: ../../api.rst:1131
msgid "Called when a :class:`Guild` is removed from the :class:`Client`."
msgstr ""

#: ../../api.rst:1133
msgid "This happens through, but not limited to, these circumstances:"
msgstr ""

#: ../../api.rst:1135
msgid "The client got banned."
msgstr ""

#: ../../api.rst:1136
msgid "The client got kicked."
msgstr ""

#: ../../api.rst:1137
msgid "The client left the guild."
msgstr ""

#: ../../api.rst:1138
msgid "The client or the guild owner deleted the guild."
msgstr ""

#: ../../api.rst:1140
msgid ""
"In order for this event to be invoked then the :class:`Client` must have "
"been part of the guild to begin with. (i.e. it is part of "
":attr:`Client.guilds`)"
msgstr ""

#: ../../api.rst:1145
msgid "The guild that got removed."
msgstr ""

#: ../../api.rst:1150
msgid "Called when a :class:`Guild` updates, for example:"
msgstr ""

#: ../../api.rst:1152
msgid "Changed name"
msgstr ""

#: ../../api.rst:1153
msgid "Changed AFK channel"
msgstr ""

#: ../../api.rst:1154
msgid "Changed AFK timeout"
msgstr ""

#: ../../api.rst:1155
msgid "etc."
msgstr ""

#: ../../api.rst:1159
msgid "The guild prior to being updated."
msgstr ""

#: ../../api.rst:1161
msgid "The guild after being updated."
msgstr ""

#: ../../api.rst:1167
msgid "Called when a :class:`Guild` creates or deletes a new :class:`Role`."
msgstr ""

#: ../../api.rst:1169
msgid "To get the guild it belongs to, use :attr:`Role.guild`."
msgstr ""

#: ../../api.rst:1173
msgid "The role that was created or deleted."
msgstr ""

#: ../../api.rst:1178
msgid "Called when a :class:`Role` is changed guild-wide."
msgstr ""

#: ../../api.rst:1182
msgid "The updated role's old info."
msgstr ""

#: ../../api.rst:1184
msgid "The updated role's updated info."
msgstr ""

#: ../../api.rst:1189
msgid "Called when a :class:`Guild` adds or removes :class:`Emoji`."
msgstr ""

#: ../../api.rst:1191 ../../api.rst:1204
msgid "This requires :attr:`Intents.emojis_and_stickers` to be enabled."
msgstr ""

#: ../../api.rst:1193
msgid "The guild who got their emojis updated."
msgstr ""

#: ../../api.rst:1195
msgid "A list of emojis before the update."
msgstr ""

#: ../../api.rst:1197
msgid "A list of emojis after the update."
msgstr ""

#: ../../api.rst:1202
msgid "Called when a :class:`Guild` updates its stickers."
msgstr ""

#: ../../api.rst:1208
msgid "The guild who got their stickers updated."
msgstr ""

#: ../../api.rst:1210
msgid "A list of stickers before the update."
msgstr ""

#: ../../api.rst:1212
msgid "A list of stickers after the update."
msgstr ""

#: ../../api.rst:1218
msgid ""
"Called when a guild becomes available or unavailable. The guild must have"
" existed in the :attr:`Client.guilds` cache."
msgstr ""

#: ../../api.rst:1223
msgid "The guild that has changed availability."
msgstr ""

#: ../../api.rst:1228
msgid "Called when a :class:`Member` changes their :class:`VoiceState`."
msgstr ""

#: ../../api.rst:1230 ../../api.rst:1260
msgid ""
"The following, but not limited to, examples illustrate when this event is"
" called:"
msgstr ""

#: ../../api.rst:1232
msgid "A member joins a voice or stage channel."
msgstr ""

#: ../../api.rst:1233
msgid "A member leaves a voice or stage channel."
msgstr ""

#: ../../api.rst:1234
msgid "A member is muted or deafened by their own accord."
msgstr ""

#: ../../api.rst:1235
msgid "A member is muted or deafened by a guild administrator."
msgstr ""

#: ../../api.rst:1237
msgid "This requires :attr:`Intents.voice_states` to be enabled."
msgstr ""

#: ../../api.rst:1239
msgid "The member whose voice states changed."
msgstr ""

#: ../../api.rst:1241
msgid "The voice state prior to the changes."
msgstr ""

#: ../../api.rst:1243
msgid "The voice state after the changes."
msgstr ""

#: ../../api.rst:1249
msgid ""
"Called when a :class:`StageInstance` is created or deleted for a "
":class:`StageChannel`."
msgstr ""

#: ../../api.rst:1253
msgid "The stage instance that was created or deleted."
msgstr ""

#: ../../api.rst:1258
msgid "Called when a :class:`StageInstance` is updated."
msgstr ""

#: ../../api.rst:1262
msgid "The topic is changed."
msgstr ""

#: ../../api.rst:1263
msgid "The privacy level is changed."
msgstr ""

#: ../../api.rst:1267
msgid "The stage instance before the update."
msgstr ""

#: ../../api.rst:1269
msgid "The stage instance after the update."
msgstr ""

#: ../../api.rst:1274
msgid "Called when user gets banned from a :class:`Guild`."
msgstr ""

#: ../../api.rst:1276 ../../api.rst:1289
msgid "This requires :attr:`Intents.bans` to be enabled."
msgstr ""

#: ../../api.rst:1278
msgid "The guild the user got banned from."
msgstr ""

#: ../../api.rst:1280
msgid ""
"The user that got banned. Can be either :class:`User` or :class:`Member` "
"depending if the user was in the guild or not at the time of removal."
msgstr ""

#: ../../api.rst:1287
msgid "Called when a :class:`User` gets unbanned from a :class:`Guild`."
msgstr ""

#: ../../api.rst:1291
msgid "The guild the user got unbanned from."
msgstr ""

#: ../../api.rst:1293
msgid "The user that got unbanned."
msgstr ""

#: ../../api.rst:1298
msgid ""
"Called when an :class:`Invite` is created. You must have the "
":attr:`~Permissions.manage_channels` permission to receive this."
msgstr ""

#: ../../api.rst:1305 ../../api.rst:1322
msgid ""
"There is a rare possibility that the :attr:`Invite.guild` and "
":attr:`Invite.channel` attributes will be of :class:`Object` rather than "
"the respective models."
msgstr ""

#: ../../api.rst:1308 ../../api.rst:1328
msgid "This requires :attr:`Intents.invites` to be enabled."
msgstr ""

#: ../../api.rst:1310 discord.abc.GuildChannel.create_invite:49
#: discord.channel.VoiceChannel.create_activity_invite:29 of
msgid "The invite that was created."
msgstr ""

#: ../../api.rst:1315
msgid ""
"Called when an :class:`Invite` is deleted. You must have the "
":attr:`~Permissions.manage_channels` permission to receive this."
msgstr ""

#: ../../api.rst:1325
msgid ""
"Outside of those two attributes, the only other attribute guaranteed to "
"be filled by the Discord gateway for this event is :attr:`Invite.code`."
msgstr ""

#: ../../api.rst:1330
msgid "The invite that was deleted."
msgstr ""

#: ../../api.rst:1336
msgid "Called when someone joins or leaves a :class:`GroupChannel`."
msgstr ""

#: ../../api.rst:1338
msgid "The group that the user joined or left."
msgstr ""

#: ../../api.rst:1340
msgid "The user that joined or left."
msgstr ""

#: ../../api.rst:1345
msgid "Called when an :class:`ScheduledEvent` is created."
msgstr ""

#: ../../api.rst:1347 ../../api.rst:1356 ../../api.rst:1367 ../../api.rst:1378
#: ../../api.rst:1391 ../../api.rst:1402 ../../api.rst:1415
msgid "This requires :attr:`Intents.scheduled_events` to be enabled."
msgstr ""

#: ../../api.rst:1349
msgid "The newly created scheduled event."
msgstr ""

#: ../../api.rst:1354
msgid "Called when a scheduled event is updated."
msgstr ""

#: ../../api.rst:1358
msgid "The old scheduled event."
msgstr ""

#: ../../api.rst:1360
msgid "The updated scheduled event."
msgstr ""

#: ../../api.rst:1365
msgid "Called when a scheduled event is deleted."
msgstr ""

#: ../../api.rst:1369
msgid "The deleted scheduled event."
msgstr ""

#: ../../api.rst:1374
msgid ""
"Called when a user subscribes to an event. If the member or event is not "
"found in the internal cache, then this event will not be called. Consider"
" using :func:`on_raw_scheduled_event_user_add` instead."
msgstr ""

#: ../../api.rst:1380
msgid "The scheduled event subscribed to."
msgstr ""

#: ../../api.rst:1382
msgid "The member who subscribed."
msgstr ""

#: ../../api.rst:1387
msgid ""
"Called when a user subscribes to an event. Unlike "
":meth:`on_scheduled_event_user_add`, this will be called regardless of "
"the state of the internal cache."
msgstr ""

#: ../../api.rst:1398
msgid ""
"Called when a user unsubscribes to an event. If the member or event is "
"not found in the internal cache, then this event will not be called. "
"Consider using :func:`on_raw_scheduled_event_user_remove` instead."
msgstr ""

#: ../../api.rst:1404
msgid "The scheduled event unsubscribed from."
msgstr ""

#: ../../api.rst:1406
msgid "The member who unsubscribed."
msgstr ""

#: ../../api.rst:1411
msgid ""
"Called when a user unsubscribes to an event. Unlike "
":meth:`on_scheduled_event_user_remove`, this will be called regardless of"
" the state of the internal cache."
msgstr ""

#: ../../api.rst:1422
msgid "Called when an auto moderation rule is created."
msgstr ""

#: ../../api.rst:1424 ../../api.rst:1434 ../../api.rst:1444
msgid ""
"The bot must have :attr:`~Permissions.manage_guild` to receive this, and "
":attr:`Intents.auto_moderation_configuration` must be enabled."
msgstr ""

#: ../../api.rst:1427
msgid "The newly created rule."
msgstr ""

#: ../../api.rst:1432
msgid "Called when an auto moderation rule is updated."
msgstr ""

#: ../../api.rst:1437
msgid "The updated rule."
msgstr ""

#: ../../api.rst:1442
msgid "Called when an auto moderation rule is deleted."
msgstr ""

#: ../../api.rst:1447
msgid "The deleted rule."
msgstr ""

#: ../../api.rst:1452
msgid "Called when an auto moderation action is executed."
msgstr ""

#: ../../api.rst:1454
msgid ""
"The bot must have :attr:`~Permissions.manage_guild` to receive this, and "
":attr:`Intents.auto_moderation_execution` must be enabled."
msgstr ""

#: ../../api.rst:1457
msgid "The event's data."
msgstr ""

#: ../../api.rst:1463
msgid "Utility Functions"
msgstr ""

#: discord.utils.find:1 of
msgid ""
"A helper to return the first element found in the sequence that meets the"
" predicate. For example: ::"
msgstr ""

#: discord.utils.find:6 of
msgid ""
"would find the first :class:`~discord.Member` whose name is 'Mighty' and "
"return it. If an entry is not found, then ``None`` is returned."
msgstr ""

#: discord.utils.find:9 of
msgid ""
"This is different from :func:`py:filter` due to the fact it stops the "
"moment it finds a valid entry."
msgstr ""

#: discord.utils.find:12 of
msgid "A function that returns a boolean-like result."
msgstr ""

#: discord.utils.find:13 of
msgid "The iterable to search through."
msgstr ""

#: discord.utils.get:1 of
msgid ""
"A helper that returns the first element in the iterable that meets all "
"the traits passed in ``attrs``. This is an alternative for "
":func:`~discord.utils.find`."
msgstr ""

#: discord.utils.get:5 of
msgid ""
"When multiple attributes are specified, they are checked using logical "
"AND, not logical OR. Meaning they have to meet every attribute passed in "
"and not one of them."
msgstr ""

#: discord.utils.get:9 of
msgid ""
"To have a nested attribute search (i.e. search by ``x.y``) then pass in "
"``x__y`` as the keyword argument."
msgstr ""

#: discord.utils.get:12 of
msgid ""
"If nothing is found that matches the attributes passed, then ``None`` is "
"returned."
msgstr ""

#: discord.utils.get:17 of
msgid "Basic usage:"
msgstr ""

#: discord.utils.get:23 of
msgid "Multiple attribute matching:"
msgstr ""

#: discord.utils.get:29 of
msgid "Nested attribute matching:"
msgstr ""

#: discord.utils.get:35 of
msgid "An iterable to search through."
msgstr ""

#: discord.utils.get:36 of
msgid "Keyword arguments that denote attributes to search with."
msgstr ""

#: discord.utils.snowflake_time:1 of
msgid "The snowflake ID."
msgstr ""

#: discord.utils.snowflake_time:4 of
msgid "An aware datetime in UTC representing the creation time of the snowflake."
msgstr ""

#: ../../docstring discord.AuditLogEntry.created_at:3
#: discord.CategoryChannel.created_at:3 discord.ClientUser.created_at:5
#: discord.DMChannel.created_at:3 discord.Emoji.created_at:3
#: discord.ForumChannel.created_at:3 discord.GroupChannel.created_at:3
#: discord.Guild.created_at:3 discord.Message.created_at:3
#: discord.Object.created_at:3 discord.PartialInviteChannel.created_at:3
#: discord.PartialInviteGuild.created_at:3 discord.PartialMessage.created_at:3
#: discord.Role.created_at:3 discord.ScheduledEvent.created_at:3
#: discord.Spotify.end:3 discord.Spotify.start:3
#: discord.StageChannel.created_at:3 discord.Sticker.created_at:3
#: discord.SyncWebhook.created_at:3 discord.TextChannel.created_at:3
#: discord.User.created_at:5 discord.VoiceChannel.created_at:3
#: discord.Webhook.created_at:3 discord.Widget.created_at:3
#: discord.WidgetChannel.created_at:3 discord.WidgetMember.created_at:5
#: discord.abc.GuildChannel.created_at:3 discord.embeds.Embed:63
#: discord.integrations.StreamIntegration:75 discord.invite.Invite:77
#: discord.raw_models.RawTypingEvent:21
#: discord.scheduled_events.ScheduledEvent:45 discord.template.Template:39
#: discord.template.Template:46 discord.threads.Thread:121
#: discord.threads.ThreadMember:39 discord.utils.snowflake_time:5
#: discord.utils.utcnow:9 of
msgid ":class:`datetime.datetime`"
msgstr ""

#: discord.utils.oauth_url:1 of
msgid ""
"A helper function that returns the OAuth2 URL for inviting the bot into "
"guilds."
msgstr ""

#: discord.utils.oauth_url:4 of
msgid "The client ID for your bot."
msgstr ""

#: discord.utils.oauth_url:6 of
msgid ""
"The permissions you're requesting. If not given then you won't be "
"requesting any permissions."
msgstr ""

#: discord.utils.oauth_url:9 of
msgid "The guild to pre-select in the authorization screen, if available."
msgstr ""

#: discord.utils.oauth_url:11 of
msgid "An optional valid redirect URI."
msgstr ""

#: discord.utils.oauth_url:13 of
msgid ""
"An optional valid list of scopes. Defaults to ``('bot',)``.  .. "
"versionadded:: 1.7"
msgstr ""

#: discord.utils.oauth_url:13 of
msgid "An optional valid list of scopes. Defaults to ``('bot',)``."
msgstr ""

#: discord.utils.oauth_url:17 of
msgid ""
"Whether to disallow the user from changing the guild dropdown.  .. "
"versionadded:: 2.0"
msgstr ""

#: discord.utils.oauth_url:17 of
msgid "Whether to disallow the user from changing the guild dropdown."
msgstr ""

#: discord.utils.oauth_url:22 of
msgid "The OAuth2 URL for inviting the bot into guilds."
msgstr ""

#: discord.utils.remove_markdown:1 of
msgid "A helper function that removes markdown characters."
msgstr ""

#: discord.utils.remove_markdown:6 of
msgid ""
"This function is not markdown aware and may remove meaning from the "
"original text. For example, if the input contains ``10 * 5`` then it will"
" be converted into ``10  5``."
msgstr ""

#: discord.utils.remove_markdown:9 of
msgid "The text to remove markdown from."
msgstr ""

#: discord.utils.remove_markdown:11 of
msgid ""
"Whether to leave links alone when removing markdown. For example, if a "
"URL in the text contains characters such as ``_`` then it will be left "
"alone. Defaults to ``True``."
msgstr ""

#: discord.utils.remove_markdown:16 of
msgid "The text with the markdown special characters removed."
msgstr ""

#: discord.utils.escape_markdown:1 of
msgid "A helper function that escapes Discord's markdown."
msgstr ""

#: discord.utils.escape_markdown:3 of
msgid "The text to escape markdown from."
msgstr ""

#: discord.utils.escape_markdown:5 of
msgid ""
"Whether to escape the markdown characters as needed. This means that it "
"does not escape extraneous characters if it's not necessary, e.g. "
"``**hello**`` is escaped into ``\\*\\*hello**`` instead of "
"``\\*\\*hello\\*\\*``. Note however that this can open you up to some "
"clever syntax abuse. Defaults to ``False``."
msgstr ""

#: discord.utils.escape_markdown:11 of
msgid ""
"Whether to leave links alone when escaping markdown. For example, if a "
"URL in the text contains characters such as ``_`` then it will be left "
"alone. This option is not supported with ``as_needed``. Defaults to "
"``True``."
msgstr ""

#: discord.utils.escape_markdown:17 of
msgid "The text with the markdown special characters escaped with a slash."
msgstr ""

#: discord.utils.escape_mentions:1 of
msgid "A helper function that escapes everyone, here, role, and user mentions."
msgstr ""

#: discord.utils.escape_mentions:5 of
msgid "This does not include channel mentions."
msgstr ""

#: discord.utils.escape_mentions:9 of
msgid ""
"For more granular control over what mentions should be escaped within "
"messages, refer to the :class:`~discord.AllowedMentions` class."
msgstr ""

#: discord.utils.escape_mentions:13 of
msgid "The text to escape mentions from."
msgstr ""

#: discord.utils.escape_mentions:16 of
msgid "The text with the mentions removed."
msgstr ""

#: discord.utils.resolve_invite:1 of
msgid "Resolves an invite from a :class:`~discord.Invite`, URL or code."
msgstr ""

#: discord.utils.resolve_invite:3 of
msgid "The invite."
msgstr ""

#: discord.utils.resolve_invite:6 of
msgid "The invite code."
msgstr ""

#: discord.utils.resolve_template:1 of
msgid "Resolves a template code from a :class:`~discord.Template`, URL or code."
msgstr ""

#: discord.utils.resolve_template:5 of
msgid "The code."
msgstr ""

#: discord.template.Template:7 discord.utils.resolve_template:8 of
msgid "The template code."
msgstr ""

#: discord.utils.sleep_until:3 of
msgid "Sleep until a specified time."
msgstr ""

#: discord.utils.sleep_until:5 of
msgid "If the time supplied is in the past this function will yield instantly."
msgstr ""

#: discord.utils.sleep_until:9 of
msgid ""
"The timestamp in which to sleep until. If the datetime is naive then it "
"is assumed to be local time."
msgstr ""

#: discord.utils.sleep_until:12 of
msgid "If provided is returned to the caller when the coroutine completes."
msgstr ""

#: discord.utils.utcnow:1 of
msgid ""
"A helper function to return an aware UTC datetime representing the "
"current time."
msgstr ""

#: discord.utils.utcnow:3 of
msgid ""
"This should be preferred to :meth:`datetime.datetime.utcnow` since it is "
"an aware datetime, compared to the naive datetime in the standard "
"library."
msgstr ""

#: discord.utils.utcnow:8 of
msgid "The current aware datetime in UTC."
msgstr ""

#: discord.utils.format_dt:1 of
msgid ""
"A helper function to format a :class:`datetime.datetime` for presentation"
" within Discord."
msgstr ""

#: discord.utils.format_dt:3 of
msgid ""
"This allows for a locale-independent way of presenting data using Discord"
" specific Markdown."
msgstr ""

#: discord.utils.format_dt:6 of
msgid "Style"
msgstr ""

#: discord.utils.format_dt:6 of
msgid "Example Output"
msgstr ""

#: ../../api.rst:3507 ../../api.rst:3527 discord.utils.format_dt:6 of
msgid "Description"
msgstr ""

#: discord.utils.format_dt:8 of
msgid "t"
msgstr ""

#: discord.utils.format_dt:8 of
msgid "22:57"
msgstr ""

#: discord.utils.format_dt:8 of
msgid "Short Time"
msgstr ""

#: discord.utils.format_dt:10 of
msgid "T"
msgstr ""

#: discord.utils.format_dt:10 of
msgid "22:57:58"
msgstr ""

#: discord.utils.format_dt:10 of
msgid "Long Time"
msgstr ""

#: discord.utils.format_dt:12 of
msgid "d"
msgstr ""

#: discord.utils.format_dt:12 of
msgid "17/05/2016"
msgstr ""

#: discord.utils.format_dt:12 of
msgid "Short Date"
msgstr ""

#: discord.utils.format_dt:14 of
msgid "D"
msgstr ""

#: discord.utils.format_dt:14 of
msgid "17 May 2016"
msgstr ""

#: discord.utils.format_dt:14 of
msgid "Long Date"
msgstr ""

#: discord.utils.format_dt:16 of
msgid "f (default)"
msgstr ""

#: discord.utils.format_dt:16 of
msgid "17 May 2016 22:57"
msgstr ""

#: discord.utils.format_dt:16 of
msgid "Short Date Time"
msgstr ""

#: discord.utils.format_dt:18 of
msgid "F"
msgstr ""

#: discord.utils.format_dt:18 of
msgid "Tuesday, 17 May 2016 22:57"
msgstr ""

#: discord.utils.format_dt:18 of
msgid "Long Date Time"
msgstr ""

#: discord.utils.format_dt:20 of
msgid "R"
msgstr ""

#: discord.utils.format_dt:20 of
msgid "5 years ago"
msgstr ""

#: discord.utils.format_dt:20 of
msgid "Relative Time"
msgstr ""

#: discord.utils.format_dt:23 of
msgid ""
"Note that the exact output depends on the user's locale setting in the "
"client. The example output presented is using the ``en-GB`` locale."
msgstr ""

#: discord.utils.format_dt:28 of
msgid "The datetime to format."
msgstr ""

#: discord.utils.format_dt:30 of
msgid "The style to format the datetime with."
msgstr ""

#: discord.utils.format_dt:33 of
msgid "The formatted string."
msgstr ""

#: discord.utils.as_chunks:1 of
msgid "A helper function that collects an iterator into chunks of a given size."
msgstr ""

#: discord.utils.as_chunks:5 of
msgid "The iterator to chunk, can be sync or async."
msgstr ""

#: discord.utils.as_chunks:7 of
msgid "The maximum chunk size."
msgstr ""

#: ../../api.rst:3432 discord.utils.as_chunks:12 of
msgid "The last chunk collected may not be as large as ``max_size``."
msgstr ""

#: discord.utils.as_chunks:14 of
msgid "A new iterator which yields chunks of a given size."
msgstr ""

#: discord.utils.as_chunks:15 of
msgid ""
"Union[:class:`collections.abc.Iterator`, "
":class:`collections.abc.AsyncIterator`]"
msgstr ""

#: discord.utils.time_snowflake:1 of
msgid "Returns a numeric snowflake pretending to be created at the given date."
msgstr ""

#: discord.utils.time_snowflake:3 of
msgid ""
"When using as the lower end of a range, use ``time_snowflake(high=False) "
"- 1`` to be inclusive, ``high=True`` to be exclusive."
msgstr ""

#: discord.utils.time_snowflake:6 of
msgid ""
"When using as the higher end of a range, use ``time_snowflake(high=True) "
"+ 1`` to be inclusive, ``high=False`` to be exclusive"
msgstr ""

#: discord.utils.generate_snowflake:4 discord.utils.time_snowflake:9 of
msgid ""
"A datetime object to convert to a snowflake. If naive, the timezone is "
"assumed to be local time."
msgstr ""

#: discord.utils.time_snowflake:12 of
msgid "Whether to set the lower 22 bit to high or low."
msgstr ""

#: discord.utils.generate_snowflake:8 discord.utils.time_snowflake:15 of
msgid "The snowflake representing the time given."
msgstr ""

#: discord.utils.generate_snowflake:1 of
msgid ""
"Returns a numeric snowflake pretending to be created at the given date "
"but more accurate and random than :func:`time_snowflake`. If dt is not "
"passed, it makes one from the current time using utcnow."
msgstr ""

#: discord.utils.basic_autocomplete:1 of
msgid ""
"A helper function to make a basic autocomplete for slash commands. This "
"is a pretty standard autocomplete and will return any options that start "
"with the value from the user, case-insensitive. If the ``values`` "
"parameter is callable, it will be called with the AutocompleteContext."
msgstr ""

#: discord.utils.basic_autocomplete:5 of
msgid ""
"This is meant to be passed into the :attr:`discord.Option.autocomplete` "
"attribute."
msgstr ""

#: discord.utils.basic_autocomplete:7 of
msgid "Autocomplete cannot be used for options that have specified choices."
msgstr ""

#: discord.utils.basic_autocomplete:26 of
msgid ""
":param Iterable[:class:`float`]]: :param "
"Callable[[:class:`.AutocompleteContext`]: :param "
"Union[Union[Iterable[:class:`str`]: :param : :param "
"Iterable[:class:`int`]: :param Iterable[:class:`float`]]: :param "
"Awaitable[Union[Iterable[:class:`str`]: :param : :param "
"Iterable[:class:`int`]: :param Iterable[:class:`float`]]]]]: :param "
"Awaitable[Union[Iterable[:class:`str`]: :param : :param "
"Iterable[:class:`int`]: Possible values for the option. Accepts an "
"iterable of :class:`str`, a callable (sync or async) that takes a"
msgstr ""

#: discord.utils.basic_autocomplete:39 discord.utils.basic_autocomplete:41 of
msgid ""
"single argument of :class:`.AutocompleteContext`, or a coroutine. Must "
"resolve to an iterable of :class:`str`."
msgstr ""

#: discord.utils.basic_autocomplete:41 of
msgid ""
":param Iterable[:class:`float`]]]]: Possible values for the option. "
"Accepts an iterable of :class:`str`, a callable (sync or async) that "
"takes a"
msgstr ""

#: discord.utils.basic_autocomplete:43 of
msgid ""
"* Callable[[:class:`.AutocompleteContext`], "
"Awaitable[Union[Iterable[:class:`.OptionChoice`], Iterable[:class:`str`],"
" * Iterable[:class:`int`], Iterable[:class:`float`]]]] -- A wrapped "
"callback for the autocomplete."
msgstr ""

#: discord.utils.basic_autocomplete:43 of
msgid ""
"Callable[[:class:`.AutocompleteContext`], "
"Awaitable[Union[Iterable[:class:`.OptionChoice`], Iterable[:class:`str`],"
msgstr ""

#: discord.utils.basic_autocomplete:44 of
msgid ""
"Iterable[:class:`int`], Iterable[:class:`float`]]]] -- A wrapped callback"
" for the autocomplete."
msgstr ""

#: discord.utils.filter_params:1 of
msgid "A helper function to filter out and replace certain keyword parameters"
msgstr ""

#: discord.utils.filter_params:3 of
msgid "The initial parameters to filter."
msgstr ""

#: discord.utils.filter_params:5 of
msgid ""
"Key to value pairs where the key's contents would be moved to the value, "
"or if the value is None, remove key's contents (see code example)."
msgstr ""

#: ../../api.rst:1502
msgid "Enumerations"
msgstr ""

#: ../../api.rst:1504
msgid ""
"The API provides some enumerations for certain types of strings to avoid "
"the API from being stringly typed in case the strings change in the "
"future."
msgstr ""

#: ../../api.rst:1507
msgid ""
"All enumerations are subclasses of an internal class which mimics the "
"behaviour of :class:`enum.Enum`."
msgstr ""

#: ../../api.rst:1512
msgid "Specifies the input type of an option."
msgstr ""

#: ../../api.rst:1518
msgid "A slash subcommand."
msgstr ""

#: ../../api.rst:1521
msgid "A slash command group."
msgstr ""

#: ../../api.rst:1524
msgid "A string."
msgstr ""

#: ../../api.rst:1527
msgid "An integer."
msgstr ""

#: ../../api.rst:1530
msgid "A boolean."
msgstr ""

#: ../../api.rst:1533
msgid ""
"A user from the current channel. This will be converted to an instance of"
" :class:`.User` in private channels, else :class:`.Member`"
msgstr ""

#: ../../api.rst:1536
msgid "A channel from the current guild."
msgstr ""

#: ../../api.rst:1539
msgid "A role from the current guild."
msgstr ""

#: ../../api.rst:1542
msgid "A mentionable (user or role)."
msgstr ""

#: ../../api.rst:1545
msgid "A floating number."
msgstr ""

#: ../../api.rst:1549
msgid "An attachment. Currently in beta."
msgstr ""

#: ../../api.rst:1553
msgid "Specifies the type of channel."
msgstr ""

#: ../../api.rst:1557
msgid "A text channel."
msgstr ""

#: ../../api.rst:1561
msgid "A voice channel."
msgstr ""

#: ../../api.rst:1565
msgid "A private text channel. Also called a direct message."
msgstr ""

#: ../../api.rst:1569
msgid "A private group text channel."
msgstr ""

#: ../../api.rst:1573
msgid "A category channel."
msgstr ""

#: ../../api.rst:1577
msgid "A guild news channel."
msgstr ""

#: ../../api.rst:1581
msgid "A guild stage voice channel."
msgstr ""

#: ../../api.rst:1587
msgid "A news thread"
msgstr ""

#: ../../api.rst:1593
msgid "A public thread"
msgstr ""

#: ../../api.rst:1599
msgid "A private thread"
msgstr ""

#: ../../api.rst:1605
msgid "A guild directory entry, used in hub guilds, currently in experiment."
msgstr ""

#: ../../api.rst:1611
msgid ""
"User can only write in threads, similar functionality to a forum, "
"currently in experiment."
msgstr ""

#: ../../api.rst:1617
msgid ""
"Specifies the type of :class:`Message`. This is used to denote if a "
"message is to be interpreted as a system message or a regular message."
msgstr ""

#: ../../api.rst:1624 discord.message.Message:7 of
msgid "Checks if two messages are equal."
msgstr ""

#: ../../api.rst:1627 discord.message.Message:11 of
msgid "Checks if two messages are not equal."
msgstr ""

#: ../../api.rst:1631
msgid "The default message type. This is the same as regular messages."
msgstr ""

#: ../../api.rst:1634
msgid ""
"The system message when a user is added to a group private message or a "
"thread."
msgstr ""

#: ../../api.rst:1638
msgid ""
"The system message when a user is removed from a group private message or"
" a thread."
msgstr ""

#: ../../api.rst:1642
msgid ""
"The system message denoting call state, e.g. missed call, started call, "
"etc."
msgstr ""

#: ../../api.rst:1646
msgid "The system message denoting that a channel's name has been changed."
msgstr ""

#: ../../api.rst:1649
msgid "The system message denoting that a channel's icon has been changed."
msgstr ""

#: ../../api.rst:1652
msgid ""
"The system message denoting that a pinned message has been added to a "
"channel."
msgstr ""

#: ../../api.rst:1655
msgid "The system message denoting that a new member has joined a Guild."
msgstr ""

#: ../../api.rst:1659
msgid "The system message denoting that a member has \"nitro boosted\" a guild."
msgstr ""

#: ../../api.rst:1662
msgid ""
"The system message denoting that a member has \"nitro boosted\" a guild "
"and it achieved level 1."
msgstr ""

#: ../../api.rst:1666
msgid ""
"The system message denoting that a member has \"nitro boosted\" a guild "
"and it achieved level 2."
msgstr ""

#: ../../api.rst:1670
msgid ""
"The system message denoting that a member has \"nitro boosted\" a guild "
"and it achieved level 3."
msgstr ""

#: ../../api.rst:1674
msgid ""
"The system message denoting that an announcement channel has been "
"followed."
msgstr ""

#: ../../api.rst:1679
msgid "The system message denoting that a member is streaming in the guild."
msgstr ""

#: ../../api.rst:1684
msgid ""
"The system message denoting that the guild is no longer eligible for "
"Server Discovery."
msgstr ""

#: ../../api.rst:1690
msgid ""
"The system message denoting that the guild has become eligible again for "
"Server Discovery."
msgstr ""

#: ../../api.rst:1696
msgid ""
"The system message denoting that the guild has failed to meet the Server "
"Discovery requirements for one week."
msgstr ""

#: ../../api.rst:1702
msgid ""
"The system message denoting that the guild has failed to meet the Server "
"Discovery requirements for 3 weeks in a row."
msgstr ""

#: ../../api.rst:1708
msgid ""
"The system message denoting that a thread has been created. This is only "
"sent if the thread has been created from an older message. The period of "
"time required for a message to be considered old cannot be relied upon "
"and is up to Discord."
msgstr ""

#: ../../api.rst:1716
msgid "The system message denoting that the author is replying to a message."
msgstr ""

#: ../../api.rst:1721
msgid ""
"The system message denoting that an application (or \"slash\") command "
"was executed."
msgstr ""

#: ../../api.rst:1726
msgid "The system message sent as a reminder to invite people to the guild."
msgstr ""

#: ../../api.rst:1731
msgid ""
"The system message denoting the message in the thread that is the one "
"that started the thread's conversation topic."
msgstr ""

#: ../../api.rst:1737
msgid "The system message denoting that an context menu command was executed."
msgstr ""

#: ../../api.rst:1743
msgid "Represents Discord User flags."
msgstr ""

#: ../../api.rst:1747
msgid "The user is a Discord Employee."
msgstr ""

#: ../../api.rst:1750
msgid "The user is a Discord Partner."
msgstr ""

#: ../../api.rst:1753
msgid "The user is a HypeSquad Events member."
msgstr ""

#: ../../api.rst:1756
msgid "The user is a Bug Hunter."
msgstr ""

#: ../../api.rst:1759
msgid "The user has SMS recovery for Multi Factor Authentication enabled."
msgstr ""

#: ../../api.rst:1762
msgid "The user has dismissed the Discord Nitro promotion."
msgstr ""

#: ../../api.rst:1765
msgid "The user is a HypeSquad Bravery member."
msgstr ""

#: ../../api.rst:1768
msgid "The user is a HypeSquad Brilliance member."
msgstr ""

#: ../../api.rst:1771
msgid "The user is a HypeSquad Balance member."
msgstr ""

#: ../../api.rst:1774
msgid "The user is an Early Supporter."
msgstr ""

#: ../../api.rst:1777
msgid "The user is a Team User."
msgstr ""

#: ../../api.rst:1780
msgid "Relates to partner/verification applications."
msgstr ""

#: ../../api.rst:1783
msgid "The user is a system user (i.e. represents Discord officially)."
msgstr ""

#: ../../api.rst:1786
msgid "The user has an unread system message."
msgstr ""

#: ../../api.rst:1789
msgid "The user is a Bug Hunter Level 2."
msgstr ""

#: ../../api.rst:1792
msgid "The user is a Verified Bot."
msgstr ""

#: ../../api.rst:1795
msgid "The user is an Early Verified Bot Developer."
msgstr ""

#: ../../api.rst:1798
msgid "The user is a Discord Certified Moderator."
msgstr ""

#: ../../api.rst:1801
msgid "The bot has set an interactions endpoint url."
msgstr ""

#: ../../api.rst:1804
msgid "The user is disabled for being a spammer."
msgstr ""

#: ../../api.rst:1808
msgid ""
"Specifies the type of :class:`Activity`. This is used to check how to "
"interpret the activity itself."
msgstr ""

#: ../../api.rst:1813
msgid "An unknown activity type. This should generally not happen."
msgstr ""

#: ../../api.rst:1816
msgid "A \"Playing\" activity type."
msgstr ""

#: ../../api.rst:1819
msgid "A \"Streaming\" activity type."
msgstr ""

#: ../../api.rst:1822
msgid "A \"Listening\" activity type."
msgstr ""

#: ../../api.rst:1825
msgid "A \"Watching\" activity type."
msgstr ""

#: ../../api.rst:1828
msgid "A custom activity type."
msgstr ""

#: ../../api.rst:1831
msgid "A competing activity type."
msgstr ""

#: ../../api.rst:1837
msgid "Specifies the type of :class:`Interaction`."
msgstr ""

#: ../../api.rst:1843
msgid ""
"Represents Discord pinging to see if the interaction response server is "
"alive."
msgstr ""

#: ../../api.rst:1846
msgid "Represents a slash command interaction."
msgstr ""

#: ../../api.rst:1849
msgid ""
"Represents a component based interaction, i.e. using the Discord Bot UI "
"Kit."
msgstr ""

#: ../../api.rst:1852
msgid "Represents a autocomplete interaction for slash commands."
msgstr ""

#: ../../api.rst:1855
msgid "Represents a modal based interaction."
msgstr ""

#: ../../api.rst:1859
msgid "Specifies the response type for the interaction."
msgstr ""

#: ../../api.rst:1865
msgid "Pongs the interaction when given a ping."
msgstr ""

#: ../../api.rst:1867
msgid "See also :meth:`InteractionResponse.pong`"
msgstr ""

#: ../../api.rst:1870
msgid "Respond to the interaction with a message."
msgstr ""

#: ../../api.rst:1872
msgid "See also :meth:`InteractionResponse.send_message`"
msgstr ""

#: ../../api.rst:1875
msgid "Responds to the interaction with a message at a later time."
msgstr ""

#: ../../api.rst:1877 ../../api.rst:1883
msgid "See also :meth:`InteractionResponse.defer`"
msgstr ""

#: ../../api.rst:1880
msgid ""
"Acknowledges the component interaction with a promise that the message "
"will update later (though there is no need to actually update the "
"message)."
msgstr ""

#: ../../api.rst:1886
msgid "Responds to the interaction by editing the message."
msgstr ""

#: ../../api.rst:1888
msgid "See also :meth:`InteractionResponse.edit_message`"
msgstr ""

#: ../../api.rst:1891
msgid "Responds to the interaction by sending the autocomplete choices."
msgstr ""

#: ../../api.rst:1893
msgid "See also :meth:`InteractionResponse.send_autocomplete_result`"
msgstr ""

#: ../../api.rst:1896
msgid "Responds to the interaction by sending a modal dialog."
msgstr ""

#: ../../api.rst:1898
msgid "See also :meth:`InteractionResponse.send_modal`"
msgstr ""

#: ../../api.rst:1902
msgid "Represents the component type of a component."
msgstr ""

#: ../../api.rst:1908
msgid "Represents the group component which holds different components in a row."
msgstr ""

#: ../../api.rst:1911
msgid "Represents a button component."
msgstr ""

#: ../../api.rst:1914
msgid "Represents a select component."
msgstr ""

#: ../../api.rst:1917
msgid "Represents an input_text component."
msgstr ""

#: ../../api.rst:1921
msgid "Represents the style of the button component."
msgstr ""

#: ../../api.rst:1927
msgid "Represents a blurple button for the primary action."
msgstr ""

#: ../../api.rst:1930
msgid "Represents a grey button for the secondary action."
msgstr ""

#: ../../api.rst:1933
msgid "Represents a green button for a successful action."
msgstr ""

#: ../../api.rst:1936
msgid "Represents a red button for a dangerous action."
msgstr ""

#: ../../api.rst:1939
msgid "Represents a link button."
msgstr ""

#: ../../api.rst:1943
msgid "An alias for :attr:`primary`."
msgstr ""

#: ../../api.rst:1946 ../../api.rst:1949
msgid "An alias for :attr:`secondary`."
msgstr ""

#: ../../api.rst:1952
msgid "An alias for :attr:`success`."
msgstr ""

#: ../../api.rst:1955
msgid "An alias for :attr:`danger`."
msgstr ""

#: ../../api.rst:1958
msgid "An alias for :attr:`link`."
msgstr ""

#: ../../api.rst:1962
msgid "Represents the style of the input text component."
msgstr ""

#: ../../api.rst:1968
msgid "Represents a single-line input text field."
msgstr ""

#: ../../api.rst:1971
msgid "Represents a multi-line input text field."
msgstr ""

#: ../../api.rst:1974
msgid "An alias for :attr:`short`."
msgstr ""

#: ../../api.rst:1977 ../../api.rst:1980
msgid "An alias for :attr:`long`."
msgstr ""

#: ../../api.rst:1984
msgid "Specifies the region a voice server belongs to."
msgstr ""

#: ../../api.rst:1988
msgid "The Amsterdam region."
msgstr ""

#: ../../api.rst:1991
msgid "The Brazil region."
msgstr ""

#: ../../api.rst:1994
msgid "The Dubai region."
msgstr ""

#: ../../api.rst:2000
msgid "The EU Central region."
msgstr ""

#: ../../api.rst:2003
msgid "The EU West region."
msgstr ""

#: ../../api.rst:2006
msgid "The Europe region."
msgstr ""

#: ../../api.rst:2012
msgid "The Frankfurt region."
msgstr ""

#: ../../api.rst:2015
msgid "The Hong Kong region."
msgstr ""

#: ../../api.rst:2018
msgid "The India region."
msgstr ""

#: ../../api.rst:2024
msgid "The Japan region."
msgstr ""

#: ../../api.rst:2027
msgid "The London region."
msgstr ""

#: ../../api.rst:2030
msgid "The Russia region."
msgstr ""

#: ../../api.rst:2033
msgid "The Singapore region."
msgstr ""

#: ../../api.rst:2036
msgid "The South Africa region."
msgstr ""

#: ../../api.rst:2039
msgid "The South Korea region."
msgstr ""

#: ../../api.rst:2042
msgid "The Sydney region."
msgstr ""

#: ../../api.rst:2045
msgid "The US Central region."
msgstr ""

#: ../../api.rst:2048
msgid "The US East region."
msgstr ""

#: ../../api.rst:2051
msgid "The US South region."
msgstr ""

#: ../../api.rst:2054
msgid "The US West region."
msgstr ""

#: ../../api.rst:2057
msgid "The Amsterdam region for VIP guilds."
msgstr ""

#: ../../api.rst:2060
msgid "The US East region for VIP guilds."
msgstr ""

#: ../../api.rst:2063
msgid "The US West region for VIP guilds."
msgstr ""

#: ../../api.rst:2067
msgid ""
"Specifies a :class:`Guild`\\'s verification level, which is the criteria "
"in which a member must meet before being able to send messages to the "
"guild."
msgstr ""

#: ../../api.rst:2076
msgid "Checks if two verification levels are equal."
msgstr ""

#: ../../api.rst:2079
msgid "Checks if two verification levels are not equal."
msgstr ""

#: ../../api.rst:2082
msgid "Checks if a verification level is higher than another."
msgstr ""

#: ../../api.rst:2085
msgid "Checks if a verification level is lower than another."
msgstr ""

#: ../../api.rst:2088
msgid "Checks if a verification level is higher or equal to another."
msgstr ""

#: ../../api.rst:2091
msgid "Checks if a verification level is lower or equal to another."
msgstr ""

#: ../../api.rst:2095
msgid "No criteria set."
msgstr ""

#: ../../api.rst:2098
msgid "Member must have a verified email on their Discord account."
msgstr ""

#: ../../api.rst:2101
msgid ""
"Member must have a verified email and be registered on Discord for more "
"than five minutes."
msgstr ""

#: ../../api.rst:2105
msgid ""
"Member must have a verified email, be registered on Discord for more than"
" five minutes, and be a member of the guild itself for more than ten "
"minutes."
msgstr ""

#: ../../api.rst:2110
msgid "Member must have a verified phone on their Discord account."
msgstr ""

#: ../../api.rst:2114
msgid ""
"Specifies whether a :class:`Guild` has notifications on for all messages "
"or mentions only by default."
msgstr ""

#: ../../api.rst:2122
msgid "Checks if two notification levels are equal."
msgstr ""

#: ../../api.rst:2125
msgid "Checks if two notification levels are not equal."
msgstr ""

#: ../../api.rst:2128
msgid "Checks if a notification level is higher than another."
msgstr ""

#: ../../api.rst:2131
msgid "Checks if a notification level is lower than another."
msgstr ""

#: ../../api.rst:2134
msgid "Checks if a notification level is higher or equal to another."
msgstr ""

#: ../../api.rst:2137
msgid "Checks if a notification level is lower or equal to another."
msgstr ""

#: ../../api.rst:2141
msgid ""
"Members receive notifications for every message regardless of them being "
"mentioned."
msgstr ""

#: ../../api.rst:2144
msgid "Members receive notifications for messages they are mentioned in."
msgstr ""

#: ../../api.rst:2148
msgid ""
"Specifies a :class:`Guild`\\'s explicit content filter, which is the "
"machine learning algorithms that Discord uses to detect if an image "
"contains pornography or otherwise explicit content."
msgstr ""

#: ../../api.rst:2158
msgid "Checks if two content filter levels are equal."
msgstr ""

#: ../../api.rst:2161
msgid "Checks if two content filter levels are not equal."
msgstr ""

#: ../../api.rst:2164
msgid "Checks if a content filter level is higher than another."
msgstr ""

#: ../../api.rst:2167
msgid "Checks if a content filter level is lower than another."
msgstr ""

#: ../../api.rst:2170
msgid "Checks if a content filter level is higher or equal to another."
msgstr ""

#: ../../api.rst:2173
msgid "Checks if a content filter level is lower or equal to another."
msgstr ""

#: ../../api.rst:2177
msgid "The guild does not have the content filter enabled."
msgstr ""

#: ../../api.rst:2180
msgid "The guild has the content filter enabled for members without a role."
msgstr ""

#: ../../api.rst:2183
msgid "The guild has the content filter enabled for every member."
msgstr ""

#: ../../api.rst:2187
msgid "Specifies a :class:`Member` 's status."
msgstr ""

#: ../../api.rst:2191
msgid "The member is online."
msgstr ""

#: ../../api.rst:2194
msgid "The member is offline."
msgstr ""

#: ../../api.rst:2197
msgid "The member is idle."
msgstr ""

#: ../../api.rst:2200
msgid "The member is \"Do Not Disturb\"."
msgstr ""

#: ../../api.rst:2203
msgid "An alias for :attr:`dnd`."
msgstr ""

#: ../../api.rst:2206
msgid ""
"The member is \"invisible\". In reality, this is only used in sending a "
"presence a la :meth:`Client.change_presence`. When you receive a user's "
"presence this will be :attr:`offline` instead."
msgstr ""

#: ../../api.rst:2211
msgid "The member is streaming."
msgstr ""

#: ../../api.rst:2216
msgid ""
"Represents the type of action being done for a :class:`AuditLogEntry`\\, "
"which is retrievable via :meth:`Guild.audit_logs`."
msgstr ""

#: ../../api.rst:2221
msgid "The guild has updated. Things that trigger this include:"
msgstr ""

#: ../../api.rst:2223
msgid "Changing the guild vanity URL"
msgstr ""

#: ../../api.rst:2224
msgid "Changing the guild invite splash"
msgstr ""

#: ../../api.rst:2225
msgid "Changing the guild AFK channel or timeout"
msgstr ""

#: ../../api.rst:2226
msgid "Changing the guild voice server region"
msgstr ""

#: ../../api.rst:2227
msgid "Changing the guild icon, banner, or discovery splash"
msgstr ""

#: ../../api.rst:2228
msgid "Changing the guild moderation settings"
msgstr ""

#: ../../api.rst:2229
msgid "Changing things related to the guild widget"
msgstr ""

#: ../../api.rst:2231
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`Guild`."
msgstr ""

#: ../../api.rst:2234 ../../api.rst:2260 ../../api.rst:2279 ../../api.rst:2301
#: ../../api.rst:2320 ../../api.rst:2336 ../../api.rst:2351 ../../api.rst:2410
#: ../../api.rst:2424 ../../api.rst:2469 ../../api.rst:2489 ../../api.rst:2504
#: ../../api.rst:2519 ../../api.rst:2543 ../../api.rst:2560 ../../api.rst:2576
#: ../../api.rst:2589 ../../api.rst:2602 ../../api.rst:2613 ../../api.rst:2624
#: ../../api.rst:2721 ../../api.rst:2736 ../../api.rst:2757 ../../api.rst:2776
#: ../../api.rst:2795 ../../api.rst:2814 ../../api.rst:2834 ../../api.rst:2854
#: ../../api.rst:2874 ../../api.rst:2892 ../../api.rst:2910 ../../api.rst:2928
msgid "Possible attributes for :class:`AuditLogDiff`:"
msgstr ""

#: ../../api.rst:2236
msgid ":attr:`~AuditLogDiff.afk_channel`"
msgstr ""

#: ../../api.rst:2237
msgid ":attr:`~AuditLogDiff.system_channel`"
msgstr ""

#: ../../api.rst:2238
msgid ":attr:`~AuditLogDiff.afk_timeout`"
msgstr ""

#: ../../api.rst:2239
msgid ":attr:`~AuditLogDiff.default_message_notifications`"
msgstr ""

#: ../../api.rst:2240
msgid ":attr:`~AuditLogDiff.explicit_content_filter`"
msgstr ""

#: ../../api.rst:2241
msgid ":attr:`~AuditLogDiff.mfa_level`"
msgstr ""

#: ../../api.rst:2242 ../../api.rst:2262 ../../api.rst:2281 ../../api.rst:2303
#: ../../api.rst:2474 ../../api.rst:2494 ../../api.rst:2509 ../../api.rst:2563
#: ../../api.rst:2579 ../../api.rst:2592 ../../api.rst:2604 ../../api.rst:2615
#: ../../api.rst:2626 ../../api.rst:2759 ../../api.rst:2778 ../../api.rst:2797
#: ../../api.rst:2816 ../../api.rst:2836 ../../api.rst:2856 ../../api.rst:2876
#: ../../api.rst:2894 ../../api.rst:2912
msgid ":attr:`~AuditLogDiff.name`"
msgstr ""

#: ../../api.rst:2243
msgid ":attr:`~AuditLogDiff.owner`"
msgstr ""

#: ../../api.rst:2244
msgid ":attr:`~AuditLogDiff.splash`"
msgstr ""

#: ../../api.rst:2245
msgid ":attr:`~AuditLogDiff.discovery_splash`"
msgstr ""

#: ../../api.rst:2246
msgid ":attr:`~AuditLogDiff.icon`"
msgstr ""

#: ../../api.rst:2247
msgid ":attr:`~AuditLogDiff.banner`"
msgstr ""

#: ../../api.rst:2248
msgid ":attr:`~AuditLogDiff.vanity_url_code`"
msgstr ""

#: ../../api.rst:2252
msgid "A new channel was created."
msgstr ""

#: ../../api.rst:2254
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is "
"either a :class:`abc.GuildChannel` or :class:`Object` with an ID."
msgstr ""

#: ../../api.rst:2257
msgid ""
"A more filled out object in the :class:`Object` case can be found by "
"using :attr:`~AuditLogEntry.after`."
msgstr ""

#: ../../api.rst:2263 ../../api.rst:2282 ../../api.rst:2304 ../../api.rst:2325
#: ../../api.rst:2341 ../../api.rst:2356 ../../api.rst:2761 ../../api.rst:2780
#: ../../api.rst:2799
msgid ":attr:`~AuditLogDiff.type`"
msgstr ""

#: ../../api.rst:2264 ../../api.rst:2284 ../../api.rst:2305
msgid ":attr:`~AuditLogDiff.overwrites`"
msgstr ""

#: ../../api.rst:2268
msgid "A channel was updated. Things that trigger this include:"
msgstr ""

#: ../../api.rst:2270
msgid "The channel name or topic was changed"
msgstr ""

#: ../../api.rst:2271
msgid "The channel bitrate was changed"
msgstr ""

#: ../../api.rst:2273 ../../api.rst:2311
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`abc.GuildChannel` or :class:`Object` with an ID."
msgstr ""

#: ../../api.rst:2276
msgid ""
"A more filled out object in the :class:`Object` case can be found by "
"using :attr:`~AuditLogEntry.after` or :attr:`~AuditLogEntry.before`."
msgstr ""

#: ../../api.rst:2283
msgid ":attr:`~AuditLogDiff.position`"
msgstr ""

#: ../../api.rst:2285 ../../api.rst:2723 ../../api.rst:2738
msgid ":attr:`~AuditLogDiff.topic`"
msgstr ""

#: ../../api.rst:2286
msgid ":attr:`~AuditLogDiff.bitrate`"
msgstr ""

#: ../../api.rst:2287
msgid ":attr:`~AuditLogDiff.rtc_region`"
msgstr ""

#: ../../api.rst:2288
msgid ":attr:`~AuditLogDiff.video_quality_mode`"
msgstr ""

#: ../../api.rst:2289
msgid ":attr:`~AuditLogDiff.default_auto_archive_duration`"
msgstr ""

#: ../../api.rst:2293
msgid "A channel was deleted."
msgstr ""

#: ../../api.rst:2295
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is an "
":class:`Object` with an ID."
msgstr ""

#: ../../api.rst:2298
msgid ""
"A more filled out object can be found by using the "
":attr:`~AuditLogEntry.before` object."
msgstr ""

#: ../../api.rst:2309
msgid "A channel permission overwrite was created."
msgstr ""

#: ../../api.rst:2314
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.extra` is "
"either a :class:`Role` or :class:`Member`. If the object is not found "
"then it is a :class:`Object` with an ID being filled, a name, and a "
"``type`` attribute set to either ``'role'`` or ``'member'`` to help "
"dictate what type of ID it is."
msgstr ""

#: ../../api.rst:2322 ../../api.rst:2338 ../../api.rst:2353
msgid ":attr:`~AuditLogDiff.deny`"
msgstr ""

#: ../../api.rst:2323 ../../api.rst:2339 ../../api.rst:2354
msgid ":attr:`~AuditLogDiff.allow`"
msgstr ""

#: ../../api.rst:2324 ../../api.rst:2340 ../../api.rst:2355
msgid ":attr:`~AuditLogDiff.id`"
msgstr ""

#: ../../api.rst:2329
msgid ""
"A channel permission overwrite was changed, this is typically when the "
"permission values change."
msgstr ""

#: ../../api.rst:2332 ../../api.rst:2347
msgid ""
"See :attr:`overwrite_create` for more information on how the "
":attr:`~AuditLogEntry.target` and :attr:`~AuditLogEntry.extra` fields are"
" set."
msgstr ""

#: ../../api.rst:2345
msgid "A channel permission overwrite was deleted."
msgstr ""

#: ../../api.rst:2360
msgid "A member was kicked."
msgstr ""

#: ../../api.rst:2362
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`User` who got kicked."
msgstr ""

#: ../../api.rst:2365 ../../api.rst:2380 ../../api.rst:2389 ../../api.rst:2398
msgid "When this is the action, :attr:`~AuditLogEntry.changes` is empty."
msgstr ""

#: ../../api.rst:2369
msgid "A member prune was triggered."
msgstr ""

#: ../../api.rst:2371
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is set"
" to ``None``."
msgstr ""

#: ../../api.rst:2374 ../../api.rst:2433 ../../api.rst:2636 ../../api.rst:2663
#: ../../api.rst:2678
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.extra` is set "
"to an unspecified proxy object with two attributes:"
msgstr ""

#: ../../api.rst:2377
msgid "``delete_members_days``: An integer specifying how far the prune was."
msgstr ""

#: ../../api.rst:2378
msgid "``members_removed``: An integer specifying how many members were removed."
msgstr ""

#: ../../api.rst:2384
msgid "A member was banned."
msgstr ""

#: ../../api.rst:2386
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`User` who got banned."
msgstr ""

#: ../../api.rst:2393
msgid "A member was unbanned."
msgstr ""

#: ../../api.rst:2395
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`User` who got unbanned."
msgstr ""

#: ../../api.rst:2402
msgid "A member has updated. This triggers in the following situations:"
msgstr ""

#: ../../api.rst:2404
msgid "A nickname was changed"
msgstr ""

#: ../../api.rst:2405
msgid "They were server muted or deafened (or it was undone)"
msgstr ""

#: ../../api.rst:2407
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`Member` or :class:`User` who got updated."
msgstr ""

#: ../../api.rst:2412
msgid ":attr:`~AuditLogDiff.nick`"
msgstr ""

#: ../../api.rst:2413
msgid ":attr:`~AuditLogDiff.mute`"
msgstr ""

#: ../../api.rst:2414
msgid ":attr:`~AuditLogDiff.deaf`"
msgstr ""

#: ../../api.rst:2418
msgid ""
"A member's role has been updated. This triggers when a member either "
"gains a role or loses a role."
msgstr ""

#: ../../api.rst:2421
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`Member` or :class:`User` who got the role."
msgstr ""

#: ../../api.rst:2426
msgid ":attr:`~AuditLogDiff.roles`"
msgstr ""

#: ../../api.rst:2430
msgid ""
"A member's voice channel has been updated. This triggers when a member is"
" moved to a different voice channel."
msgstr ""

#: ../../api.rst:2436
msgid ""
"``channel``: A :class:`TextChannel` or :class:`Object` with the channel "
"ID where the members were moved."
msgstr ""

#: ../../api.rst:2437
msgid "``count``: An integer specifying how many members were moved."
msgstr ""

#: ../../api.rst:2443
msgid ""
"A member's voice state has changed. This triggers when a member is force "
"disconnected from voice."
msgstr ""

#: ../../api.rst:2446 ../../api.rst:2649
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.extra` is set "
"to an unspecified proxy object with one attribute:"
msgstr ""

#: ../../api.rst:2449
msgid "``count``: An integer specifying how many members were disconnected."
msgstr ""

#: ../../api.rst:2455
msgid "A bot was added to the guild."
msgstr ""

#: ../../api.rst:2457
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`Member` or :class:`User` which was added to the guild."
msgstr ""

#: ../../api.rst:2464
msgid "A new role was created."
msgstr ""

#: ../../api.rst:2466 ../../api.rst:2486 ../../api.rst:2501
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`Role` or a :class:`Object` with the ID."
msgstr ""

#: ../../api.rst:2471 ../../api.rst:2491 ../../api.rst:2506
msgid ":attr:`~AuditLogDiff.colour`"
msgstr ""

#: ../../api.rst:2472 ../../api.rst:2492 ../../api.rst:2507
msgid ":attr:`~AuditLogDiff.mentionable`"
msgstr ""

#: ../../api.rst:2473 ../../api.rst:2493 ../../api.rst:2508
msgid ":attr:`~AuditLogDiff.hoist`"
msgstr ""

#: ../../api.rst:2475 ../../api.rst:2495 ../../api.rst:2510
msgid ":attr:`~AuditLogDiff.permissions`"
msgstr ""

#: ../../api.rst:2479
msgid "A role was updated. This triggers in the following situations:"
msgstr ""

#: ../../api.rst:2481
msgid "The name has changed"
msgstr ""

#: ../../api.rst:2482
msgid "The permissions have changed"
msgstr ""

#: ../../api.rst:2483
msgid "The colour has changed"
msgstr ""

#: ../../api.rst:2484
msgid "Its hoist/mentionable state has changed"
msgstr ""

#: ../../api.rst:2499
msgid "A role was deleted."
msgstr ""

#: ../../api.rst:2514
msgid "An invite was created."
msgstr ""

#: ../../api.rst:2516
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`Invite` that was created."
msgstr ""

#: ../../api.rst:2521 ../../api.rst:2545
msgid ":attr:`~AuditLogDiff.max_age`"
msgstr ""

#: ../../api.rst:2522 ../../api.rst:2546
msgid ":attr:`~AuditLogDiff.code`"
msgstr ""

#: ../../api.rst:2523 ../../api.rst:2547
msgid ":attr:`~AuditLogDiff.temporary`"
msgstr ""

#: ../../api.rst:2524 ../../api.rst:2548
msgid ":attr:`~AuditLogDiff.inviter`"
msgstr ""

#: ../../api.rst:2525 ../../api.rst:2549 ../../api.rst:2562 ../../api.rst:2578
#: ../../api.rst:2591 ../../api.rst:2818 ../../api.rst:2838 ../../api.rst:2858
msgid ":attr:`~AuditLogDiff.channel`"
msgstr ""

#: ../../api.rst:2526 ../../api.rst:2550
msgid ":attr:`~AuditLogDiff.uses`"
msgstr ""

#: ../../api.rst:2527 ../../api.rst:2551
msgid ":attr:`~AuditLogDiff.max_uses`"
msgstr ""

#: ../../api.rst:2531
msgid "An invite was updated."
msgstr ""

#: ../../api.rst:2533
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`Invite` that was updated."
msgstr ""

#: ../../api.rst:2538
msgid "An invite was deleted."
msgstr ""

#: ../../api.rst:2540
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`Invite` that was deleted."
msgstr ""

#: ../../api.rst:2555
msgid "A webhook was created."
msgstr ""

#: ../../api.rst:2557 ../../api.rst:2573 ../../api.rst:2586
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`Object` with the webhook ID."
msgstr ""

#: ../../api.rst:2564 ../../api.rst:2593
msgid ":attr:`~AuditLogDiff.type` (always set to ``1`` if so)"
msgstr ""

#: ../../api.rst:2568
msgid "A webhook was updated. This trigger in the following situations:"
msgstr ""

#: ../../api.rst:2570
msgid "The webhook name changed"
msgstr ""

#: ../../api.rst:2571
msgid "The webhook channel changed"
msgstr ""

#: ../../api.rst:2580
msgid ":attr:`~AuditLogDiff.avatar`"
msgstr ""

#: ../../api.rst:2584
msgid "A webhook was deleted."
msgstr ""

#: ../../api.rst:2597
msgid "An emoji was created."
msgstr ""

#: ../../api.rst:2599 ../../api.rst:2610
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`Emoji` or :class:`Object` with the emoji ID."
msgstr ""

#: ../../api.rst:2608
msgid "An emoji was updated. This triggers when the name has changed."
msgstr ""

#: ../../api.rst:2619
msgid "An emoji was deleted."
msgstr ""

#: ../../api.rst:2621
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`Object` with the emoji ID."
msgstr ""

#: ../../api.rst:2630
msgid ""
"A message was deleted by a moderator. Note that this only triggers if the"
" message was deleted by someone other than the author."
msgstr ""

#: ../../api.rst:2633
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`Member` or :class:`User` who had their message deleted."
msgstr ""

#: ../../api.rst:2639 ../../api.rst:2652
msgid "``count``: An integer specifying how many messages were deleted."
msgstr ""

#: ../../api.rst:2640
msgid ""
"``channel``: A :class:`TextChannel` or :class:`Object` with the channel "
"ID where the message got deleted."
msgstr ""

#: ../../api.rst:2644
msgid "Messages were bulk deleted by a moderator."
msgstr ""

#: ../../api.rst:2646
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`TextChannel` or :class:`Object` with the ID of the channel that "
"was purged."
msgstr ""

#: ../../api.rst:2658
msgid "A message was pinned in a channel."
msgstr ""

#: ../../api.rst:2660
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`Member` or :class:`User` who had their message pinned."
msgstr ""

#: ../../api.rst:2666
msgid ""
"``channel``: A :class:`TextChannel` or :class:`Object` with the channel "
"ID where the message was pinned."
msgstr ""

#: ../../api.rst:2667
msgid "``message_id``: the ID of the message which was pinned."
msgstr ""

#: ../../api.rst:2673
msgid "A message was unpinned in a channel."
msgstr ""

#: ../../api.rst:2675
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`Member` or :class:`User` who had their message unpinned."
msgstr ""

#: ../../api.rst:2681
msgid ""
"``channel``: A :class:`TextChannel` or :class:`Object` with the channel "
"ID where the message was unpinned."
msgstr ""

#: ../../api.rst:2682
msgid "``message_id``: the ID of the message which was unpinned."
msgstr ""

#: ../../api.rst:2688
msgid "A guild integration was created."
msgstr ""

#: ../../api.rst:2690
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`Object` with the integration ID of the integration which was "
"created."
msgstr ""

#: ../../api.rst:2697
msgid "A guild integration was updated."
msgstr ""

#: ../../api.rst:2699
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`Object` with the integration ID of the integration which was "
"updated."
msgstr ""

#: ../../api.rst:2706
msgid "A guild integration was deleted."
msgstr ""

#: ../../api.rst:2708
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`Object` with the integration ID of the integration which was "
"deleted."
msgstr ""

#: ../../api.rst:2715
msgid "A stage instance was started."
msgstr ""

#: ../../api.rst:2717
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`StageInstance` or :class:`Object` with the ID of the stage "
"instance which was created."
msgstr ""

#: ../../api.rst:2724 ../../api.rst:2739 ../../api.rst:2819 ../../api.rst:2839
#: ../../api.rst:2859
msgid ":attr:`~AuditLogDiff.privacy_level`"
msgstr ""

#: ../../api.rst:2730
msgid "A stage instance was updated."
msgstr ""

#: ../../api.rst:2732
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`StageInstance` or :class:`Object` with the ID of the stage "
"instance which was updated."
msgstr ""

#: ../../api.rst:2745
msgid "A stage instance was ended."
msgstr ""

#: ../../api.rst:2751
msgid "A sticker was created."
msgstr ""

#: ../../api.rst:2753 ../../api.rst:2772 ../../api.rst:2791
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`GuildSticker` or :class:`Object` with the ID of the sticker "
"which was updated."
msgstr ""

#: ../../api.rst:2760 ../../api.rst:2779 ../../api.rst:2798
msgid ":attr:`~AuditLogDiff.emoji`"
msgstr ""

#: ../../api.rst:2762 ../../api.rst:2781 ../../api.rst:2800
msgid ":attr:`~AuditLogDiff.format_type`"
msgstr ""

#: ../../api.rst:2763 ../../api.rst:2782 ../../api.rst:2801 ../../api.rst:2817
#: ../../api.rst:2837 ../../api.rst:2857
msgid ":attr:`~AuditLogDiff.description`"
msgstr ""

#: ../../api.rst:2764 ../../api.rst:2783 ../../api.rst:2802
msgid ":attr:`~AuditLogDiff.available`"
msgstr ""

#: ../../api.rst:2770
msgid "A sticker was updated."
msgstr ""

#: ../../api.rst:2789
msgid "A sticker was deleted."
msgstr ""

#: ../../api.rst:2808
msgid "A scheduled event was created."
msgstr ""

#: ../../api.rst:2810 ../../api.rst:2830 ../../api.rst:2850
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`ScheduledEvent` or :class:`Object` with the ID of the thread "
"which was deleted."
msgstr ""

#: ../../api.rst:2820 ../../api.rst:2840 ../../api.rst:2860
msgid ":attr:`~discord.ScheduledEvent.location`"
msgstr ""

#: ../../api.rst:2821 ../../api.rst:2841 ../../api.rst:2861
msgid ":attr:`~discord.ScheduledEvent.status`"
msgstr ""

#: ../../api.rst:2822 ../../api.rst:2842 ../../api.rst:2862
msgid ":attr:`~discord.ScheduledEventLocation.type`"
msgstr ""

#: ../../api.rst:2828
msgid "A scheduled event was updated."
msgstr ""

#: ../../api.rst:2848
msgid "A scheduled event was deleted."
msgstr ""

#: ../../api.rst:2868
msgid "A thread was created."
msgstr ""

#: ../../api.rst:2870
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`Thread` or :class:`Object` with the ID of the thread which was "
"created."
msgstr ""

#: ../../api.rst:2877 ../../api.rst:2895 ../../api.rst:2913
msgid ":attr:`~AuditLogDiff.archived`"
msgstr ""

#: ../../api.rst:2878 ../../api.rst:2896 ../../api.rst:2914
msgid ":attr:`~AuditLogDiff.locked`"
msgstr ""

#: ../../api.rst:2879 ../../api.rst:2897 ../../api.rst:2915
msgid ":attr:`~AuditLogDiff.auto_archive_duration`"
msgstr ""

#: ../../api.rst:2880 ../../api.rst:2898 ../../api.rst:2916
msgid ":attr:`~AuditLogDiff.invitable`"
msgstr ""

#: ../../api.rst:2886
msgid "A thread was updated."
msgstr ""

#: ../../api.rst:2888
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`Thread` or :class:`Object` with the ID of the thread which was "
"updated."
msgstr ""

#: ../../api.rst:2904
msgid "A thread was deleted."
msgstr ""

#: ../../api.rst:2906
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is the"
" :class:`Thread` or :class:`Object` with the ID of the thread which was "
"deleted."
msgstr ""

#: ../../api.rst:2922
msgid "An application command's permissions were updated."
msgstr ""

#: ../../api.rst:2924
msgid ""
"When this is the action, the type of :attr:`~AuditLogEntry.target` is an "
":class:`Object` with the ID of the command that had it's permissions "
"edited."
msgstr ""

#: ../../api.rst:2930
msgid ":attr:`~AuditLogDiff.command_id`"
msgstr ""

#: ../../api.rst:2937
msgid "Represents the category that the :class:`AuditLogAction` belongs to."
msgstr ""

#: ../../api.rst:2939
msgid "This can be retrieved via :attr:`AuditLogEntry.category`."
msgstr ""

#: ../../api.rst:2943
msgid "The action is the creation of something."
msgstr ""

#: ../../api.rst:2947
msgid "The action is the deletion of something."
msgstr ""

#: ../../api.rst:2951
msgid "The action is the update of something."
msgstr ""

#: ../../api.rst:2955
msgid ""
"Represents the membership state of a team member retrieved through "
":func:`Client.application_info`."
msgstr ""

#: ../../api.rst:2961
msgid "Represents an invited member."
msgstr ""

#: ../../api.rst:2965
msgid "Represents a member currently in the team."
msgstr ""

#: ../../api.rst:2969
msgid "Represents the type of webhook that can be received."
msgstr ""

#: ../../api.rst:2975
msgid "Represents a webhook that can post messages to channels with a token."
msgstr ""

#: ../../api.rst:2979
msgid ""
"Represents a webhook that is internally managed by Discord, used for "
"following channels."
msgstr ""

#: ../../api.rst:2983
msgid "Represents a webhook that is used for interactions or applications."
msgstr ""

#: ../../api.rst:2989
msgid ""
"Represents the behaviour the :class:`Integration` should perform when a "
"user's subscription has finished."
msgstr ""

#: ../../api.rst:2992
msgid "There is an alias for this called ``ExpireBehavior``."
msgstr ""

#: ../../api.rst:2998
msgid ""
"This will remove the :attr:`StreamIntegration.role` from the user when "
"their subscription is finished."
msgstr ""

#: ../../api.rst:3003
msgid "This will kick the user when their subscription is finished."
msgstr ""

#: ../../api.rst:3007
msgid "Represents the default avatar of a Discord :class:`User`"
msgstr ""

#: ../../api.rst:3011
msgid ""
"Represents the default avatar with the color blurple. See also "
":attr:`Colour.blurple`"
msgstr ""

#: ../../api.rst:3015
msgid ""
"Represents the default avatar with the color grey. See also "
":attr:`Colour.greyple`"
msgstr ""

#: ../../api.rst:3019
msgid "An alias for :attr:`grey`."
msgstr ""

#: ../../api.rst:3022
msgid ""
"Represents the default avatar with the color green. See also "
":attr:`Colour.green`"
msgstr ""

#: ../../api.rst:3026
msgid ""
"Represents the default avatar with the color orange. See also "
":attr:`Colour.orange`"
msgstr ""

#: ../../api.rst:3030
msgid ""
"Represents the default avatar with the color red. See also "
":attr:`Colour.red`"
msgstr ""

#: ../../api.rst:3035
msgid "Represents the type of sticker."
msgstr ""

#: ../../api.rst:3041
msgid "Represents a standard sticker that all Nitro users can use."
msgstr ""

#: ../../api.rst:3045
msgid "Represents a custom sticker created in a guild."
msgstr ""

#: ../../api.rst:3049
msgid "Represents the type of sticker images."
msgstr ""

#: ../../api.rst:3055
msgid "Represents a sticker with a png image."
msgstr ""

#: ../../api.rst:3059
msgid "Represents a sticker with an apng image."
msgstr ""

#: ../../api.rst:3063
msgid "Represents a sticker with a lottie image."
msgstr ""

#: ../../api.rst:3067
msgid "Represents the invite type for voice channel invites."
msgstr ""

#: ../../api.rst:3073
msgid "The invite doesn't target anyone or anything."
msgstr ""

#: ../../api.rst:3077
msgid "A stream invite that targets a user."
msgstr ""

#: ../../api.rst:3081
msgid "A invite that targets an embedded application."
msgstr ""

#: ../../api.rst:3083
msgid "Note that your bot won't be verified if you provide users access to this"
msgstr ""

#: ../../api.rst:3087
msgid "Represents the camera video quality mode for voice channel participants."
msgstr ""

#: ../../api.rst:3093
msgid "Represents auto camera video quality."
msgstr ""

#: ../../api.rst:3097
msgid "Represents full camera video quality."
msgstr ""

#: ../../api.rst:3101
msgid ""
"Represents a stage instance's privacy level. Stage event privacy levels "
"can only have 1 possible value at the moment so this shouldn't really be "
"used."
msgstr ""

#: ../../api.rst:3109
msgid "The stage instance can only be joined by members of the guild."
msgstr ""

#: ../../api.rst:3113
msgid "Alias for :attr:`.closed`"
msgstr ""

#: ../../api.rst:3117
msgid "Represents the NSFW level of a guild."
msgstr ""

#: ../../api.rst:3125
msgid "Checks if two NSFW levels are equal."
msgstr ""

#: ../../api.rst:3128
msgid "Checks if two NSFW levels are not equal."
msgstr ""

#: ../../api.rst:3131
msgid "Checks if a NSFW level is higher than another."
msgstr ""

#: ../../api.rst:3134
msgid "Checks if a NSFW level is lower than another."
msgstr ""

#: ../../api.rst:3137
msgid "Checks if a NSFW level is higher or equal to another."
msgstr ""

#: ../../api.rst:3140
msgid "Checks if a NSFW level is lower or equal to another."
msgstr ""

#: ../../api.rst:3144
msgid "The guild has not been categorised yet."
msgstr ""

#: ../../api.rst:3148
msgid "The guild contains NSFW content."
msgstr ""

#: ../../api.rst:3152
msgid "The guild does not contain any NSFW content."
msgstr ""

#: ../../api.rst:3156
msgid "The guild may contain NSFW content."
msgstr ""

#: ../../api.rst:3160
msgid "Represents an embedded activity application."
msgstr ""

#: ../../api.rst:3162
msgid "Some might be boost-only or gated."
msgstr ""

#: ../../api.rst:3166
msgid ""
"Discord said that they won't verify bots who gives access to embedded "
"activities."
msgstr ""

#: ../../api.rst:3168
msgid ""
"Read more here: "
"https://discord.com/channels/613425648685547541/697236247739105340/901153332075315321."
msgstr ""

#: ../../api.rst:3174
msgid "Represents the embedded application Awkword."
msgstr ""

#: ../../api.rst:3178
msgid "Represents the embedded application Betrayal.io"
msgstr ""

#: ../../api.rst:3182
msgid "Represents the embedded application Checkers in the Park Prod."
msgstr ""

#: ../../api.rst:3186
msgid "Represents the embedded application Checkers in the Park Development."
msgstr ""

#: ../../api.rst:3190
msgid "Represents the embedded application Checkers in the Park Staging."
msgstr ""

#: ../../api.rst:3194
msgid "Represents the embedded application Checkers in the Park QA."
msgstr ""

#: ../../api.rst:3198
msgid "Represents the embedded application Chess in the Park."
msgstr ""

#: ../../api.rst:3202
msgid "Represents the embedded application Chess in the Park Development."
msgstr ""

#: ../../api.rst:3206
msgid "Represents the embedded application Chess in the Park Staging."
msgstr ""

#: ../../api.rst:3210
msgid "Represents the embedded application Chess in the Park QA."
msgstr ""

#: ../../api.rst:3214
msgid "Represents the embedded application Doodle Crew."
msgstr ""

#: ../../api.rst:3218
msgid "Represents the embedded application Fishington.io"
msgstr ""

#: ../../api.rst:3222
msgid "Represents the embedded application Letter Tile."
msgstr ""

#: ../../api.rst:3226
msgid "Represents the embedded application Ocho."
msgstr ""

#: ../../api.rst:3230
msgid "Represents the embedded application Ocho Development."
msgstr ""

#: ../../api.rst:3234
msgid "Represents the embedded application Ocho Staging."
msgstr ""

#: ../../api.rst:3238
msgid "Represents the embedded application Ocho QA."
msgstr ""

#: ../../api.rst:3242
msgid "Represents the embedded application Poker Night Staging."
msgstr ""

#: ../../api.rst:3246
msgid "Represents the embedded application Poker Night."
msgstr ""

#: ../../api.rst:3250
msgid "Represents the embedded application Poker QA."
msgstr ""

#: ../../api.rst:3254
msgid "Represents the embedded application Putts."
msgstr ""

#: ../../api.rst:3258
msgid "Represents the embedded application Sketchy Artist."
msgstr ""

#: ../../api.rst:3262
msgid "Represents the embedded application Sketchy Artist development version."
msgstr ""

#: ../../api.rst:3266
msgid "Represents the embedded application Spell Cast."
msgstr ""

#: ../../api.rst:3270
msgid ""
"Same as :attr:`~EmbeddedActivity.youtube_together` with remote feature "
"which allows guild admins to limit the playlist access."
msgstr ""

#: ../../api.rst:3274
msgid "Development version of :attr:`.watch_together`."
msgstr ""

#: ../../api.rst:3278
msgid "Represents the embedded application word snacks."
msgstr ""

#: ../../api.rst:3282
msgid ""
"Represents the embedded application word snacks. This is development "
"version of :attr:`.word_snacks`"
msgstr ""

#: ../../api.rst:3286
msgid "Represents the embedded application Youtube Together."
msgstr ""

#: ../../api.rst:3290
msgid "Represents the status of a scheduled event."
msgstr ""

#: ../../api.rst:3296
msgid "The scheduled event hasn't started or been canceled yet."
msgstr ""

#: ../../api.rst:3300
msgid "The scheduled event is in progress."
msgstr ""

#: ../../api.rst:3304
msgid "The scheduled event is over."
msgstr ""

#: ../../api.rst:3308
msgid "The scheduled event has been canceled before it can start."
msgstr ""

#: ../../api.rst:3312
msgid "Alias to :attr:`canceled`."
msgstr ""

#: ../../api.rst:3316
msgid ""
"Represents a scheduled event location type (otherwise known as the entity"
" type on the API)."
msgstr ""

#: ../../api.rst:3322
msgid "Represents a scheduled event that is happening in a :class:`StageChannel`."
msgstr ""

#: ../../api.rst:3326
msgid "Represents a scheduled event that is happening in a :class:`VoiceChannel`."
msgstr ""

#: ../../api.rst:3330
msgid "Represents a generic location as a :class:`str`."
msgstr ""

#: ../../api.rst:3334
msgid ""
"Represents the privacy level of a scheduled event. Scheduled event "
"privacy levels can only have 1 possible value at the moment so this "
"shouldn't really be used."
msgstr ""

#: ../../api.rst:3340
msgid ""
"Represents a scheduled event that is only available to members inside the"
" guild."
msgstr ""

#: ../../api.rst:3344
msgid "Async Iterator"
msgstr ""

#: ../../api.rst:3346
msgid ""
"Some API functions return an \"async iterator\". An async iterator is "
"something that is capable of being used in an :ref:`async for statement "
"<py:async for>`."
msgstr ""

#: ../../api.rst:3349
msgid "These async iterators can be used as follows: ::"
msgstr ""

#: ../../api.rst:3354
msgid ""
"Certain utilities make working with async iterators easier, detailed "
"below."
msgstr ""

#: ../../api.rst:3358
msgid ""
"Represents the \"AsyncIterator\" concept. Note that no such class exists,"
" it is purely abstract."
msgstr ""

#: ../../api.rst:3365
msgid "Iterates over the contents of the async iterator."
msgstr ""

#: ../../api.rst:3373
msgid ""
"Advances the iterator by one, if possible. If no more items are found "
"then this raises :exc:`NoMoreItems`."
msgstr ""

#: ../../api.rst:3381
msgid "Similar to :func:`utils.get` except run over the async iterator."
msgstr ""

#: ../../api.rst:3383
msgid "Getting the last message by a user named 'Dave' or ``None``: ::"
msgstr ""

#: ../../api.rst:3392
msgid "Similar to :func:`utils.find` except run over the async iterator."
msgstr ""

#: ../../api.rst:3394
msgid ""
"Unlike :func:`utils.find`\\, the predicate provided can be a "
"|coroutine_link|_."
msgstr ""

#: ../../api.rst:3397
msgid "Getting the last audit log with a reason or ``None``: ::"
msgstr ""

#: ../../api.rst:3404
msgid "The predicate to use. Could be a |coroutine_link|_."
msgstr ""

#: ../../api.rst:3405
msgid "The first element that returns ``True`` for the predicate or ``None``."
msgstr ""

#: ../../api.rst:3412
msgid "Flattens the async iterator into a :class:`list` with all the elements."
msgstr ""

#: ../../api.rst:3414
msgid "A list of every element in the async iterator."
msgstr ""

#: ../../api.rst:3419
msgid ""
"Collects items into chunks of up to a given maximum size. Another "
":class:`AsyncIterator` is returned which collects items into "
":class:`list`\\s of a given size. The maximum chunk size must be a "
"positive integer."
msgstr ""

#: ../../api.rst:3425
msgid "Collecting groups of users: ::"
msgstr ""

#: ../../api.rst:3434
msgid "The size of individual chunks."
msgstr ""

#: ../../api.rst:3435 ../../api.rst:3453 ../../api.rst:3470
msgid ":class:`AsyncIterator`"
msgstr ""

#: ../../api.rst:3439
msgid ""
"This is similar to the built-in :func:`map <py:map>` function. Another "
":class:`AsyncIterator` is returned that executes the function on every "
"element it is iterating over. This function can either be a regular "
"function or a |coroutine_link|_."
msgstr ""

#: ../../api.rst:3444
msgid "Creating a content iterator: ::"
msgstr ""

#: ../../api.rst:3452
msgid "The function to call on every element. Could be a |coroutine_link|_."
msgstr ""

#: ../../api.rst:3457
msgid ""
"This is similar to the built-in :func:`filter <py:filter>` function. "
"Another :class:`AsyncIterator` is returned that filters over the original"
" async iterator. This predicate can be a regular function or a "
"|coroutine_link|_."
msgstr ""

#: ../../api.rst:3461
msgid "Getting messages by non-bot accounts: ::"
msgstr ""

#: ../../api.rst:3469
msgid "The predicate to call on every element. Could be a |coroutine_link|_."
msgstr ""

#: ../../api.rst:3475
msgid "Audit Log Data"
msgstr ""

#: ../../api.rst:3477
msgid ""
"Working with :meth:`Guild.audit_logs` is a complicated process with a lot"
" of machinery involved. The library attempts to make it easy to use and "
"friendly. In order to accomplish this goal, it must make use of a couple "
"of data classes that aid in this goal."
msgstr ""

#: ../../api.rst:3482
msgid "AuditLogEntry"
msgstr ""

#: discord.audit_logs.AuditLogEntry:1 of
msgid "Represents an Audit Log entry."
msgstr ""

#: discord.audit_logs.AuditLogEntry:3 of
msgid "You retrieve these via :meth:`Guild.audit_logs`."
msgstr ""

#: discord.audit_logs.AuditLogEntry:9 of
msgid "Checks if two entries are equal."
msgstr ""

#: discord.audit_logs.AuditLogEntry:13 of
msgid "Checks if two entries are not equal."
msgstr ""

#: discord.audit_logs.AuditLogEntry:17 of
msgid "Returns the entry's hash."
msgstr ""

#: discord.audit_logs.AuditLogEntry:19 of
msgid "Audit log entries are now comparable and hashable."
msgstr ""

#: discord.audit_logs.AuditLogEntry:24 of
msgid "The action that was done."
msgstr ""

#: discord.audit_logs.AuditLogEntry:26 of
msgid ":class:`AuditLogAction`"
msgstr ""

#: discord.audit_logs.AuditLogEntry:30 of
msgid ""
"The user who initiated this action. Usually a :class:`Member`\\, unless "
"gone then it's a :class:`User`."
msgstr ""

#: discord.audit_logs.AuditLogEntry:33 of
msgid ":class:`abc.User`"
msgstr ""

#: discord.audit_logs.AuditLogEntry:37 of
msgid "The entry ID."
msgstr ""

#: discord.audit_logs.AuditLogEntry:43 of
msgid ""
"The target that got changed. The exact type of this depends on the action"
" being done."
msgstr ""

#: discord.audit_logs.AuditLogEntry:46 discord.audit_logs.AuditLogEntry:61 of
msgid "Any"
msgstr ""

#: discord.audit_logs.AuditLogEntry:50 of
msgid "The reason this action was done."
msgstr ""

#: discord.audit_logs.AuditLogEntry:56 of
msgid ""
"Extra information that this entry has that might be useful. For most "
"actions, this is ``None``. However, in some cases it contains extra "
"information. See :class:`AuditLogAction` for which actions have this "
"field filled out."
msgstr ""

#: ../../docstring discord.AuditLogEntry.created_at:1 of
msgid "Returns the entry's creation time in UTC."
msgstr ""

#: ../../docstring discord.AuditLogEntry.category:1 of
msgid "The category of the action, if applicable."
msgstr ""

#: ../../docstring discord.AuditLogEntry.category:3 of
msgid "Optional[:class:`AuditLogActionCategory`]"
msgstr ""

#: ../../docstring discord.AuditLogEntry.changes:1 of
msgid "The list of changes this entry has."
msgstr ""

#: ../../docstring discord.AuditLogEntry.changes:3 of
msgid ":class:`AuditLogChanges`"
msgstr ""

#: ../../docstring discord.AuditLogEntry.before:1 of
msgid "The target's prior state."
msgstr ""

#: ../../docstring discord.AuditLogEntry.after:3 discord.AuditLogEntry.before:3
#: of
msgid ":class:`AuditLogDiff`"
msgstr ""

#: ../../docstring discord.AuditLogEntry.after:1 of
msgid "The target's subsequent state."
msgstr ""

#: ../../api.rst:3490
msgid "AuditLogChanges"
msgstr ""

#: ../../api.rst:3496
msgid "An audit log change set."
msgstr ""

#: ../../api.rst:3500
msgid "The old value. The attribute has the type of :class:`AuditLogDiff`."
msgstr ""

#: ../../api.rst:3502 ../../api.rst:3522
msgid ""
"Depending on the :class:`AuditLogActionCategory` retrieved by "
":attr:`~AuditLogEntry.category`\\, the data retrieved by this attribute "
"differs:"
msgstr ""

#: ../../api.rst:3507 ../../api.rst:3527
msgid "Category"
msgstr ""

#: ../../api.rst:3509 ../../api.rst:3529
msgid ":attr:`~AuditLogActionCategory.create`"
msgstr ""

#: ../../api.rst:3509
msgid "All attributes are set to ``None``."
msgstr ""

#: ../../api.rst:3511 ../../api.rst:3531
msgid ":attr:`~AuditLogActionCategory.delete`"
msgstr ""

#: ../../api.rst:3511
msgid "All attributes are set the value before deletion."
msgstr ""

#: ../../api.rst:3513 ../../api.rst:3533
msgid ":attr:`~AuditLogActionCategory.update`"
msgstr ""

#: ../../api.rst:3513
msgid "All attributes are set the value before updating."
msgstr ""

#: ../../api.rst:3515 ../../api.rst:3535
msgid "``None``"
msgstr ""

#: ../../api.rst:3515 ../../api.rst:3535
msgid "No attributes are set."
msgstr ""

#: ../../api.rst:3520
msgid "The new value. The attribute has the type of :class:`AuditLogDiff`."
msgstr ""

#: ../../api.rst:3529
msgid "All attributes are set to the created value"
msgstr ""

#: ../../api.rst:3531
msgid "All attributes are set to ``None``"
msgstr ""

#: ../../api.rst:3533
msgid "All attributes are set the value after updating."
msgstr ""

#: ../../api.rst:3539
msgid "AuditLogDiff"
msgstr ""

#: ../../api.rst:3545
msgid ""
"Represents an audit log \"change\" object. A change object has dynamic "
"attributes that depend on the type of action being done. Certain actions "
"map to certain attributes being set."
msgstr ""

#: ../../api.rst:3549
msgid ""
"Note that accessing an attribute that does not match the specified action"
" will lead to an attribute error."
msgstr ""

#: ../../api.rst:3552
msgid ""
"To get a list of attributes that have been set, you can iterate over "
"them. To see a list of all possible attributes that could be set based on"
" the action being done, check the documentation for "
":class:`AuditLogAction`, otherwise check the documentation below for all "
"attributes that are possible."
msgstr ""

#: ../../api.rst:3561
msgid "Returns an iterator over (attribute, value) tuple of this diff."
msgstr ""

#: ../../api.rst:3565
msgid "A name of something."
msgstr ""

#: ../../api.rst:3571
msgid "A guild's icon. See also :attr:`Guild.icon`."
msgstr ""

#: ../../api.rst:3573 ../../api.rst:3579 ../../api.rst:3585 ../../api.rst:3591
#: ../../api.rst:3899 discord.ClientUser.default_avatar:4
#: discord.ClientUser.display_avatar:7 discord.Member.display_avatar:9
#: discord.StickerPack.banner:3 discord.SyncWebhook.avatar:6
#: discord.User.default_avatar:4 discord.User.display_avatar:7
#: discord.Webhook.avatar:6 discord.WidgetMember.default_avatar:4
#: discord.WidgetMember.display_avatar:7 discord.asset.Asset.replace:15
#: discord.asset.Asset.with_format:9 discord.asset.Asset.with_size:9
#: discord.asset.Asset.with_static_format:12 of
msgid ":class:`Asset`"
msgstr ""

#: ../../api.rst:3577
msgid "The guild's invite splash. See also :attr:`Guild.splash`."
msgstr ""

#: ../../api.rst:3583
msgid "The guild's discovery splash. See also :attr:`Guild.discovery_splash`."
msgstr ""

#: ../../api.rst:3589
msgid "The guild's banner. See also :attr:`Guild.banner`."
msgstr ""

#: ../../api.rst:3595
msgid "The guild's owner. See also :attr:`Guild.owner`"
msgstr ""

#: ../../api.rst:3597
msgid "Union[:class:`Member`, :class:`User`]"
msgstr ""

#: ../../api.rst:3601
msgid "The guild's AFK channel."
msgstr ""

#: ../../api.rst:3603 ../../api.rst:3614
msgid ""
"If this could not be found, then it falls back to a :class:`Object` with "
"the ID being set."
msgstr ""

#: ../../api.rst:3606
msgid "See :attr:`Guild.afk_channel`."
msgstr ""

#: ../../api.rst:3608
msgid "Union[:class:`VoiceChannel`, :class:`Object`]"
msgstr ""

#: ../../api.rst:3612
msgid "The guild's system channel."
msgstr ""

#: ../../api.rst:3617
msgid "See :attr:`Guild.system_channel`."
msgstr ""

#: ../../api.rst:3619 ../../api.rst:3631 ../../api.rst:3643 ../../api.rst:3670
msgid "Union[:class:`TextChannel`, :class:`Object`]"
msgstr ""

#: ../../api.rst:3624
msgid "The guild's rules channel."
msgstr ""

#: ../../api.rst:3626 ../../api.rst:3638 ../../api.rst:3667
msgid ""
"If this could not be found then it falls back to a :class:`Object` with "
"the ID being set."
msgstr ""

#: ../../api.rst:3629
msgid "See :attr:`Guild.rules_channel`."
msgstr ""

#: ../../api.rst:3636
msgid "The guild's public updates channel."
msgstr ""

#: ../../api.rst:3641
msgid "See :attr:`Guild.public_updates_channel`."
msgstr ""

#: ../../api.rst:3647
msgid "The guild's AFK timeout. See :attr:`Guild.afk_timeout`."
msgstr ""

#: ../../api.rst:3653
msgid "The guild's MFA level. See :attr:`Guild.mfa_level`."
msgstr ""

#: ../../api.rst:3659
msgid "The guild's widget has been enabled or disabled."
msgstr ""

#: ../../api.rst:3665
msgid "The widget's channel."
msgstr ""

#: ../../api.rst:3674 discord.guild.Guild:117 of
msgid "The guild's verification level."
msgstr ""

#: ../../api.rst:3676
msgid "See also :attr:`Guild.verification_level`."
msgstr ""

#: ../../api.rst:3678 discord.guild.Guild:119
#: discord.invite.PartialInviteGuild:40 of
msgid ":class:`VerificationLevel`"
msgstr ""

#: ../../api.rst:3682
msgid "The guild's default notification level."
msgstr ""

#: ../../api.rst:3684
msgid "See also :attr:`Guild.default_notifications`."
msgstr ""

#: ../../api.rst:3686 discord.guild.Guild:131 of
msgid ":class:`NotificationLevel`"
msgstr ""

#: ../../api.rst:3690
msgid "The guild's content filter."
msgstr ""

#: ../../api.rst:3692
msgid "See also :attr:`Guild.explicit_content_filter`."
msgstr ""

#: ../../api.rst:3694 discord.guild.Guild:125 of
msgid ":class:`ContentFilter`"
msgstr ""

#: ../../api.rst:3698
msgid "The guild's default message notification setting."
msgstr ""

#: ../../api.rst:3704
msgid "The guild's vanity URL."
msgstr ""

#: ../../api.rst:3706
msgid "See also :meth:`Guild.vanity_invite` and :meth:`Guild.edit`."
msgstr ""

#: ../../api.rst:3712
msgid "The position of a :class:`Role` or :class:`abc.GuildChannel`."
msgstr ""

#: ../../api.rst:3718
msgid "The type of channel or sticker."
msgstr ""

#: ../../api.rst:3720
msgid "Union[:class:`ChannelType`, :class:`StickerType`]"
msgstr ""

#: ../../api.rst:3724
msgid "The topic of a :class:`TextChannel` or :class:`StageChannel`."
msgstr ""

#: ../../api.rst:3726
msgid "See also :attr:`TextChannel.topic` or :attr:`StageChannel.topic`."
msgstr ""

#: ../../api.rst:3732
msgid "The bitrate of a :class:`VoiceChannel`."
msgstr ""

#: ../../api.rst:3734
msgid "See also :attr:`VoiceChannel.bitrate`."
msgstr ""

#: ../../api.rst:3740
msgid ""
"A list of permission overwrite tuples that represents a target and a "
":class:`PermissionOverwrite` for said target."
msgstr ""

#: ../../api.rst:3743
msgid ""
"The first element is the object being targeted, which can either be a "
":class:`Member` or :class:`User` or :class:`Role`. If this object is not "
"found then it is a :class:`Object` with an ID being filled and a ``type``"
" attribute set to either ``'role'`` or ``'member'`` to help decide what "
"type of ID it is."
msgstr ""

#: ../../api.rst:3749
msgid "List[Tuple[target, :class:`PermissionOverwrite`]]"
msgstr ""

#: ../../api.rst:3753
msgid "The privacy level of the stage instance or scheduled event."
msgstr ""

#: ../../api.rst:3755
msgid "Union[:class:`StagePrivacyLevel`, :class:`ScheduledEventPrivacyLevel`]"
msgstr ""

#: ../../api.rst:3759
msgid "A list of roles being added or removed from a member."
msgstr ""

#: ../../api.rst:3761
msgid ""
"If a role is not found then it is a :class:`Object` with the ID and name "
"being filled in."
msgstr ""

#: ../../api.rst:3764 discord.AutoModRule.exempt_roles:7 of
msgid "List[Union[:class:`Role`, :class:`Object`]]"
msgstr ""

#: ../../api.rst:3768
msgid "The nickname of a member."
msgstr ""

#: ../../api.rst:3770
msgid "See also :attr:`Member.nick`"
msgstr ""

#: ../../api.rst:3776
msgid "Whether the member is being server deafened."
msgstr ""

#: ../../api.rst:3778
msgid "See also :attr:`VoiceState.deaf`."
msgstr ""

#: ../../api.rst:3784
msgid "Whether the member is being server muted."
msgstr ""

#: ../../api.rst:3786
msgid "See also :attr:`VoiceState.mute`."
msgstr ""

#: ../../api.rst:3792
msgid "The permissions of a role."
msgstr ""

#: ../../api.rst:3794
msgid "See also :attr:`Role.permissions`."
msgstr ""

#: ../../api.rst:3796 ../../api.rst:3885 ../../docstring
#: discord.Interaction.app_permissions:3 discord.Interaction.permissions:5
#: discord.Member.guild_permissions:11 discord.Role.permissions:3
#: discord.channel.DMChannel.permissions_for:17
#: discord.channel.GroupChannel.permissions_for:18 of
msgid ":class:`Permissions`"
msgstr ""

#: ../../api.rst:3801
msgid "The colour of a role."
msgstr ""

#: ../../api.rst:3803
msgid "See also :attr:`Role.colour`"
msgstr ""

#: ../../api.rst:3805 discord.ClientUser.color:6 discord.ClientUser.colour:6
#: discord.Member.color:7 discord.Member.colour:7 discord.Role.color:3
#: discord.Role.colour:3 discord.Spotify.color:5 discord.Spotify.colour:5
#: discord.User.color:6 discord.User.colour:6 discord.WidgetMember.color:6
#: discord.WidgetMember.colour:6 of
msgid ":class:`Colour`"
msgstr ""

#: ../../api.rst:3809
msgid "Whether the role is being hoisted or not."
msgstr ""

#: ../../api.rst:3811
msgid "See also :attr:`Role.hoist`"
msgstr ""

#: ../../api.rst:3817
msgid "Whether the role is mentionable or not."
msgstr ""

#: ../../api.rst:3819
msgid "See also :attr:`Role.mentionable`"
msgstr ""

#: ../../api.rst:3825
msgid "The invite's code."
msgstr ""

#: ../../api.rst:3827
msgid "See also :attr:`Invite.code`"
msgstr ""

#: ../../api.rst:3833
msgid "A guild channel."
msgstr ""

#: ../../api.rst:3835
msgid ""
"If the channel is not found then it is a :class:`Object` with the ID "
"being set. In some cases the channel name is also set."
msgstr ""

#: ../../api.rst:3838
msgid "Union[:class:`abc.GuildChannel`, :class:`Object`]"
msgstr ""

#: ../../api.rst:3842 discord.invite.Invite:101 of
msgid "The user who created the invite."
msgstr ""

#: ../../api.rst:3844
msgid "See also :attr:`Invite.inviter`."
msgstr ""

#: ../../api.rst:3846 discord.channel.DMChannel:27
#: discord.channel.GroupChannel:43 discord.emoji.Emoji:76
#: discord.integrations.IntegrationApplication:39 discord.invite.Invite:103
#: discord.invite.Invite:147 discord.scheduled_events.ScheduledEvent:84
#: discord.sticker.GuildSticker:60 of
msgid "Optional[:class:`User`]"
msgstr ""

#: ../../api.rst:3850
msgid "The invite's max uses."
msgstr ""

#: ../../api.rst:3852
msgid "See also :attr:`Invite.max_uses`."
msgstr ""

#: ../../api.rst:3858
msgid "The invite's current uses."
msgstr ""

#: ../../api.rst:3860
msgid "See also :attr:`Invite.uses`."
msgstr ""

#: ../../api.rst:3866
msgid "The invite's max age in seconds."
msgstr ""

#: ../../api.rst:3868
msgid "See also :attr:`Invite.max_age`."
msgstr ""

#: ../../api.rst:3874
msgid "If the invite is a temporary invite."
msgstr ""

#: ../../api.rst:3876
msgid "See also :attr:`Invite.temporary`."
msgstr ""

#: ../../api.rst:3883
msgid "The permissions being allowed or denied."
msgstr ""

#: ../../api.rst:3889
msgid "The ID of the object being changed."
msgstr ""

#: ../../api.rst:3895
msgid "The avatar of a member."
msgstr ""

#: ../../api.rst:3897
msgid "See also :attr:`User.avatar`."
msgstr ""

#: ../../api.rst:3903
msgid ""
"The number of seconds members have to wait before sending another message"
" in the channel."
msgstr ""

#: ../../api.rst:3906
msgid "See also :attr:`TextChannel.slowmode_delay`."
msgstr ""

#: ../../api.rst:3912
msgid ""
"The region for the voice channel’s voice communication. A value of "
"``None`` indicates automatic voice region detection."
msgstr ""

#: ../../api.rst:3915
msgid "See also :attr:`VoiceChannel.rtc_region`."
msgstr ""

#: ../../api.rst:3917
msgid ":class:`VoiceRegion`"
msgstr ""

#: ../../api.rst:3921 discord.channel.VoiceChannel:75
#: discord.channel.VoiceChannel.edit:37
#: discord.guild.Guild.create_voice_channel:25 of
msgid "The camera video quality for the voice channel's participants."
msgstr ""

#: ../../api.rst:3923
msgid "See also :attr:`VoiceChannel.video_quality_mode`."
msgstr ""

#: ../../api.rst:3925 discord.channel.StageChannel:85
#: discord.channel.VoiceChannel:79 of
msgid ":class:`VideoQualityMode`"
msgstr ""

#: ../../api.rst:3929
msgid "The format type of a sticker being changed."
msgstr ""

#: ../../api.rst:3931
msgid "See also :attr:`GuildSticker.format`"
msgstr ""

#: ../../api.rst:3933 discord.sticker.GuildSticker:41
#: discord.sticker.StandardSticker:47 discord.sticker.Sticker:47
#: discord.sticker.StickerItem:35 of
msgid ":class:`StickerFormatType`"
msgstr ""

#: ../../api.rst:3937
msgid "The name of the emoji that represents a sticker being changed."
msgstr ""

#: ../../api.rst:3939
msgid "See also :attr:`GuildSticker.emoji`"
msgstr ""

#: ../../api.rst:3945
msgid "The description of a sticker being changed."
msgstr ""

#: ../../api.rst:3947
msgid "See also :attr:`GuildSticker.description`"
msgstr ""

#: ../../api.rst:3953
msgid "The availability of a sticker being changed."
msgstr ""

#: ../../api.rst:3955
msgid "See also :attr:`GuildSticker.available`"
msgstr ""

#: ../../api.rst:3961
msgid "The thread is now archived."
msgstr ""

#: ../../api.rst:3967
msgid "The thread is being locked or unlocked."
msgstr ""

#: ../../api.rst:3973
msgid "The thread's auto archive duration being changed."
msgstr ""

#: ../../api.rst:3975
msgid "See also :attr:`Thread.auto_archive_duration`"
msgstr ""

#: ../../api.rst:3981
msgid "The default auto archive duration for newly created threads being changed."
msgstr ""

#: ../../api.rst:3987
msgid "Non-moderators can now add other non-moderators to this thread."
msgstr ""

#: ../../api.rst:3993
msgid "This command's permissions were updated."
msgstr ""

#: ../../api.rst:4001
msgid "Webhook Support"
msgstr ""

#: ../../api.rst:4003
msgid ""
"Pycord offers support for creating, editing, and executing webhooks "
"through the :class:`Webhook` class."
msgstr ""

#: ../../api.rst:4006
msgid "Webhook"
msgstr ""

#: discord.webhook.async_.Webhook:1 of
msgid "Represents an asynchronous Discord webhook."
msgstr ""

#: discord.webhook.async_.Webhook:3 of
msgid ""
"Webhooks are a form to send messages to channels in Discord without a bot"
" user or authentication."
msgstr ""

#: discord.webhook.async_.Webhook:6 of
msgid ""
"There are two main ways to use Webhooks. The first is through the ones "
"received by the library such as :meth:`.Guild.webhooks` and "
":meth:`.TextChannel.webhooks`. The ones received by the library will "
"automatically be bound using the library's internal HTTP session."
msgstr ""

#: discord.webhook.async_.Webhook:11 of
msgid ""
"The second form involves creating a webhook object manually using the "
":meth:`~.Webhook.from_url` or :meth:`~.Webhook.partial` classmethods."
msgstr ""

#: discord.webhook.async_.Webhook:14 of
msgid ""
"For example, creating a webhook from a URL and using :doc:`aiohttp "
"<aio:index>`:"
msgstr ""

#: discord.webhook.async_.Webhook:26 of
msgid "For a synchronous counterpart, see :class:`SyncWebhook`."
msgstr ""

#: discord.webhook.async_.Webhook:32 discord.webhook.sync.SyncWebhook:9 of
msgid "Checks if two webhooks are equal."
msgstr ""

#: discord.webhook.async_.Webhook:36 discord.webhook.sync.SyncWebhook:13 of
msgid "Checks if two webhooks are not equal."
msgstr ""

#: discord.webhook.async_.Webhook:40 discord.webhook.sync.SyncWebhook:17 of
msgid "Returns the webhook's hash."
msgstr ""

#: discord.webhook.async_.Webhook:42 discord.webhook.sync.SyncWebhook:19 of
msgid "Webhooks are now comparable and hashable."
msgstr ""

#: discord.webhook.async_.Webhook:47 discord.webhook.sync.SyncWebhook:24 of
msgid "The webhook's ID"
msgstr ""

#: discord.webhook.async_.Webhook:53 discord.webhook.sync.SyncWebhook:30 of
msgid "The type of the webhook."
msgstr ""

#: discord.webhook.async_.Webhook:57 discord.webhook.sync.SyncWebhook:34 of
msgid ":class:`WebhookType`"
msgstr ""

#: discord.webhook.async_.Webhook:61 discord.webhook.sync.SyncWebhook:38 of
msgid ""
"The authentication token of the webhook. If this is ``None`` then the "
"webhook cannot be used to make requests."
msgstr ""

#: discord.webhook.async_.Webhook:68 discord.webhook.sync.SyncWebhook:45 of
msgid "The guild ID this webhook is for."
msgstr ""

#: discord.webhook.async_.Webhook:74 discord.webhook.sync.SyncWebhook:51 of
msgid "The channel ID this webhook is for."
msgstr ""

#: discord.webhook.async_.Webhook:80 discord.webhook.sync.SyncWebhook:57 of
msgid ""
"The user this webhook was created by. If the webhook was received without"
" authentication then this will be ``None``."
msgstr ""

#: discord.webhook.async_.Webhook:83 discord.webhook.sync.SyncWebhook:60 of
msgid "Optional[:class:`abc.User`]"
msgstr ""

#: discord.webhook.async_.Webhook:87 discord.webhook.sync.SyncWebhook:64 of
msgid "The default name of the webhook."
msgstr ""

#: discord.webhook.async_.Webhook:93 discord.webhook.sync.SyncWebhook:70 of
msgid ""
"The guild of the channel that this webhook is following. Only given if "
":attr:`type` is :attr:`WebhookType.channel_follower`."
msgstr ""

#: discord.webhook.async_.Webhook:98 discord.webhook.sync.SyncWebhook:75 of
msgid "Optional[:class:`PartialWebhookGuild`]"
msgstr ""

#: discord.webhook.async_.Webhook:102 discord.webhook.sync.SyncWebhook:79 of
msgid ""
"The channel that this webhook is following. Only given if :attr:`type` is"
" :attr:`WebhookType.channel_follower`."
msgstr ""

#: discord.webhook.async_.Webhook:107 discord.webhook.sync.SyncWebhook:84 of
msgid "Optional[:class:`PartialWebhookChannel`]"
msgstr ""

#: discord.SyncWebhook.url:1 discord.Webhook.url:1 of
msgid "Returns the webhook's url."
msgstr ""

#: discord.webhook.async_.Webhook.partial:1
#: discord.webhook.sync.SyncWebhook.partial:1 of
msgid "Creates a partial :class:`Webhook`."
msgstr ""

#: discord.webhook.async_.Webhook.partial:3
#: discord.webhook.sync.SyncWebhook.partial:3 of
msgid "The ID of the webhook."
msgstr ""

#: discord.webhook.async_.Webhook.partial:5
#: discord.webhook.sync.SyncWebhook.partial:5 of
msgid "The authentication token of the webhook."
msgstr ""

#: discord.webhook.async_.Webhook.from_url:5
#: discord.webhook.async_.Webhook.partial:7 of
msgid ""
"The session to use to send requests with. Note that the library does not "
"manage the session and will not close it.  .. versionadded:: 2.0"
msgstr ""

#: discord.webhook.async_.Webhook.from_url:5
#: discord.webhook.async_.Webhook.partial:7 of
msgid ""
"The session to use to send requests with. Note that the library does not "
"manage the session and will not close it."
msgstr ""

#: discord.webhook.async_.Webhook.from_url:11
#: discord.webhook.async_.Webhook.partial:13 of
msgid ""
"The bot authentication token for authenticated requests involving the "
"webhook.  .. versionadded:: 2.0"
msgstr ""

#: discord.webhook.async_.Webhook.from_url:11
#: discord.webhook.async_.Webhook.partial:13
#: discord.webhook.sync.SyncWebhook.from_url:10
#: discord.webhook.sync.SyncWebhook.partial:12 of
msgid ""
"The bot authentication token for authenticated requests involving the "
"webhook."
msgstr ""

#: discord.webhook.async_.Webhook.from_url:19
#: discord.webhook.async_.Webhook.partial:19
#: discord.webhook.sync.SyncWebhook.from_url:16
#: discord.webhook.sync.SyncWebhook.partial:16 of
msgid ""
"A partial :class:`Webhook`. A partial webhook is just a webhook object "
"with an ID and a token."
msgstr ""

#: discord.webhook.async_.Webhook.from_url:1
#: discord.webhook.sync.SyncWebhook.from_url:1 of
msgid "Creates a partial :class:`Webhook` from a webhook URL."
msgstr ""

#: discord.webhook.async_.Webhook.from_url:3
#: discord.webhook.sync.SyncWebhook.from_url:3 of
msgid "The URL of the webhook."
msgstr ""

#: discord.webhook.async_.Webhook.from_url:17
#: discord.webhook.sync.SyncWebhook.from_url:14 of
msgid "The URL is invalid."
msgstr ""

#: discord.webhook.async_.Webhook.fetch:3
#: discord.webhook.sync.SyncWebhook.fetch:1 of
msgid "Fetches the current webhook."
msgstr ""

#: discord.webhook.async_.Webhook.fetch:5
#: discord.webhook.sync.SyncWebhook.fetch:3 of
msgid "This could be used to get a full webhook from a partial webhook."
msgstr ""

#: discord.webhook.async_.Webhook.fetch:11
#: discord.webhook.sync.SyncWebhook.fetch:7 of
msgid ""
"When fetching with an unauthenticated webhook, i.e. "
":meth:`is_authenticated` returns ``False``, then the returned webhook "
"does not contain any user information."
msgstr ""

#: discord.webhook.async_.Webhook.delete:9
#: discord.webhook.async_.Webhook.edit:17
#: discord.webhook.async_.Webhook.fetch:15
#: discord.webhook.sync.SyncWebhook.delete:7
#: discord.webhook.sync.SyncWebhook.edit:13
#: discord.webhook.sync.SyncWebhook.fetch:11 of
msgid ""
"Whether to use the bot token over the webhook token if available. "
"Defaults to ``True``."
msgstr ""

#: discord.webhook.async_.Webhook.fetch:19
#: discord.webhook.sync.SyncWebhook.fetch:15 of
msgid "Could not fetch the webhook"
msgstr ""

#: discord.webhook.async_.Webhook.fetch:20
#: discord.webhook.sync.SyncWebhook.fetch:16 of
msgid "Could not find the webhook by this ID"
msgstr ""

#: discord.webhook.async_.Webhook.delete:18
#: discord.webhook.async_.Webhook.fetch:21
#: discord.webhook.sync.SyncWebhook.delete:14
#: discord.webhook.sync.SyncWebhook.fetch:17 of
msgid "This webhook does not have a token associated with it."
msgstr ""

#: discord.webhook.async_.Webhook.fetch:23
#: discord.webhook.sync.SyncWebhook.fetch:19 of
msgid "The fetched webhook."
msgstr ""

#: discord.webhook.async_.Webhook.delete:3
#: discord.webhook.sync.SyncWebhook.delete:1 of
msgid "Deletes this Webhook."
msgstr ""

#: discord.webhook.async_.Webhook.delete:5
#: discord.webhook.sync.SyncWebhook.delete:3 of
msgid ""
"The reason for deleting this webhook. Shows up on the audit log.  .. "
"versionadded:: 1.4"
msgstr ""

#: discord.webhook.async_.Webhook.delete:5
#: discord.webhook.sync.SyncWebhook.delete:3 of
msgid "The reason for deleting this webhook. Shows up on the audit log."
msgstr ""

#: discord.webhook.async_.Webhook.delete:9
#: discord.webhook.async_.Webhook.edit:17 of
msgid ""
"Whether to use the bot token over the webhook token if available. "
"Defaults to ``True``.  .. versionadded:: 2.0"
msgstr ""

#: discord.webhook.async_.Webhook.delete:15
#: discord.webhook.sync.SyncWebhook.delete:11 of
msgid "Deleting the webhook failed."
msgstr ""

#: discord.webhook.async_.Webhook.delete:16
#: discord.webhook.async_.Webhook.edit:24
#: discord.webhook.sync.SyncWebhook.delete:12
#: discord.webhook.sync.SyncWebhook.edit:18 of
msgid "This webhook does not exist."
msgstr ""

#: discord.webhook.async_.Webhook.delete:17
#: discord.webhook.sync.SyncWebhook.delete:13 of
msgid "You do not have permissions to delete this webhook."
msgstr ""

#: discord.webhook.async_.Webhook.edit:3
#: discord.webhook.sync.SyncWebhook.edit:1 of
msgid "Edits this Webhook."
msgstr ""

#: discord.webhook.async_.Webhook.edit:5
#: discord.webhook.sync.SyncWebhook.edit:3 of
msgid "The webhook's new default name."
msgstr ""

#: discord.webhook.async_.Webhook.edit:7
#: discord.webhook.sync.SyncWebhook.edit:5 of
msgid ""
"A :term:`py:bytes-like object` representing the webhook's new default "
"avatar."
msgstr ""

#: discord.webhook.async_.Webhook.edit:9 of
msgid ""
"The webhook's new channel. This requires an authenticated webhook.  .. "
"versionadded:: 2.0"
msgstr ""

#: discord.webhook.async_.Webhook.edit:9
#: discord.webhook.sync.SyncWebhook.edit:7 of
msgid "The webhook's new channel. This requires an authenticated webhook."
msgstr ""

#: discord.webhook.async_.Webhook.edit:13
#: discord.webhook.sync.SyncWebhook.edit:9 of
msgid ""
"The reason for editing this webhook. Shows up on the audit log.  .. "
"versionadded:: 1.4"
msgstr ""

#: discord.webhook.async_.Webhook.edit:13
#: discord.webhook.sync.SyncWebhook.edit:9 of
msgid "The reason for editing this webhook. Shows up on the audit log."
msgstr ""

#: discord.webhook.async_.Webhook.edit:23
#: discord.webhook.sync.SyncWebhook.edit:17 of
msgid "Editing the webhook failed."
msgstr ""

#: discord.webhook.async_.Webhook.edit:25
#: discord.webhook.sync.SyncWebhook.edit:19 of
msgid ""
"This webhook does not have a token associated with it, or     it tried "
"editing a channel without authentication."
msgstr ""

#: discord.SyncWebhook.avatar:1 discord.Webhook.avatar:1 of
msgid "Returns an :class:`Asset` for the avatar the webhook has."
msgstr ""

#: discord.SyncWebhook.avatar:3 discord.Webhook.avatar:3 of
msgid ""
"If the webhook does not have a traditional avatar, an asset for the "
"default avatar is returned instead."
msgstr ""

#: discord.SyncWebhook.channel:1 discord.Webhook.channel:1 of
msgid "The text channel this webhook belongs to."
msgstr ""

#: discord.SyncWebhook.channel:3 discord.SyncWebhook.guild:3
#: discord.Webhook.channel:3 discord.Webhook.guild:3 of
msgid "If this is a partial webhook, then this will always return ``None``."
msgstr ""

#: discord.Guild.public_updates_channel:9 discord.Guild.rules_channel:8
#: discord.Guild.system_channel:5 discord.SyncWebhook.channel:5
#: discord.Thread.parent:3 discord.Webhook.channel:5 of
msgid "Optional[:class:`TextChannel`]"
msgstr ""

#: discord.SyncWebhook.created_at:1 discord.Webhook.created_at:1 of
msgid "Returns the webhook's creation time in UTC."
msgstr ""

#: discord.webhook.async_.Webhook.fetch_message:3 of
msgid "Retrieves a single :class:`~discord.WebhookMessage` owned by this webhook."
msgstr ""

#: discord.abc.Messageable.fetch_message:5
#: discord.webhook.async_.Webhook.fetch_message:7
#: discord.webhook.sync.SyncWebhook.fetch_message:5 of
msgid "The message ID to look for."
msgstr ""

#: discord.webhook.async_.Webhook.delete_message:12
#: discord.webhook.async_.Webhook.fetch_message:9
#: discord.webhook.sync.SyncWebhook.delete_message:10
#: discord.webhook.sync.SyncWebhook.fetch_message:7 of
msgid "The ID of the thread that contains the message."
msgstr ""

#: discord.abc.Messageable.fetch_message:8
#: discord.webhook.async_.Webhook.fetch_message:12
#: discord.webhook.sync.SyncWebhook.fetch_message:10 of
msgid "The specified message was not found."
msgstr ""

#: discord.abc.Messageable.fetch_message:9
#: discord.message.PartialMessage.fetch:6
#: discord.webhook.async_.Webhook.fetch_message:13
#: discord.webhook.sync.SyncWebhook.fetch_message:11 of
msgid "You do not have the permissions required to get a message."
msgstr ""

#: discord.abc.Messageable.fetch_message:10
#: discord.message.PartialMessage.fetch:7
#: discord.webhook.async_.Webhook.fetch_message:14
#: discord.webhook.sync.SyncWebhook.fetch_message:12 of
msgid "Retrieving the message failed."
msgstr ""

#: discord.webhook.async_.Webhook.fetch_message:15
#: discord.webhook.async_.WebhookMessage.edit:44
#: discord.webhook.sync.SyncWebhook.edit_message:32
#: discord.webhook.sync.SyncWebhook.fetch_message:13
#: discord.webhook.sync.SyncWebhookMessage.edit:23 of
msgid "There was no token associated with this webhook."
msgstr ""

#: discord.abc.Messageable.fetch_message:12
#: discord.webhook.async_.Webhook.fetch_message:17
#: discord.webhook.sync.SyncWebhook.fetch_message:15 of
msgid "The message asked for."
msgstr ""

#: discord.webhook.async_.Webhook.fetch_message:18 of
msgid ":class:`~discord.WebhookMessage`"
msgstr ""

#: discord.SyncWebhook.guild:1 discord.Webhook.guild:1 of
msgid "The guild this webhook belongs to."
msgstr ""

#: discord.webhook.async_.BaseWebhook.is_authenticated:1 of
msgid ":class:`bool`: Whether the webhook is authenticated with a bot token."
msgstr ""

#: discord.webhook.async_.BaseWebhook.is_partial:1 of
msgid ":class:`bool`: Whether the webhook is a \"partial\" webhook."
msgstr ""

#: discord.webhook.async_.Webhook.edit_message:3
#: discord.webhook.sync.SyncWebhook.edit_message:1 of
msgid "Edits a message owned by this webhook."
msgstr ""

#: discord.webhook.async_.Webhook.edit_message:5
#: discord.webhook.sync.SyncWebhook.edit_message:3 of
msgid ""
"This is a lower level interface to :meth:`WebhookMessage.edit` in case "
"you only have an ID."
msgstr ""

#: discord.webhook.async_.Webhook.edit_message:10
#: discord.webhook.async_.WebhookMessage.edit:7 of
msgid ""
"The edit is no longer in-place, instead the newly edited message is "
"returned."
msgstr ""

#: discord.webhook.async_.Webhook.edit_message:13
#: discord.webhook.sync.SyncWebhook.edit_message:8 of
msgid "The message ID to edit."
msgstr ""

#: discord.webhook.async_.Webhook.edit_message:25
#: discord.webhook.async_.WebhookMessage.edit:17 of
msgid ""
"The file to upload. This cannot be mixed with ``files`` parameter.  .. "
"versionadded:: 2.0"
msgstr ""

#: discord.webhook.async_.Webhook.edit_message:29
#: discord.webhook.async_.WebhookMessage.edit:21 of
msgid ""
"A list of files to send with the content. This cannot be mixed with the "
"``file`` parameter.  .. versionadded:: 2.0"
msgstr ""

#: discord.webhook.async_.Webhook.edit_message:37 of
msgid ""
"The updated view to update this message with. If ``None`` is passed then "
"the view is removed. The webhook must have state attached, similar to "
":meth:`send`.  .. versionadded:: 2.0"
msgstr ""

#: discord.webhook.async_.Webhook.edit_message:37 of
msgid ""
"The updated view to update this message with. If ``None`` is passed then "
"the view is removed. The webhook must have state attached, similar to "
":meth:`send`."
msgstr ""

#: discord.webhook.async_.Webhook.edit_message:43
#: discord.webhook.sync.SyncWebhook.edit_message:25 of
msgid "The thread that contains the message."
msgstr ""

#: discord.webhook.async_.Webhook.edit_message:49
#: discord.webhook.async_.WebhookMessage.edit:43
#: discord.webhook.sync.SyncWebhook.edit_message:31
#: discord.webhook.sync.SyncWebhook.send:55
#: discord.webhook.sync.SyncWebhookMessage.edit:22 of
msgid "The length of ``embeds`` was invalid"
msgstr ""

#: discord.webhook.async_.Webhook.edit_message:50 of
msgid ""
"There was no token associated with this webhook or the webhook had     no"
" state."
msgstr ""

#: discord.webhook.async_.Webhook.edit_message:52 of
msgid "The newly edited webhook message."
msgstr ""

#: discord.webhook.async_.Webhook.edit_message:53
#: discord.webhook.async_.WebhookMessage.edit:47 of
msgid ":class:`WebhookMessage`"
msgstr ""

#: discord.webhook.async_.Webhook.delete_message:3
#: discord.webhook.sync.SyncWebhook.delete_message:1 of
msgid "Deletes a message owned by this webhook."
msgstr ""

#: discord.webhook.async_.Webhook.delete_message:5
#: discord.webhook.sync.SyncWebhook.delete_message:3 of
msgid ""
"This is a lower level interface to :meth:`WebhookMessage.delete` in case "
"you only have an ID."
msgstr ""

#: discord.webhook.async_.Webhook.delete_message:10
#: discord.webhook.sync.SyncWebhook.delete_message:8 of
msgid "The message ID to delete."
msgstr ""

#: discord.interactions.Interaction.delete_original_message:13
#: discord.webhook.async_.Webhook.delete_message:16
#: discord.webhook.sync.SyncWebhook.delete_message:14 of
msgid "Deleted a message that is not yours."
msgstr ""

#: ../../api.rst:4015
msgid "WebhookMessage"
msgstr ""

#: discord.webhook.async_.WebhookMessage:1
#: discord.webhook.sync.SyncWebhookMessage:1 of
msgid "Represents a message sent from your webhook."
msgstr ""

#: discord.webhook.async_.WebhookMessage:3
#: discord.webhook.sync.SyncWebhookMessage:3 of
msgid "This allows you to edit or delete a message sent by your webhook."
msgstr ""

#: discord.interactions.InteractionMessage:6
#: discord.webhook.async_.WebhookMessage:6
#: discord.webhook.sync.SyncWebhookMessage:6 of
msgid ""
"This inherits from :class:`discord.Message` with changes to :meth:`edit` "
"and :meth:`delete` to work."
msgstr ""

#: discord.interactions.InteractionMessage.edit:3
#: discord.message.Message.edit:3 discord.message.PartialMessage.edit:3
#: discord.webhook.async_.WebhookMessage.edit:3
#: discord.webhook.sync.SyncWebhookMessage.edit:1 of
msgid "Edits the message."
msgstr ""

#: discord.webhook.async_.WebhookMessage.edit:26 of
msgid ""
"A list of attachments to keep in the message. If ``[]`` is passed then "
"all attachments are removed.  .. versionadded:: 2.0"
msgstr ""

#: discord.message.PartialMessage.edit:34
#: discord.webhook.async_.WebhookMessage.edit:34 of
msgid ""
"The updated view to update this message with. If ``None`` is passed then "
"the view is removed.  .. versionadded:: 2.0"
msgstr ""

#: discord.interactions.InteractionMessage.delete:3
#: discord.message.Message.delete:3
#: discord.webhook.async_.WebhookMessage.delete:3
#: discord.webhook.sync.SyncWebhookMessage.delete:1 of
msgid "Deletes the message."
msgstr ""

#: discord.interactions.Interaction.delete_original_message:8
#: discord.interactions.InteractionMessage.delete:5
#: discord.webhook.async_.WebhookMessage.delete:5 of
msgid ""
"If provided, the number of seconds to wait before deleting the message. "
"The waiting is done in the background and deletion failures are ignored."
msgstr ""

#: discord.interactions.InteractionMessage.delete:10
#: discord.webhook.async_.WebhookMessage.delete:10
#: discord.webhook.sync.SyncWebhookMessage.delete:8 of
msgid "The message was deleted already."
msgstr ""

#: ../../api.rst:4023
msgid "SyncWebhook"
msgstr ""

#: discord.webhook.sync.SyncWebhook:1 of
msgid "Represents a synchronous Discord webhook."
msgstr ""

#: discord.webhook.sync.SyncWebhook:3 of
msgid "For an asynchronous counterpart, see :class:`Webhook`."
msgstr ""

#: discord.webhook.sync.SyncWebhook.from_url:5
#: discord.webhook.sync.SyncWebhook.partial:7 of
msgid ""
"The session to use to send requests with. Note that the library does not "
"manage the session and will not close it. If not given, the ``requests`` "
"auto session creation functions are used instead."
msgstr ""

#: discord.webhook.sync.SyncWebhook.edit:22
#: discord.webhook.sync.SyncWebhook.fetch:20 of
msgid ":class:`SyncWebhook`"
msgstr ""

#: discord.webhook.sync.SyncWebhook.edit:21 of
msgid "The newly edited webhook."
msgstr ""

#: discord.webhook.sync.SyncWebhook.send:14 of
msgid ""
"Whether the server should wait before sending a response. This "
"essentially means that the return type of this function changes from "
"``None`` to a :class:`WebhookMessage` if set to ``True``."
msgstr ""

#: discord.webhook.sync.SyncWebhook.send:42 of
msgid "The thread to send this message to.  .. versionadded:: 2.0"
msgstr ""

#: discord.webhook.sync.SyncWebhook.send:42 of
msgid "The thread to send this message to."
msgstr ""

#: discord.webhook.sync.SyncWebhook.send:56 of
msgid ""
"There was no token associated with this webhook, or you specified both"
"     a thread to send to and a thread to create (the ``thread`` and "
"``thread_name`` parameters)."
msgstr ""

#: discord.webhook.sync.SyncWebhook.send:59 of
msgid "Optional[:class:`SyncWebhookMessage`]"
msgstr ""

#: discord.webhook.sync.SyncWebhook.fetch_message:1 of
msgid ""
"Retrieves a single :class:`~discord.SyncWebhookMessage` owned by this "
"webhook."
msgstr ""

#: discord.webhook.sync.SyncWebhook.fetch_message:16 of
msgid ":class:`~discord.SyncWebhookMessage`"
msgstr ""

#: ../../api.rst:4032
msgid "SyncWebhookMessage"
msgstr ""

#: discord.webhook.sync.SyncWebhookMessage.edit:26 of
msgid ":class:`SyncWebhookMessage`"
msgstr ""

#: discord.webhook.sync.SyncWebhookMessage.delete:3 of
msgid ""
"If provided, the number of seconds to wait before deleting the message. "
"This blocks the thread."
msgstr ""

#: ../../api.rst:4042
msgid "Abstract Base Classes"
msgstr ""

#: ../../api.rst:4044
msgid ""
"An :term:`abstract base class` (also known as an ``abc``) is a class that"
" models can inherit to get their behaviour. **Abstract base classes "
"should not be instantiated**. They are mainly there for usage with "
":func:`isinstance` and :func:`issubclass`\\."
msgstr ""

#: ../../api.rst:4048
msgid ""
"This library has a module related to abstract base classes, in which all "
"the ABCs are subclasses of :class:`typing.Protocol`."
msgstr ""

#: ../../api.rst:4052
msgid "Snowflake"
msgstr ""

#: discord.abc.Snowflake:1 of
msgid "An ABC that details the common operations on a Discord model."
msgstr ""

#: discord.abc.Snowflake:3 of
msgid ""
"Almost all :ref:`Discord models <discord_api_models>` meet this abstract "
"base class."
msgstr ""

#: discord.abc.Snowflake:6 of
msgid ""
"If you want to create a snowflake on your own, consider using "
":class:`.Object`."
msgstr ""

#: discord.abc.Snowflake:11 of
msgid "The model's unique ID."
msgstr ""

#: ../../api.rst:4060 ../../api.rst:4142
msgid "User"
msgstr ""

#: discord.abc.User:1 of
msgid "An ABC that details the common operations on a Discord user."
msgstr ""

#: discord.abc.Connectable:4 discord.abc.GuildChannel:3
#: discord.abc.Messageable:3 discord.abc.PrivateChannel:3 discord.abc.User:3 of
msgid "The following implement this ABC:"
msgstr ""

#: discord.abc.PrivateChannel:14 discord.abc.User:6 of
msgid ":class:`~discord.ClientUser`"
msgstr ""

#: discord.abc.Messageable:9 discord.abc.User:7 of
msgid ":class:`~discord.Member`"
msgstr ""

#: discord.abc.GuildChannel:11 discord.abc.PrivateChannel:8 discord.abc.User:9
#: of
msgid "This ABC must also implement :class:`~discord.abc.Snowflake`."
msgstr ""

#: discord.abc.User:13 discord.user.ClientUser:23 discord.user.User:23 of
msgid "The user's username."
msgstr ""

#: discord.abc.User:19 of
msgid "The user's discriminator."
msgstr ""

#: discord.abc.User:25 of
msgid "The avatar asset the user has."
msgstr ""

#: discord.abc.User:27 of
msgid ":class:`~discord.Asset`"
msgstr ""

#: discord.abc.User:31 of
msgid "If the user is a bot account."
msgstr ""

#: discord.ClientUser.display_name:1 discord.Member.display_name:1
#: discord.User.display_name:1 discord.abc.User.display_name:1 of
msgid "Returns the user's display name."
msgstr ""

#: discord.ClientUser.mention:1 discord.User.mention:1
#: discord.WidgetMember.mention:1 discord.abc.User.mention:1 of
msgid "Returns a string that allows you to mention the given user."
msgstr ""

#: ../../api.rst:4068
msgid "PrivateChannel"
msgstr ""

#: discord.abc.PrivateChannel:1 of
msgid "An ABC that details the common operations on a private Discord channel."
msgstr ""

#: discord.abc.Messageable:6 discord.abc.PrivateChannel:5 of
msgid ":class:`~discord.DMChannel`"
msgstr ""

#: discord.abc.Messageable:7 discord.abc.PrivateChannel:6 of
msgid ":class:`~discord.GroupChannel`"
msgstr ""

#: discord.abc.PrivateChannel:12 discord.channel.DMChannel:31
#: discord.channel.GroupChannel:29 of
msgid "The user presenting yourself."
msgstr ""

#: ../../api.rst:4076
msgid "GuildChannel"
msgstr ""

#: discord.abc.GuildChannel:1 of
msgid "An ABC that details the common operations on a Discord guild channel."
msgstr ""

#: discord.abc.GuildChannel:5 discord.abc.Messageable:5 of
msgid ":class:`~discord.TextChannel`"
msgstr ""

#: discord.abc.Connectable:6 discord.abc.GuildChannel:6 of
msgid ":class:`~discord.VoiceChannel`"
msgstr ""

#: discord.abc.GuildChannel:7 of
msgid ":class:`~discord.CategoryChannel`"
msgstr ""

#: discord.abc.Connectable:7 discord.abc.GuildChannel:8 of
msgid ":class:`~discord.StageChannel`"
msgstr ""

#: discord.abc.GuildChannel:9 of
msgid ":class:`~discord.ForumChannel`"
msgstr ""

#: discord.abc.GuildChannel:15 discord.channel.ForumChannel:23
#: discord.channel.StageChannel:25 discord.channel.TextChannel:23
#: discord.channel.VoiceChannel:23 of
msgid "The channel name."
msgstr ""

#: discord.abc.GuildChannel:21 discord.channel.ForumChannel:29
#: discord.channel.StageChannel:31 discord.channel.TextChannel:29
#: discord.channel.VoiceChannel:29 of
msgid "The guild the channel belongs to."
msgstr ""

#: discord.abc.GuildChannel:23 of
msgid ":class:`~discord.Guild`"
msgstr ""

#: discord.abc.GuildChannel:27 discord.guild.Guild.create_forum_channel:46
#: discord.guild.Guild.create_stage_channel:17
#: discord.guild.Guild.create_text_channel:46
#: discord.guild.Guild.create_voice_channel:13 of
msgid ""
"The position in the channel list. This is a number that starts at 0. e.g."
" the top channel is position 0."
msgstr ""

#: discord.CategoryChannel.changed_roles:1 discord.ForumChannel.changed_roles:1
#: discord.StageChannel.changed_roles:1 discord.TextChannel.changed_roles:1
#: discord.VoiceChannel.changed_roles:1
#: discord.abc.GuildChannel.changed_roles:1 of
msgid ""
"Returns a list of roles that have been overridden from their default "
"values in the :attr:`~discord.Guild.roles` attribute."
msgstr ""

#: discord.CategoryChannel.changed_roles:4 discord.ForumChannel.changed_roles:4
#: discord.StageChannel.changed_roles:4 discord.TextChannel.changed_roles:4
#: discord.VoiceChannel.changed_roles:4
#: discord.abc.GuildChannel.changed_roles:4 of
msgid "List[:class:`~discord.Role`]"
msgstr ""

#: discord.CategoryChannel.mention:1 discord.ForumChannel.mention:1
#: discord.PartialInviteChannel.mention:1 discord.StageChannel.mention:1
#: discord.TextChannel.mention:1 discord.VoiceChannel.mention:1
#: discord.WidgetChannel.mention:1 discord.abc.GuildChannel.mention:1 of
msgid "The string that allows you to mention the channel."
msgstr ""

#: discord.CategoryChannel.jump_url:1 discord.DMChannel.jump_url:1
#: discord.ForumChannel.jump_url:1 discord.GroupChannel.jump_url:1
#: discord.StageChannel.jump_url:1 discord.TextChannel.jump_url:1
#: discord.VoiceChannel.jump_url:1 discord.abc.GuildChannel.jump_url:1 of
msgid "Returns a URL that allows the client to jump to the channel."
msgstr ""

#: discord.CategoryChannel.created_at:1 discord.ForumChannel.created_at:1
#: discord.GroupChannel.created_at:1 discord.PartialInviteChannel.created_at:1
#: discord.StageChannel.created_at:1 discord.TextChannel.created_at:1
#: discord.VoiceChannel.created_at:1 discord.WidgetChannel.created_at:1
#: discord.abc.GuildChannel.created_at:1 of
msgid "Returns the channel's creation time in UTC."
msgstr ""

#: discord.abc.GuildChannel.overwrites_for:1 of
msgid "Returns the channel-specific overwrites for a member or a role."
msgstr ""

#: discord.abc.GuildChannel.overwrites_for:3 of
msgid "The role or user denoting whose overwrite to get."
msgstr ""

#: discord.abc.GuildChannel.overwrites_for:7 of
msgid "The permission overwrites for this object."
msgstr ""

#: discord.abc.GuildChannel.overwrites_for:8 of
msgid ":class:`~discord.PermissionOverwrite`"
msgstr ""

#: discord.CategoryChannel.overwrites:1 discord.ForumChannel.overwrites:1
#: discord.StageChannel.overwrites:1 discord.TextChannel.overwrites:1
#: discord.VoiceChannel.overwrites:1 discord.abc.GuildChannel.overwrites:1 of
msgid "Returns all of the channel's overwrites."
msgstr ""

#: discord.CategoryChannel.overwrites:3 discord.ForumChannel.overwrites:3
#: discord.StageChannel.overwrites:3 discord.TextChannel.overwrites:3
#: discord.VoiceChannel.overwrites:3 discord.abc.GuildChannel.overwrites:3 of
msgid ""
"This is returned as a dictionary where the key contains the target which "
"can be either a :class:`~discord.Role` or a :class:`~discord.Member` and "
"the value is the overwrite as a :class:`~discord.PermissionOverwrite`."
msgstr ""

#: discord.CategoryChannel.overwrites:7 discord.ForumChannel.overwrites:7
#: discord.StageChannel.overwrites:7 discord.TextChannel.overwrites:7
#: discord.VoiceChannel.overwrites:7 discord.abc.GuildChannel.overwrites:7 of
msgid "The channel's permission overwrites."
msgstr ""

#: discord.CategoryChannel.overwrites:8 discord.ForumChannel.overwrites:8
#: discord.StageChannel.overwrites:8 discord.TextChannel.overwrites:8
#: discord.VoiceChannel.overwrites:8 discord.abc.GuildChannel.overwrites:8 of
msgid ""
"Dict[Union[:class:`~discord.Role`, :class:`~discord.Member`], "
":class:`~discord.PermissionOverwrite`]"
msgstr ""

#: discord.CategoryChannel.category:1 discord.ForumChannel.category:1
#: discord.StageChannel.category:1 discord.TextChannel.category:1
#: discord.VoiceChannel.category:1 discord.abc.GuildChannel.category:1 of
msgid "The category this channel belongs to."
msgstr ""

#: discord.CategoryChannel.category:3 discord.ForumChannel.category:3
#: discord.StageChannel.category:3 discord.TextChannel.category:3
#: discord.VoiceChannel.category:3 discord.abc.GuildChannel.category:3 of
msgid "If there is no category then this is ``None``."
msgstr ""

#: discord.CategoryChannel.category:5 discord.ForumChannel.category:5
#: discord.StageChannel.category:5 discord.TextChannel.category:5
#: discord.VoiceChannel.category:5 discord.abc.GuildChannel.category:5 of
msgid "Optional[:class:`~discord.CategoryChannel`]"
msgstr ""

#: discord.CategoryChannel.permissions_synced:1
#: discord.ForumChannel.permissions_synced:1
#: discord.StageChannel.permissions_synced:1
#: discord.TextChannel.permissions_synced:1
#: discord.VoiceChannel.permissions_synced:1
#: discord.abc.GuildChannel.permissions_synced:1 of
msgid ""
"Whether the permissions for this channel are synced with the category it "
"belongs to."
msgstr ""

#: discord.CategoryChannel.permissions_synced:4
#: discord.ForumChannel.permissions_synced:4
#: discord.StageChannel.permissions_synced:4
#: discord.TextChannel.permissions_synced:4
#: discord.VoiceChannel.permissions_synced:4
#: discord.abc.GuildChannel.permissions_synced:4 of
msgid "If there is no category then this is ``False``."
msgstr ""

#: discord.abc.GuildChannel.permissions_for:1
#: discord.channel.VocalGuildChannel.permissions_for:1
#: discord.channel._TextChannel.permissions_for:1
#: discord.threads.Thread.permissions_for:1 of
msgid ""
"Handles permission resolution for the :class:`~discord.Member` or "
":class:`~discord.Role`."
msgstr ""

#: discord.abc.GuildChannel.permissions_for:4
#: discord.channel.VocalGuildChannel.permissions_for:4
#: discord.channel._TextChannel.permissions_for:4 of
msgid "This function takes into consideration the following cases:"
msgstr ""

#: discord.abc.GuildChannel.permissions_for:6
#: discord.channel.VocalGuildChannel.permissions_for:6
#: discord.channel._TextChannel.permissions_for:6 of
msgid "Guild owner"
msgstr ""

#: discord.abc.GuildChannel.permissions_for:7
#: discord.channel.VocalGuildChannel.permissions_for:7
#: discord.channel._TextChannel.permissions_for:7 of
msgid "Guild roles"
msgstr ""

#: discord.abc.GuildChannel.permissions_for:8
#: discord.channel.VocalGuildChannel.permissions_for:8
#: discord.channel._TextChannel.permissions_for:8 of
msgid "Channel overrides"
msgstr ""

#: discord.abc.GuildChannel.permissions_for:9
#: discord.channel.VocalGuildChannel.permissions_for:9
#: discord.channel._TextChannel.permissions_for:9 of
msgid "Member overrides"
msgstr ""

#: discord.abc.GuildChannel.permissions_for:11
#: discord.channel.VocalGuildChannel.permissions_for:11
#: discord.channel._TextChannel.permissions_for:11 of
msgid ""
"If a :class:`~discord.Role` is passed, then it checks the permissions "
"someone with that role would have, which is essentially:"
msgstr ""

#: discord.abc.GuildChannel.permissions_for:14
#: discord.channel.VocalGuildChannel.permissions_for:14
#: discord.channel._TextChannel.permissions_for:14 of
msgid "The default role permissions"
msgstr ""

#: discord.abc.GuildChannel.permissions_for:15
#: discord.channel.VocalGuildChannel.permissions_for:15
#: discord.channel._TextChannel.permissions_for:15 of
msgid "The permissions of the role used as a parameter"
msgstr ""

#: discord.abc.GuildChannel.permissions_for:16
#: discord.channel.VocalGuildChannel.permissions_for:16
#: discord.channel._TextChannel.permissions_for:16 of
msgid "The default role permission overwrites"
msgstr ""

#: discord.abc.GuildChannel.permissions_for:17
#: discord.channel.VocalGuildChannel.permissions_for:17
#: discord.channel._TextChannel.permissions_for:17 of
msgid "The permission overwrites of the role used as a parameter"
msgstr ""

#: discord.abc.GuildChannel.permissions_for:19
#: discord.channel.VocalGuildChannel.permissions_for:19
#: discord.channel._TextChannel.permissions_for:19 of
msgid "The object passed in can now be a role object."
msgstr ""

#: discord.abc.GuildChannel.permissions_for:22
#: discord.channel.VocalGuildChannel.permissions_for:22
#: discord.channel._TextChannel.permissions_for:22
#: discord.threads.Thread.permissions_for:9 of
msgid ""
"The object to resolve permissions for. This could be either a member or a"
" role. If it's a role then member overwrites are not computed."
msgstr ""

#: discord.abc.GuildChannel.permissions_for:27
#: discord.channel.VocalGuildChannel.permissions_for:27
#: discord.channel._TextChannel.permissions_for:27
#: discord.threads.Thread.permissions_for:16 of
msgid "The resolved permissions for the member or role."
msgstr ""

#: discord.abc.GuildChannel.delete:3 of
msgid "Deletes the channel."
msgstr ""

#: discord.abc.GuildChannel.delete:5 of
msgid ""
"You must have :attr:`~discord.Permissions.manage_channels` permission to "
"use this."
msgstr ""

#: discord.abc.GuildChannel.delete:7 of
msgid "The reason for deleting this channel. Shows up on the audit log."
msgstr ""

#: discord.abc.GuildChannel.delete:11 of
msgid "You do not have proper permissions to delete the channel."
msgstr ""

#: discord.abc.GuildChannel.delete:12 of
msgid "The channel was not found or was already deleted."
msgstr ""

#: discord.abc.GuildChannel.delete:13 of
msgid "Deleting the channel failed."
msgstr ""

#: discord.abc.GuildChannel.set_permissions:3 of
msgid ""
"Sets the channel specific permission overwrites for a target in the "
"channel."
msgstr ""

#: discord.abc.GuildChannel.set_permissions:6 of
msgid ""
"The ``target`` parameter should either be a :class:`~discord.Member` or a"
" :class:`~discord.Role` that belongs to guild."
msgstr ""

#: discord.abc.GuildChannel.set_permissions:9 of
msgid ""
"The ``overwrite`` parameter, if given, must either be ``None`` or "
":class:`~discord.PermissionOverwrite`. For convenience, you can pass in "
"keyword arguments denoting :class:`~discord.Permissions` attributes. If "
"this is done, then you cannot mix the keyword arguments with the "
"``overwrite`` parameter."
msgstr ""

#: discord.abc.GuildChannel.set_permissions:15 of
msgid ""
"If the ``overwrite`` parameter is ``None``, then the permission "
"overwrites are deleted."
msgstr ""

#: discord.abc.GuildChannel.set_permissions:18 of
msgid ""
"You must have the :attr:`~discord.Permissions.manage_roles` permission to"
" use this."
msgstr ""

#: discord.abc.GuildChannel.set_permissions:22 of
msgid "This method *replaces* the old overwrites with the ones given."
msgstr ""

#: discord.abc.GuildChannel.set_permissions:26 of
msgid "Setting allow and deny: ::"
msgstr ""

#: discord.abc.GuildChannel.set_permissions:31 of
msgid "Deleting overwrites ::"
msgstr ""

#: discord.abc.GuildChannel.set_permissions:35 of
msgid "Using :class:`~discord.PermissionOverwrite` ::"
msgstr ""

#: discord.abc.GuildChannel.set_permissions:42 of
msgid "The member or role to overwrite permissions for."
msgstr ""

#: discord.abc.GuildChannel.set_permissions:44 of
msgid ""
"The permissions to allow and deny to the target, or ``None`` to delete "
"the overwrite."
msgstr ""

#: discord.abc.GuildChannel.set_permissions:47 of
msgid ""
"A keyword argument list of permissions to set for ease of use. Cannot be "
"mixed with ``overwrite``."
msgstr ""

#: discord.abc.GuildChannel.set_permissions:49
#: discord.guild.Guild.prune_members:21 discord.guild.Guild.unban:12
#: discord.member.Member.move_to:16 discord.member.Member.remove_timeout:10
#: discord.member.Member.timeout:9 discord.member.Member.timeout_for:11 of
msgid "The reason for doing this action. Shows up on the audit log."
msgstr ""

#: discord.abc.GuildChannel.set_permissions:52 of
msgid "You do not have permissions to edit channel specific permissions."
msgstr ""

#: discord.abc.GuildChannel.set_permissions:53 of
msgid "Editing channel specific permissions failed."
msgstr ""

#: discord.abc.GuildChannel.set_permissions:54 of
msgid "The role or member being edited is not part of the guild."
msgstr ""

#: discord.abc.GuildChannel.set_permissions:55 of
msgid ""
"The overwrite parameter invalid or the target type was not     "
":class:`~discord.Role` or :class:`~discord.Member`."
msgstr ""

#: discord.abc.GuildChannel.clone:3 discord.channel.CategoryChannel.clone:3
#: discord.channel.StageChannel.clone:3 discord.channel.VoiceChannel.clone:3
#: discord.channel._TextChannel.clone:3 of
msgid ""
"Clones this channel. This creates a channel with the same properties as "
"this channel."
msgstr ""

#: discord.abc.GuildChannel.clone:6 discord.abc.GuildChannel.move:7
#: discord.channel.CategoryChannel.clone:6
#: discord.channel.CategoryChannel.move:7 discord.channel.StageChannel.clone:6
#: discord.channel.VoiceChannel.clone:6 discord.channel._TextChannel.clone:6 of
msgid ""
"You must have the :attr:`~discord.Permissions.manage_channels` permission"
" to do this."
msgstr ""

#: discord.abc.GuildChannel.clone:11 discord.channel.CategoryChannel.clone:11
#: discord.channel.StageChannel.clone:11 discord.channel.VoiceChannel.clone:11
#: discord.channel._TextChannel.clone:11 of
msgid ""
"The name of the new channel. If not provided, defaults to this channel "
"name."
msgstr ""

#: discord.abc.GuildChannel.clone:14 discord.channel.CategoryChannel.clone:14
#: discord.channel.StageChannel.clone:14 discord.channel.VoiceChannel.clone:14
#: discord.channel._TextChannel.clone:14 of
msgid "The reason for cloning this channel. Shows up on the audit log."
msgstr ""

#: discord.abc.GuildChannel.clone:17 discord.channel.CategoryChannel.clone:17
#: discord.channel.StageChannel.clone:17 discord.channel.VoiceChannel.clone:17
#: discord.channel._TextChannel.clone:17 discord.guild.Guild.create_category:10
#: discord.guild.Guild.create_forum_channel:59
#: discord.guild.Guild.create_stage_channel:23
#: discord.guild.Guild.create_text_channel:59
#: discord.guild.Guild.create_voice_channel:32 of
msgid "You do not have the proper permissions to create this channel."
msgstr ""

#: discord.abc.GuildChannel.clone:18 discord.channel.CategoryChannel.clone:18
#: discord.channel.StageChannel.clone:18 discord.channel.VoiceChannel.clone:18
#: discord.channel._TextChannel.clone:18 discord.guild.Guild.create_category:11
#: discord.guild.Guild.create_forum_channel:60
#: discord.guild.Guild.create_stage_channel:24
#: discord.guild.Guild.create_text_channel:60
#: discord.guild.Guild.create_voice_channel:33 of
msgid "Creating the channel failed."
msgstr ""

#: discord.abc.GuildChannel.clone:21 discord.channel.CategoryChannel.clone:21
#: discord.channel.StageChannel.clone:21 discord.channel.VoiceChannel.clone:21
#: discord.channel._TextChannel.clone:21 of
msgid ":class:`.abc.GuildChannel`"
msgstr ""

#: discord.abc.GuildChannel.move:3 discord.channel.CategoryChannel.move:3 of
msgid "A rich interface to help move a channel relative to other channels."
msgstr ""

#: discord.abc.GuildChannel.move:5 discord.channel.CategoryChannel.move:5 of
msgid "If exact position movement is required, ``edit`` should be used instead."
msgstr ""

#: discord.abc.GuildChannel.move:12 discord.channel.CategoryChannel.move:12 of
msgid ""
"Voice channels will always be sorted below text channels. This is a "
"Discord limitation."
msgstr ""

#: discord.abc.GuildChannel.move:17 discord.channel.CategoryChannel.move:17 of
msgid ""
"Whether to move the channel to the beginning of the channel list (or "
"category if given). This is mutually exclusive with ``end``, ``before``, "
"and ``after``."
msgstr ""

#: discord.abc.GuildChannel.move:21 discord.channel.CategoryChannel.move:21 of
msgid ""
"Whether to move the channel to the end of the channel list (or category "
"if given). This is mutually exclusive with ``beginning``, ``before``, and"
" ``after``."
msgstr ""

#: discord.abc.GuildChannel.move:25 discord.channel.CategoryChannel.move:25 of
msgid ""
"The channel that should be before our current channel. This is mutually "
"exclusive with ``beginning``, ``end``, and ``after``."
msgstr ""

#: discord.abc.GuildChannel.move:28 discord.channel.CategoryChannel.move:28 of
msgid ""
"The channel that should be after our current channel. This is mutually "
"exclusive with ``beginning``, ``end``, and ``before``."
msgstr ""

#: discord.abc.GuildChannel.move:31 discord.channel.CategoryChannel.move:31 of
msgid ""
"The number of channels to offset the move by. For example, an offset of "
"``2`` with ``beginning=True`` would move it 2 after the beginning. A "
"positive number moves it below while a negative number moves it above. "
"Note that this number is relative and computed after the ``beginning``, "
"``end``, ``before``, and ``after`` parameters."
msgstr ""

#: discord.abc.GuildChannel.move:38 discord.channel.CategoryChannel.move:38 of
msgid ""
"The category to move this channel under. If ``None`` is given then it "
"moves it out of the category. This parameter is ignored if moving a "
"category channel."
msgstr ""

#: discord.abc.GuildChannel.move:42 discord.channel.CategoryChannel.move:42 of
msgid "Whether to sync the permissions with the category (if given)."
msgstr ""

#: discord.abc.GuildChannel.move:44 discord.channel.CategoryChannel.move:44 of
msgid "The reason for the move."
msgstr ""

#: discord.abc.GuildChannel.move:47 discord.channel.CategoryChannel.move:47 of
msgid "An invalid position was given or a bad mix of arguments was passed."
msgstr ""

#: discord.abc.GuildChannel.move:48 discord.channel.CategoryChannel.move:48 of
msgid "You do not have permissions to move the channel."
msgstr ""

#: discord.abc.GuildChannel.move:49 discord.channel.CategoryChannel.move:49 of
msgid "Moving the channel failed."
msgstr ""

#: discord.abc.GuildChannel.create_invite:3 of
msgid "Creates an instant invite from a text or voice channel."
msgstr ""

#: discord.abc.GuildChannel.create_invite:5 of
msgid ""
"You must have the :attr:`~discord.Permissions.create_instant_invite` "
"permission to do this."
msgstr ""

#: discord.abc.GuildChannel.create_invite:8
#: discord.channel.VoiceChannel.create_activity_invite:10 of
msgid ""
"How long the invite should last in seconds. If it's 0 then the invite "
"doesn't expire. Defaults to ``0``."
msgstr ""

#: discord.abc.GuildChannel.create_invite:11
#: discord.channel.VoiceChannel.create_activity_invite:13 of
msgid ""
"How many uses the invite could be used for. If it's 0 then there are "
"unlimited uses. Defaults to ``0``."
msgstr ""

#: discord.abc.GuildChannel.create_invite:14
#: discord.channel.VoiceChannel.create_activity_invite:16 of
msgid ""
"Denotes that the invite grants temporary membership (i.e. they get kicked"
" after they disconnect). Defaults to ``False``."
msgstr ""

#: discord.abc.GuildChannel.create_invite:17
#: discord.channel.VoiceChannel.create_activity_invite:19 of
msgid ""
"Indicates if a unique invite URL should be created. Defaults to True. If "
"this is set to ``False`` then it will return a previously created invite."
msgstr ""

#: discord.abc.GuildChannel.create_invite:21
#: discord.channel.VoiceChannel.create_activity_invite:23 of
msgid "The reason for creating this invite. Shows up on the audit log."
msgstr ""

#: discord.abc.GuildChannel.create_invite:23 of
msgid ""
"The type of target for the voice channel invite, if any.  .. "
"versionadded:: 2.0"
msgstr ""

#: discord.abc.GuildChannel.create_invite:23 of
msgid "The type of target for the voice channel invite, if any."
msgstr ""

#: discord.abc.GuildChannel.create_invite:27 of
msgid ""
"The user whose stream to display for this invite, required if "
"`target_type` is `TargetType.stream`. The user must be streaming in the "
"channel.  .. versionadded:: 2.0"
msgstr ""

#: discord.abc.GuildChannel.create_invite:27 of
msgid ""
"The user whose stream to display for this invite, required if "
"`target_type` is `TargetType.stream`. The user must be streaming in the "
"channel."
msgstr ""

#: discord.abc.GuildChannel.create_invite:32 of
msgid ""
"The id of the embedded application for the invite, required if "
"`target_type` is `TargetType.embedded_application`.  .. versionadded:: "
"2.0"
msgstr ""

#: discord.abc.GuildChannel.create_invite:32 of
msgid ""
"The id of the embedded application for the invite, required if "
"`target_type` is `TargetType.embedded_application`."
msgstr ""

#: discord.abc.GuildChannel.create_invite:37 of
msgid ""
"The scheduled event object to link to the event. Shortcut to "
":meth:`.Invite.set_scheduled_event`  See "
":meth:`.Invite.set_scheduled_event` for more info on event invite "
"linking.  .. versionadded:: 2.0"
msgstr ""

#: discord.abc.GuildChannel.create_invite:37 of
msgid ""
"The scheduled event object to link to the event. Shortcut to "
":meth:`.Invite.set_scheduled_event`"
msgstr ""

#: discord.abc.GuildChannel.create_invite:40 of
msgid ""
"See :meth:`.Invite.set_scheduled_event` for more info on event invite "
"linking."
msgstr ""

#: discord.abc.GuildChannel.create_invite:46
#: discord.channel.VoiceChannel.create_activity_invite:27 of
msgid "Invite creation failed."
msgstr ""

#: discord.abc.GuildChannel.create_invite:47 of
msgid "The channel that was passed is a category or an invalid channel."
msgstr ""

#: discord.abc.GuildChannel.create_invite:50
#: discord.channel.VoiceChannel.create_activity_invite:30 of
msgid ":class:`~discord.Invite`"
msgstr ""

#: discord.abc.GuildChannel.invites:3 of
msgid "Returns a list of all active instant invites from this channel."
msgstr ""

#: discord.abc.GuildChannel.invites:5 of
msgid ""
"You must have :attr:`~discord.Permissions.manage_channels` to get this "
"information."
msgstr ""

#: discord.abc.GuildChannel.invites:7 discord.guild.Guild.bans:23
#: discord.guild.Guild.fetch_ban:11 discord.guild.Guild.invites:8 of
msgid "You do not have proper permissions to get the information."
msgstr ""

#: discord.abc.GuildChannel.invites:8 discord.guild.Guild.bans:24
#: discord.guild.Guild.fetch_ban:13 discord.guild.Guild.invites:9 of
msgid "An error occurred while fetching the information."
msgstr ""

#: discord.abc.GuildChannel.invites:10 discord.guild.Guild.invites:11 of
msgid "The list of invites that are currently active."
msgstr ""

#: discord.abc.GuildChannel.invites:11 of
msgid "List[:class:`~discord.Invite`]"
msgstr ""

#: ../../api.rst:4084
msgid "Messageable"
msgstr ""

#: discord.abc.Messageable:1 of
msgid ""
"An ABC that details the common operations on a model that can send "
"messages."
msgstr ""

#: discord.abc.Messageable:10 of
msgid ":class:`~discord.ext.commands.Context`"
msgstr ""

#: discord.abc.Messageable:11 of
msgid ":class:`~discord.Thread`"
msgstr ""

#: discord.abc.Messageable:12 of
msgid ":class:`~discord.ApplicationContext`"
msgstr ""

#: discord.abc.Messageable.history:1 of
msgid ""
"Returns an :class:`~discord.AsyncIterator` that enables receiving the "
"destination's message history."
msgstr ""

#: discord.abc.Messageable.history:3 of
msgid ""
"You must have :attr:`~discord.Permissions.read_message_history` "
"permissions to use this."
msgstr ""

#: discord.abc.Messageable.history:14 discord.reaction.Reaction.users:14
#: discord.scheduled_events.ScheduledEvent.subscribers:18 of
msgid "Flattening into a list: ::"
msgstr ""

#: discord.abc.Messageable.history:21 of
msgid ""
"The number of messages to retrieve. If ``None``, retrieves every message "
"in the channel. Note, however, that this would make it a slow operation."
msgstr ""

#: discord.abc.Messageable.history:25 of
msgid ""
"Retrieve messages before this date or message. If a datetime is provided,"
" it is recommended to use a UTC aware datetime. If the datetime is naive,"
" it is assumed to be local time."
msgstr ""

#: discord.abc.Messageable.history:29 of
msgid ""
"Retrieve messages after this date or message. If a datetime is provided, "
"it is recommended to use a UTC aware datetime. If the datetime is naive, "
"it is assumed to be local time."
msgstr ""

#: discord.abc.Messageable.history:33 of
msgid ""
"Retrieve messages around this date or message. If a datetime is provided,"
" it is recommended to use a UTC aware datetime. If the datetime is naive,"
" it is assumed to be local time. When using this argument, the maximum "
"limit is 101. Note that if the limit is an even number, then this will "
"return at most limit + 1 messages."
msgstr ""

#: discord.abc.Messageable.history:39 of
msgid ""
"If set to ``True``, return messages in oldest->newest order. Defaults to "
"``True`` if ``after`` is specified, otherwise ``False``."
msgstr ""

#: discord.abc.Messageable.history:43 of
msgid "You do not have permissions to get channel message history."
msgstr ""

#: discord.abc.Messageable.history:44 of
msgid "The request to get message history failed."
msgstr ""

#: discord.abc.Messageable.history:46 of
msgid ":class:`~discord.Message` -- The message with the message data parsed."
msgstr ""

#: discord.abc.Messageable.typing:1 of
msgid ""
"Returns a context manager that allows you to type for an indefinite "
"period of time."
msgstr ""

#: discord.abc.Messageable.typing:3 of
msgid "This is useful for denoting long computations in your bot."
msgstr ""

#: discord.abc.Messageable.typing:7 of
msgid ""
"This is both a regular context manager and an async context manager. This"
" means that both ``with`` and ``async with`` work with this."
msgstr ""

#: discord.abc.Messageable.typing:10 of
msgid "Example Usage: ::"
msgstr ""

#: discord.abc.Messageable.send:3 of
msgid "Sends a message to the destination with the content given."
msgstr ""

#: discord.abc.Messageable.send:5 of
msgid ""
"The content must be a type that can convert to a string through "
"``str(content)``. If the content is set to ``None`` (the default), then "
"the ``embed`` parameter must be provided."
msgstr ""

#: discord.abc.Messageable.send:9 of
msgid ""
"To upload a single file, the ``file`` parameter should be used with a "
"single :class:`~discord.File` object. To upload multiple files, the "
"``files`` parameter should be used with a :class:`list` of "
":class:`~discord.File` objects. **Specifying both parameters will lead to"
" an exception**."
msgstr ""

#: discord.abc.Messageable.send:14 of
msgid ""
"To upload a single embed, the ``embed`` parameter should be used with a "
"single :class:`~discord.Embed` object. To upload multiple embeds, the "
"``embeds`` parameter should be used with a :class:`list` of "
":class:`~discord.Embed` objects. **Specifying both parameters will lead "
"to an exception**."
msgstr ""

#: discord.abc.Messageable.send:23
#: discord.channel.ForumChannel.create_thread:14 of
msgid "The rich embed for the content."
msgstr ""

#: discord.abc.Messageable.send:29
#: discord.channel.ForumChannel.create_thread:26 of
msgid ""
"The nonce to use for sending this message. If the message was "
"successfully sent, then the message will have a nonce with this value."
msgstr ""

#: discord.abc.Messageable.send:32 of
msgid ""
"If provided, the number of seconds to wait in the background before "
"deleting the message we just sent. If the deletion fails, then it is "
"silently ignored."
msgstr ""

#: discord.abc.Messageable.send:36 discord.message.Message.edit:37 of
msgid ""
"Controls the mentions being processed in this message. If this is passed,"
" then the object is merged with :attr:`~discord.Client.allowed_mentions`."
" The merging behaviour only overrides attributes that have been "
"explicitly passed to the object, otherwise it uses the attributes set in "
":attr:`~discord.Client.allowed_mentions`. If no object is passed at all "
"then the defaults given by :attr:`~discord.Client.allowed_mentions` are "
"used instead.  .. versionadded:: 1.4"
msgstr ""

#: discord.abc.Messageable.send:36
#: discord.channel.ForumChannel.create_thread:29
#: discord.message.Message.edit:37 discord.message.PartialMessage.edit:27 of
msgid ""
"Controls the mentions being processed in this message. If this is passed,"
" then the object is merged with :attr:`~discord.Client.allowed_mentions`."
" The merging behaviour only overrides attributes that have been "
"explicitly passed to the object, otherwise it uses the attributes set in "
":attr:`~discord.Client.allowed_mentions`. If no object is passed at all "
"then the defaults given by :attr:`~discord.Client.allowed_mentions` are "
"used instead."
msgstr ""

#: discord.abc.Messageable.send:52 of
msgid ""
":param :class:`~discord.PartialMessage`]: A reference to the "
":class:`~discord.Message` to which you are replying, this can be created "
"using"
msgstr ""

#: discord.abc.Messageable.send:48 of
msgid ""
":meth:`~discord.Message.to_reference` or passed directly as a "
":class:`~discord.Message`. You can control whether this mentions the "
"author of the referenced message using the "
":attr:`~discord.AllowedMentions.replied_user` attribute of "
"``allowed_mentions`` or by setting ``mention_author``."
msgstr ""

#: discord.abc.Messageable.send:54 of
msgid ""
"If set, overrides the :attr:`~discord.AllowedMentions.replied_user` "
"attribute of ``allowed_mentions``.  .. versionadded:: 1.6"
msgstr ""

#: discord.abc.Messageable.send:54 of
msgid ""
"If set, overrides the :attr:`~discord.AllowedMentions.replied_user` "
"attribute of ``allowed_mentions``."
msgstr ""

#: discord.abc.Messageable.send:58
#: discord.channel.ForumChannel.create_thread:36 of
msgid "A Discord UI View to add to the message."
msgstr ""

#: discord.abc.Messageable.send:60 discord.message.PartialMessage.edit:14 of
msgid ""
"A list of embeds to upload. Must be a maximum of 10.  .. versionadded:: "
"2.0"
msgstr ""

#: discord.abc.Messageable.send:60
#: discord.channel.ForumChannel.create_thread:16
#: discord.message.PartialMessage.edit:14 of
msgid "A list of embeds to upload. Must be a maximum of 10."
msgstr ""

#: discord.abc.Messageable.send:64 of
msgid ""
"A list of stickers to upload. Must be a maximum of 3.  .. versionadded:: "
"2.0"
msgstr ""

#: discord.abc.Messageable.send:64
#: discord.channel.ForumChannel.create_thread:22 of
msgid "A list of stickers to upload. Must be a maximum of 3."
msgstr ""

#: discord.abc.Messageable.send:70 discord.message.Message.reply:9 of
msgid "You do not have the proper permissions to send the message."
msgstr ""

#: discord.abc.Messageable.send:71 of
msgid ""
"The ``files`` list is not of the appropriate size,     you specified both"
" ``file`` and ``files``,     or you specified both ``embed`` and "
"``embeds``,     or the ``reference`` object is not a "
":class:`~discord.Message`,     :class:`~discord.MessageReference` or "
":class:`~discord.PartialMessage`."
msgstr ""

#: discord.abc.Messageable.send:73 discord.message.Message.reply:12 of
msgid "The message that was sent."
msgstr ""

#: discord.abc.Messageable.fetch_message:13 discord.abc.Messageable.send:74 of
msgid ":class:`~discord.Message`"
msgstr ""

#: discord.abc.Messageable.trigger_typing:3 of
msgid "Triggers a *typing* indicator to the destination."
msgstr ""

#: discord.abc.Messageable.trigger_typing:5 of
msgid ""
"*Typing* indicator will go away after 10 seconds, or after a message is "
"sent."
msgstr ""

#: discord.abc.Messageable.fetch_message:3 of
msgid "Retrieves a single :class:`~discord.Message` from the destination."
msgstr ""

#: discord.abc.Messageable.pins:3 of
msgid "Retrieves all messages that are currently pinned in the channel."
msgstr ""

#: discord.abc.Messageable.pins:7 of
msgid ""
"Due to a limitation with the Discord API, the :class:`.Message` objects "
"returned by this method do not contain complete "
":attr:`.Message.reactions` data."
msgstr ""

#: discord.abc.Messageable.pins:11 of
msgid "Retrieving the pinned messages failed."
msgstr ""

#: discord.abc.Messageable.pins:13 of
msgid "The messages that are currently pinned."
msgstr ""

#: discord.abc.Messageable.pins:14 of
msgid "List[:class:`~discord.Message`]"
msgstr ""

#: discord.abc.Messageable.can_send:1 of
msgid ""
"Returns a :class:`bool` indicating whether you have the permissions to "
"send the object(s)."
msgstr ""

#: discord.abc.Messageable.can_send:3 of
msgid "An invalid type has been passed."
msgstr ""

#: discord.abc.Messageable.can_send:5 of
msgid "Indicates whether you have the permissions to send the object(s)."
msgstr ""

#: ../../api.rst:4099
msgid "Connectable"
msgstr ""

#: discord.abc.Connectable:1 of
msgid ""
"An ABC that details the common operations on a channel that can connect "
"to a voice server."
msgstr ""

#: discord.abc.Connectable:11 of
msgid ""
"This ABC is not decorated with :func:`typing.runtime_checkable`, so will "
"fail :func:`isinstance`/:func:`issubclass` checks."
msgstr ""

#: ../../api.rst:4108
msgid "Discord Models"
msgstr ""

#: ../../api.rst:4110
msgid ""
"Models are classes that are received from Discord and are not meant to be"
" created by the user of the library."
msgstr ""

#: ../../api.rst:4115
msgid ""
"The classes listed below are **not intended to be created by users** and "
"are also **read-only**."
msgstr ""

#: ../../api.rst:4118
msgid ""
"For example, this means that you should not make your own :class:`User` "
"instances nor should you modify the :class:`User` instance yourself."
msgstr ""

#: ../../api.rst:4121
msgid ""
"If you want to get one of these model classes instances they'd have to be"
" through the cache, and a common way of doing so is through the "
":func:`utils.find` function or attributes of model classes that you "
"receive from the events specified in the :ref:`discord-api-events`."
msgstr ""

#: ../../api.rst:4128 ../../api.rst:4765
msgid ""
"Nearly all classes here have :ref:`py:slots` defined which means that it "
"is impossible to have dynamic attributes to the data classes."
msgstr ""

#: ../../api.rst:4133
msgid "ClientUser"
msgstr ""

#: discord.user.ClientUser:1 of
msgid "Represents your Discord user."
msgstr ""

#: discord.user.ClientUser:7 discord.user.User:7 of
msgid "Checks if two users are equal."
msgstr ""

#: discord.user.ClientUser:11 discord.user.User:11 of
msgid "Checks if two users are not equal."
msgstr ""

#: discord.user.ClientUser:15 discord.user.User:15 of
msgid "Return the user's hash."
msgstr ""

#: discord.user.ClientUser:19 discord.user.User:19 of
msgid "Returns the user's name with discriminator."
msgstr ""

#: discord.user.ClientUser:29 discord.user.User:29 of
msgid "The user's unique ID."
msgstr ""

#: discord.user.ClientUser:35 discord.user.User:35 of
msgid "The user's discriminator. This is given when the username has conflicts."
msgstr ""

#: discord.user.ClientUser:47 discord.user.User:47 of
msgid ""
"Specifies if the user is a system user (i.e. represents Discord "
"officially)."
msgstr ""

#: discord.user.ClientUser:55 of
msgid "Specifies if the user's email is verified."
msgstr ""

#: discord.user.ClientUser:61 of
msgid "The IETF language tag used to identify the language the user is using."
msgstr ""

#: discord.user.ClientUser:67 of
msgid "Specifies if the user has MFA turned on and working."
msgstr ""

#: discord.user.ClientUser.edit:3 of
msgid "Edits the current profile of the client."
msgstr ""

#: discord.user.ClientUser.edit:7 of
msgid ""
"To upload an avatar, a :term:`py:bytes-like object` must be passed in "
"that represents the image being uploaded. If this is done through a file "
"then the file must be opened via ``open('some_filename', 'rb')`` and the "
":term:`py:bytes-like object` is given through the use of ``fp.read()``."
msgstr ""

#: discord.user.ClientUser.edit:12 of
msgid "The only image formats supported for uploading is JPEG and PNG."
msgstr ""

#: discord.user.ClientUser.edit:14 of
msgid ""
"The edit is no longer in-place, instead the newly edited client user is "
"returned."
msgstr ""

#: discord.user.ClientUser.edit:17 of
msgid "The new username you wish to change to."
msgstr ""

#: discord.user.ClientUser.edit:19 of
msgid ""
"A :term:`py:bytes-like object` representing the image to upload. Could be"
" ``None`` to denote no avatar."
msgstr ""

#: discord.user.ClientUser.edit:23 of
msgid "Editing your profile failed."
msgstr ""

#: discord.user.ClientUser.edit:24 of
msgid "Wrong image format passed for ``avatar``."
msgstr ""

#: discord.user.ClientUser.edit:26 of
msgid "The newly edited client user."
msgstr ""

#: discord.ClientUser.accent_color:1 discord.User.accent_color:1
#: discord.WidgetMember.accent_color:1 of
msgid "Returns the user's accent color, if applicable."
msgstr ""

#: discord.ClientUser.accent_color:3 discord.User.accent_color:3
#: discord.WidgetMember.accent_color:3 of
msgid "There is an alias for this named :attr:`accent_colour`."
msgstr ""

#: discord.ClientUser.accent_color:9 discord.ClientUser.accent_colour:9
#: discord.ClientUser.banner:7 discord.User.accent_color:9
#: discord.User.accent_colour:9 discord.User.banner:7
#: discord.WidgetMember.accent_color:9 discord.WidgetMember.accent_colour:9
#: discord.WidgetMember.banner:7 of
msgid "This information is only available via :meth:`Client.fetch_user`."
msgstr ""

#: discord.ClientUser.accent_color:11 discord.ClientUser.accent_colour:11
#: discord.User.accent_color:11 discord.User.accent_colour:11
#: discord.WidgetMember.accent_color:11 discord.WidgetMember.accent_colour:11
#: of
msgid "Optional[:class:`Colour`]"
msgstr ""

#: discord.ClientUser.accent_colour:1 discord.User.accent_colour:1
#: discord.WidgetMember.accent_colour:1 of
msgid "Returns the user's accent colour, if applicable."
msgstr ""

#: discord.ClientUser.accent_colour:3 discord.User.accent_colour:3
#: discord.WidgetMember.accent_colour:3 of
msgid "There is an alias for this named :attr:`accent_color`."
msgstr ""

#: discord.ClientUser.avatar:1 discord.User.avatar:1 of
msgid "Returns an :class:`Asset` for the avatar the user has."
msgstr ""

#: discord.ClientUser.avatar:3 discord.User.avatar:3 of
msgid ""
"If the user does not have a traditional avatar, ``None`` is returned. If "
"you want the avatar that a user has displayed, consider "
":attr:`display_avatar`."
msgstr ""

#: discord.ClientUser.avatar:6 discord.ClientUser.banner:9
#: discord.GroupChannel.icon:3 discord.Guild.banner:3
#: discord.Guild.discovery_splash:3 discord.Guild.icon:3 discord.Guild.splash:3
#: discord.Member.guild_avatar:6 discord.PartialInviteGuild.banner:3
#: discord.PartialInviteGuild.icon:3 discord.PartialInviteGuild.splash:3
#: discord.PartialWebhookGuild.icon:3 discord.Role.icon:5
#: discord.ScheduledEvent.cover:3 discord.User.avatar:6 discord.User.banner:9
#: discord.WidgetMember.banner:9 of
msgid "Optional[:class:`Asset`]"
msgstr ""

#: discord.ClientUser.banner:1 discord.User.banner:1
#: discord.WidgetMember.banner:1 of
msgid "Returns the user's banner asset, if available."
msgstr ""

#: discord.ClientUser.color:1 discord.User.color:1 discord.WidgetMember.color:1
#: of
msgid ""
"A property that returns a color denoting the rendered color for the user."
" This always returns :meth:`Colour.default`."
msgstr ""

#: discord.ClientUser.color:4 discord.Member.color:5 discord.User.color:4
#: discord.WidgetMember.color:4 of
msgid "There is an alias for this named :attr:`colour`."
msgstr ""

#: discord.ClientUser.colour:1 discord.User.colour:1
#: discord.WidgetMember.colour:1 of
msgid ""
"A property that returns a colour denoting the rendered colour for the "
"user. This always returns :meth:`Colour.default`."
msgstr ""

#: discord.ClientUser.colour:4 discord.Member.colour:5 discord.User.colour:4
#: discord.WidgetMember.colour:4 of
msgid "There is an alias for this named :attr:`color`."
msgstr ""

#: discord.ClientUser.created_at:1 discord.User.created_at:1
#: discord.WidgetMember.created_at:1 of
msgid "Returns the user's creation time in UTC."
msgstr ""

#: discord.ClientUser.created_at:3 discord.User.created_at:3
#: discord.WidgetMember.created_at:3 of
msgid "This is when the user's Discord account was created."
msgstr ""

#: discord.ClientUser.default_avatar:1 discord.User.default_avatar:1
#: discord.WidgetMember.default_avatar:1 of
msgid ""
"Returns the default avatar for a given user. This is calculated by the "
"user's discriminator."
msgstr ""

#: discord.ClientUser.display_avatar:1 discord.User.display_avatar:1
#: discord.WidgetMember.display_avatar:1 of
msgid "Returns the user's display avatar."
msgstr ""

#: discord.ClientUser.display_avatar:3 discord.User.display_avatar:3
#: discord.WidgetMember.display_avatar:3 of
msgid "For regular users this is just their default avatar or uploaded avatar."
msgstr ""

#: discord.ClientUser.display_name:3 discord.Member.display_name:3
#: discord.User.display_name:3 of
msgid ""
"For regular users this is just their username, but if they have a guild "
"specific nickname then that is returned instead."
msgstr ""

#: discord.ClientUser.jump_url:1 discord.User.jump_url:1
#: discord.WidgetMember.jump_url:1 of
msgid "Returns a URL that allows the client to jump to the user."
msgstr ""

#: discord.user.BaseUser.mentioned_in:1 of
msgid "Checks if the user is mentioned in the specified message."
msgstr ""

#: discord.member.Member.mentioned_in:3 discord.user.BaseUser.mentioned_in:3 of
msgid "The message to check if you're mentioned in."
msgstr ""

#: discord.user.BaseUser.mentioned_in:6 of
msgid "Indicates if the user is mentioned in the message."
msgstr ""

#: discord.ClientUser.public_flags:1 discord.User.public_flags:1
#: discord.WidgetMember.public_flags:1 of
msgid "The publicly available flags the user has."
msgstr ""

#: discord.ClientUser.public_flags:3 discord.User.public_flags:3
#: discord.WidgetMember.public_flags:3 of
msgid ":class:`PublicUserFlags`"
msgstr ""

#: discord.user.User:1 of
msgid "Represents a Discord user."
msgstr ""

#: discord.User.dm_channel:1 of
msgid "Returns the channel associated with this user if it exists."
msgstr ""

#: discord.User.dm_channel:3 of
msgid ""
"If this returns ``None``, you can create a DM channel by calling the "
":meth:`create_dm` coroutine function."
msgstr ""

#: discord.User.dm_channel:6 of
msgid "Optional[:class:`DMChannel`]"
msgstr ""

#: discord.User.mutual_guilds:1 of
msgid "The guilds that the user shares with the client."
msgstr ""

#: discord.User.mutual_guilds:5 of
msgid "This will only return mutual guilds within the client's internal cache."
msgstr ""

#: discord.User.mutual_guilds:9 of
msgid "List[:class:`Guild`]"
msgstr ""

#: discord.member.flatten_user.<locals>.generate_function.<locals>.general:3
#: discord.user.User.create_dm:3 of
msgid "Creates a :class:`DMChannel` with this user."
msgstr ""

#: ../../api.rst:4158
msgid "Attachment"
msgstr ""

#: discord.message.Attachment:1 of
msgid "Represents an attachment from Discord."
msgstr ""

#: discord.message.Attachment:7 of
msgid "Returns the URL of the attachment."
msgstr ""

#: discord.message.Attachment:11 of
msgid "Checks if the attachment is equal to another attachment."
msgstr ""

#: discord.message.Attachment:15 of
msgid "Checks if the attachment is not equal to another attachment."
msgstr ""

#: discord.message.Attachment:19 of
msgid "Returns the hash of the attachment."
msgstr ""

#: discord.message.Attachment:21 of
msgid "Attachment can now be cast to :class:`str` and is hashable."
msgstr ""

#: discord.message.Attachment:26 of
msgid "The attachment ID."
msgstr ""

#: discord.message.Attachment:32 of
msgid "The attachment size in bytes."
msgstr ""

#: discord.message.Attachment:38 of
msgid "The attachment's height, in pixels. Only applicable to images and videos."
msgstr ""

#: discord.message.Attachment:44 of
msgid "The attachment's width, in pixels. Only applicable to images and videos."
msgstr ""

#: discord.message.Attachment:50 of
msgid "The attachment's filename."
msgstr ""

#: discord.message.Attachment:56 of
msgid ""
"The attachment URL. If the message this attachment was attached to is "
"deleted, then this will 404."
msgstr ""

#: discord.message.Attachment:63 of
msgid ""
"The proxy URL. This is a cached version of the :attr:`~Attachment.url` in"
" the case of images. When the message is deleted, this URL might be valid"
" for a few minutes or not valid at all."
msgstr ""

#: discord.message.Attachment:71 of
msgid "The attachment's `media type <https://en.wikipedia.org/wiki/Media_type>`_"
msgstr ""

#: discord.message.Attachment:77 of
msgid "Whether the attachment is ephemeral or not."
msgstr ""

#: discord.message.Attachment:85 of
msgid "The attachment's description."
msgstr ""

#: discord.message.Attachment.is_spoiler:1 of
msgid ":class:`bool`: Whether this attachment contains a spoiler."
msgstr ""

#: discord.message.Attachment.save:3 of
msgid "Saves this attachment into a file-like object."
msgstr ""

#: discord.asset.AssetMixin.save:5 discord.message.Attachment.save:5 of
msgid ""
"The file-like object to save this attachment to or the filename to use. "
"If a filename is passed then a file is created with that filename and "
"used instead."
msgstr ""

#: discord.asset.AssetMixin.save:9 discord.message.Attachment.save:9 of
msgid ""
"Whether to seek to the beginning of the file after saving is successfully"
" done."
msgstr ""

#: discord.message.Attachment.read:7 discord.message.Attachment.save:12
#: discord.message.Attachment.to_file:8 of
msgid ""
"Whether to use :attr:`proxy_url` rather than :attr:`url` when downloading"
" the attachment. This will allow attachments to be saved after deletion "
"more often, compared to the regular URL which is generally deleted right "
"after the message is deleted. Note that this can still fail to download "
"deleted attachments if too much time has passed, and it does not work on "
"some types of attachments."
msgstr ""

#: discord.message.Attachment.save:20 of
msgid "Saving the attachment failed."
msgstr ""

#: discord.message.Attachment.read:17 discord.message.Attachment.save:21
#: discord.message.Attachment.to_file:24 of
msgid "The attachment was deleted."
msgstr ""

#: discord.asset.AssetMixin.save:17 discord.message.Attachment.save:23 of
msgid "The number of bytes written."
msgstr ""

#: discord.message.Attachment.read:3 of
msgid "Retrieves the content of this attachment as a :class:`bytes` object."
msgstr ""

#: discord.message.Attachment.read:15 discord.message.Attachment.to_file:22 of
msgid "Downloading the attachment failed."
msgstr ""

#: discord.message.Attachment.read:16 discord.message.Attachment.to_file:23 of
msgid "You do not have permissions to access this attachment"
msgstr ""

#: discord.message.Attachment.read:19 of
msgid "The contents of the attachment."
msgstr ""

#: discord.message.Attachment.to_file:3 of
msgid ""
"Converts the attachment into a :class:`File` suitable for sending via "
":meth:`abc.Messageable.send`."
msgstr ""

#: discord.message.Attachment.to_file:8 of
msgid ""
"Whether to use :attr:`proxy_url` rather than :attr:`url` when downloading"
" the attachment. This will allow attachments to be saved after deletion "
"more often, compared to the regular URL which is generally deleted right "
"after the message is deleted. Note that this can still fail to download "
"deleted attachments if too much time has passed, and it does not work on "
"some types of attachments.  .. versionadded:: 1.4"
msgstr ""

#: discord.message.Attachment.to_file:17 of
msgid "Whether the file is a spoiler.  .. versionadded:: 1.4"
msgstr ""

#: discord.message.Attachment.to_file:17 of
msgid "Whether the file is a spoiler."
msgstr ""

#: discord.message.Attachment.to_file:26 of
msgid "The attachment as a file suitable for sending."
msgstr ""

#: discord.message.Attachment.to_file:27 of
msgid ":class:`File`"
msgstr ""

#: ../../api.rst:4166
msgid "Asset"
msgstr ""

#: discord.asset.Asset:1 of
msgid "Represents a CDN asset on Discord."
msgstr ""

#: discord.asset.Asset:7 of
msgid "Returns the URL of the CDN asset."
msgstr ""

#: discord.asset.Asset:11 of
msgid "Returns the length of the CDN asset's URL."
msgstr ""

#: discord.asset.Asset:15 of
msgid "Checks if the asset is equal to another asset."
msgstr ""

#: discord.asset.Asset:19 of
msgid "Checks if the asset is not equal to another asset."
msgstr ""

#: discord.asset.Asset:23 of
msgid "Returns the hash of the asset."
msgstr ""

#: discord.Asset.url:1 of
msgid "Returns the underlying URL of the asset."
msgstr ""

#: discord.Asset.key:1 of
msgid "Returns the identifying key of the asset."
msgstr ""

#: discord.asset.Asset.is_animated:1 of
msgid ":class:`bool`: Returns whether the asset is animated."
msgstr ""

#: discord.asset.Asset.replace:1 of
msgid "Returns a new asset with the passed components replaced."
msgstr ""

#: discord.asset.Asset.replace:3 discord.asset.Asset.with_size:3 of
msgid "The new size of the asset."
msgstr ""

#: discord.asset.Asset.replace:5 of
msgid ""
"The new format to change it to. Must be either 'webp', 'jpeg', 'jpg', "
"'png', or 'gif' if it's animated."
msgstr ""

#: discord.asset.Asset.replace:8 of
msgid ""
"The new format to change it to if the asset isn't animated. Must be "
"either 'webp', 'jpeg', 'jpg', or 'png'."
msgstr ""

#: discord.asset.Asset.replace:12 of
msgid "An invalid size or format was passed."
msgstr ""

#: discord.asset.Asset.replace:14 of
msgid "The newly updated asset."
msgstr ""

#: discord.asset.Asset.with_size:1 of
msgid "Returns a new asset with the specified size."
msgstr ""

#: discord.asset.Asset.with_size:6 of
msgid "The asset had an invalid size."
msgstr ""

#: discord.asset.Asset.with_format:8 discord.asset.Asset.with_size:8
#: discord.asset.Asset.with_static_format:11 of
msgid "The new updated asset."
msgstr ""

#: discord.asset.Asset.with_format:1 of
msgid "Returns a new asset with the specified format."
msgstr ""

#: discord.asset.Asset.with_format:3 of
msgid "The new format of the asset."
msgstr ""

#: discord.asset.Asset.with_format:6 of
msgid "The asset has an invalid format."
msgstr ""

#: discord.asset.Asset.with_static_format:1 of
msgid "Returns a new asset with the specified static format."
msgstr ""

#: discord.asset.Asset.with_static_format:3 of
msgid ""
"This only changes the format if the underlying asset is not animated. "
"Otherwise, the asset is not changed."
msgstr ""

#: discord.asset.Asset.with_static_format:6 of
msgid "The new static format of the asset."
msgstr ""

#: discord.asset.Asset.with_static_format:9 of
msgid "The asset had an invalid format."
msgstr ""

#: discord.asset.AssetMixin.read:3 discord.partial_emoji.PartialEmoji.read:3 of
msgid "Retrieves the content of this asset as a :class:`bytes` object."
msgstr ""

#: discord.asset.AssetMixin.read:5 discord.asset.AssetMixin.save:13
#: discord.partial_emoji.PartialEmoji.read:5 of
msgid "There was no internal connection state."
msgstr ""

#: discord.asset.AssetMixin.read:6 discord.asset.AssetMixin.save:14
#: discord.partial_emoji.PartialEmoji.read:6 of
msgid "Downloading the asset failed."
msgstr ""

#: discord.asset.AssetMixin.read:7 discord.asset.AssetMixin.save:15
#: discord.partial_emoji.PartialEmoji.read:7 of
msgid "The asset was deleted."
msgstr ""

#: discord.asset.AssetMixin.read:9 discord.partial_emoji.PartialEmoji.read:9 of
msgid "The content of the asset."
msgstr ""

#: discord.asset.AssetMixin.save:3 of
msgid "Saves this asset into a file-like object."
msgstr ""

#: ../../api.rst:4175
msgid "Message"
msgstr ""

#: discord.message.Message:1 of
msgid "Represents a message from Discord."
msgstr ""

#: discord.message.Message:15 of
msgid "Returns the message's hash."
msgstr ""

#: discord.message.Message:19 of
msgid ""
"Specifies if the message was done with text-to-speech. This can only be "
"accurately received in :func:`on_message` due to a discord limitation."
msgstr ""

#: discord.message.Message:27 of
msgid ""
"The type of message. In most cases this should not be checked, but it is "
"helpful in cases where it might be a system message for "
":attr:`system_content`."
msgstr ""

#: discord.message.Message:30 of
msgid ":class:`MessageType`"
msgstr ""

#: discord.message.Message:34 of
msgid ""
"A :class:`Member` that sent the message. If :attr:`channel` is a private "
"channel or the user has the left the guild, then it is a :class:`User` "
"instead."
msgstr ""

#: discord.message.Message:37 of
msgid "Union[:class:`Member`, :class:`abc.User`]"
msgstr ""

#: discord.message.Message:41 of
msgid "The actual contents of the message."
msgstr ""

#: discord.message.Message:47 of
msgid ""
"The value used by the discord guild and the client to verify that the "
"message is successfully sent. This is not stored long term within "
"Discord's servers and is only used ephemerally."
msgstr ""

#: discord.message.Message:50 of
msgid "Optional[Union[:class:`str`, :class:`int`]]"
msgstr ""

#: discord.message.Message:54 of
msgid "A list of embeds the message has."
msgstr ""

#: discord.message.Message:56 of
msgid "List[:class:`Embed`]"
msgstr ""

#: discord.message.Message:62 of
msgid "Union[:class:`TextChannel`, :class:`Thread`, :class:`DMChannel`,"
msgstr ""

#: discord.message.Message:66 of
msgid ""
"The :class:`TextChannel` or :class:`Thread` that the message was sent "
"from. Could be a :class:`DMChannel` or :class:`GroupChannel` if it's a "
"private message."
msgstr ""

#: discord.message.Message:71 of
msgid ""
"The message that this message references. This is only applicable to "
"messages of type :attr:`MessageType.pins_add`, crossposted messages "
"created by a followed channel integration, or message replies."
msgstr ""

#: discord.message.Message:77 of
msgid "Optional[:class:`~discord.MessageReference`]"
msgstr ""

#: discord.message.Message:81 of
msgid "Specifies if the message mentions everyone."
msgstr ""

#: discord.message.Message:85 of
msgid ""
"This does not check if the ``@everyone`` or the ``@here`` text is in the "
"message itself. Rather this boolean indicates if either the ``@everyone``"
" or the ``@here`` text is in the message **and** it did end up "
"mentioning."
msgstr ""

#: discord.message.Message:93 of
msgid ""
"A list of :class:`Member` that were mentioned. If the message is in a "
"private message then the list will be of :class:`User` instead. For "
"messages that are not of type :attr:`MessageType.default`\\, this array "
"can be used to aid in system messages. For more information, see "
":attr:`system_content`."
msgstr ""

#: discord.message.Message:100 of
msgid ""
"The order of the mentions list is not in any particular order, so you "
"should not rely on it. This is a Discord limitation, not one with the "
"library."
msgstr ""

#: discord.message.Message:103 of
msgid "List[:class:`abc.User`]"
msgstr ""

#: discord.message.Message:107 of
msgid ""
"A list of :class:`abc.GuildChannel` that were mentioned. If the message "
"is in a private message then the list is always empty."
msgstr ""

#: discord.CategoryChannel.channels:5 discord.Guild.channels:3
#: discord.message.Message:110 of
msgid "List[:class:`abc.GuildChannel`]"
msgstr ""

#: discord.message.Message:114 of
msgid ""
"A list of :class:`Role` that were mentioned. If the message is in a "
"private message then the list is always empty."
msgstr ""

#: discord.Emoji.roles:5 discord.Guild.roles:6 discord.Member.roles:7
#: discord.guild.Guild.edit_role_positions:33
#: discord.guild.Guild.fetch_roles:14 discord.message.Message:117 of
msgid "List[:class:`Role`]"
msgstr ""

#: discord.message.Message:121 discord.message.PartialMessage:37 of
msgid "The message ID."
msgstr ""

#: discord.message.Message:127 of
msgid ""
"If this message was sent by a webhook, then this is the webhook ID's that"
" sent this message."
msgstr ""

#: discord.message.Message:134 of
msgid "A list of attachments given to a message."
msgstr ""

#: discord.message.Message:136 of
msgid "List[:class:`Attachment`]"
msgstr ""

#: discord.message.Message:140 of
msgid "Specifies if the message is currently pinned."
msgstr ""

#: discord.message.Message:146 of
msgid "Extra features of the message."
msgstr ""

#: discord.message.Message:150 of
msgid ":class:`MessageFlags`"
msgstr ""

#: discord.message.Message:154 of
msgid ""
"Reactions to a message. Reactions can be either custom emoji or standard "
"unicode emoji."
msgstr ""

#: discord.message.Message:156 of
msgid "List[:class:`Reaction`]"
msgstr ""

#: discord.message.Message:160 of
msgid ""
"The activity associated with this message. Sent with Rich-Presence "
"related messages that for example, request joining, spectating, or "
"listening to or with another member."
msgstr ""

#: discord.message.Message:163 of
msgid "It is a dictionary with the following optional keys:"
msgstr ""

#: discord.message.Message:165 of
msgid ""
"``type``: An integer denoting the type of message activity being "
"requested."
msgstr ""

#: discord.message.Message:166 of
msgid "``party_id``: The party ID associated with the party."
msgstr ""

#: discord.message.Message:168 discord.message.Message:182 of
msgid "Optional[:class:`dict`]"
msgstr ""

#: discord.message.Message:172 of
msgid "The rich presence enabled application associated with this message."
msgstr ""

#: discord.message.Message:174 of
msgid "It is a dictionary with the following keys:"
msgstr ""

#: discord.message.Message:176 of
msgid "``id``: A string representing the application's ID."
msgstr ""

#: discord.message.Message:177 of
msgid "``name``: A string representing the application's name."
msgstr ""

#: discord.message.Message:178 of
msgid "``description``: A string representing the application's description."
msgstr ""

#: discord.message.Message:179 of
msgid "``icon``: A string representing the icon ID of the application."
msgstr ""

#: discord.message.Message:180 of
msgid "``cover_image``: A string representing the embed's image asset ID."
msgstr ""

#: discord.message.Message:186 of
msgid "A list of sticker items given to the message."
msgstr ""

#: discord.message.Message:190 of
msgid "List[:class:`StickerItem`]"
msgstr ""

#: discord.message.Message:194 of
msgid "A list of components in the message."
msgstr ""

#: discord.components.ActionRow:19 discord.message.Message:198 of
msgid "List[:class:`Component`]"
msgstr ""

#: discord.message.Message:202 of
msgid "The guild that the message belongs to, if applicable."
msgstr ""

#: discord.message.Message:208 of
msgid "The interaction associated with the message, if applicable."
msgstr ""

#: discord.message.Message:210 of
msgid "Optional[:class:`MessageInteraction`]"
msgstr ""

#: discord.message.Message:214 of
msgid "The thread created from this message, if applicable."
msgstr ""

#: discord.channel._TextChannel.get_thread:9 discord.guild.Guild.get_thread:9
#: discord.message.Message:218 of
msgid "Optional[:class:`Thread`]"
msgstr ""

#: ../../docstring discord.Message.raw_mentions:1 of
msgid ""
"A property that returns an array of user IDs matched with the syntax of "
"``<@user_id>`` in the message content."
msgstr ""

#: ../../docstring discord.Message.raw_mentions:4 of
msgid ""
"This allows you to receive the user IDs of mentioned users even in a "
"private message context."
msgstr ""

#: ../../docstring discord.Message.raw_channel_mentions:4
#: discord.Message.raw_mentions:7 discord.Message.raw_role_mentions:4
#: discord.automod.AutoModRule:75 discord.automod.AutoModRule:81 of
msgid "List[:class:`int`]"
msgstr ""

#: ../../docstring discord.Message.raw_channel_mentions:1 of
msgid ""
"A property that returns an array of channel IDs matched with the syntax "
"of ``<#channel_id>`` in the message content."
msgstr ""

#: ../../docstring discord.Message.raw_role_mentions:1 of
msgid ""
"A property that returns an array of role IDs matched with the syntax of "
"``<@&role_id>`` in the message content."
msgstr ""

#: ../../docstring discord.Message.clean_content:1 of
msgid ""
"A property that returns the content in a \"cleaned up\" manner. This "
"basically means that mentions are transformed into the way the client "
"shows it. e.g. ``<#id>`` will transform into ``#name``."
msgstr ""

#: ../../docstring discord.Message.clean_content:6 of
msgid "This will also transform @everyone and @here mentions into non-mentions."
msgstr ""

#: ../../docstring discord.Message.clean_content:11 of
msgid ""
"This *does not* affect markdown. If you want to escape or remove markdown"
" then use :func:`utils.escape_markdown` or :func:`utils.remove_markdown` "
"respectively, along with this function."
msgstr ""

#: discord.Message.created_at:1 of
msgid "The message's creation time in UTC."
msgstr ""

#: discord.Message.edited_at:1 of
msgid ""
"Optional[:class:`datetime.datetime`]: An aware UTC datetime object "
"containing the edited time of the message."
msgstr ""

#: discord.Message.jump_url:1 discord.PartialMessage.jump_url:1 of
msgid "Returns a URL that allows the client to jump to this message."
msgstr ""

#: discord.message.Message.is_system:1 of
msgid ":class:`bool`: Whether the message is a system message."
msgstr ""

#: discord.message.Message.is_system:3 of
msgid ""
"A system message is a message that is constructed entirely by the Discord"
" API in response to something."
msgstr ""

#: ../../docstring discord.Message.system_content:1 of
msgid ""
"A property that returns the content that is rendered regardless of the "
":attr:`Message.type`."
msgstr ""

#: ../../docstring discord.Message.system_content:4 of
msgid ""
"In the case of :attr:`MessageType.default` and "
":attr:`MessageType.reply`\\, this just returns the regular "
":attr:`Message.content`. Otherwise, this returns an English message "
"denoting the contents of the system message."
msgstr ""

#: discord.message.Message.delete:5 of
msgid ""
"Your own messages could be deleted without any proper permissions. "
"However, to delete other people's messages, you need the "
":attr:`~Permissions.manage_messages` permission."
msgstr ""

#: discord.message.Message.delete:9 of
msgid "Added the new ``delay`` keyword-only parameter."
msgstr ""

#: discord.message.Message.delete:12 of
msgid ""
"If provided, the number of seconds to wait in the background before "
"deleting the message. If the deletion fails then it is silently ignored."
msgstr ""

#: discord.message.Message.delete:15 of
msgid "The reason for deleting the message. Shows up on the audit log."
msgstr ""

#: discord.message.Message.delete:19 of
msgid "The message was deleted already"
msgstr ""

#: discord.message.Message.edit:5 of
msgid ""
"The content must be able to be transformed into a string via "
"``str(content)``."
msgstr ""

#: discord.message.Message.edit:7 of
msgid "The ``suppress`` keyword-only parameter was added."
msgstr ""

#: discord.message.Message.edit:10 discord.message.PartialMessage.edit:8 of
msgid ""
"The new content to replace the message with. Could be ``None`` to remove "
"the content."
msgstr ""

#: discord.message.Message.edit:13 discord.message.PartialMessage.edit:11 of
msgid ""
"The new embed to replace the original with. Could be ``None`` to remove "
"the embed."
msgstr ""

#: discord.message.Message.edit:16 of
msgid ""
"The new embeds to replace the original with. Must be a maximum of 10. To "
"remove all embeds ``[]`` should be passed.  .. versionadded:: 2.0"
msgstr ""

#: discord.message.Message.edit:16 of
msgid ""
"The new embeds to replace the original with. Must be a maximum of 10. To "
"remove all embeds ``[]`` should be passed."
msgstr ""

#: discord.message.Message.edit:21 of
msgid "A new file to add to the message."
msgstr ""

#: discord.message.Message.edit:23 of
msgid "New files to add to the message."
msgstr ""

#: discord.message.Message.edit:28 discord.message.PartialMessage.edit:18 of
msgid ""
"Whether to suppress embeds for the message. This removes all the embeds "
"if set to ``True``. If set to ``False`` this brings the embeds back if "
"they were suppressed. Using this parameter requires "
":attr:`~.Permissions.manage_messages`."
msgstr ""

#: discord.message.Message.edit:51 discord.message.PartialMessage.edit:42 of
msgid ""
"Tried to suppress a message without permissions or     edited a message's"
" content or embed that isn't yours."
msgstr ""

#: discord.message.Message.edit:52 of
msgid ""
"You specified both ``embed`` and ``embeds``,     specified both ``file`` "
"and ``files``, or either``file``     or ``files`` were of the wrong type."
msgstr ""

#: discord.message.Message.publish:3 of
msgid "Publishes this message to your announcement channel."
msgstr ""

#: discord.message.Message.publish:5 of
msgid ""
"You must have the :attr:`~Permissions.send_messages` permission to do "
"this."
msgstr ""

#: discord.message.Message.publish:7 of
msgid ""
"If the message is not your own then the "
":attr:`~Permissions.manage_messages` permission is also needed."
msgstr ""

#: discord.message.Message.publish:10 of
msgid "You do not have the proper permissions to publish this message."
msgstr ""

#: discord.message.Message.publish:11 of
msgid "Publishing the message failed."
msgstr ""

#: discord.message.Message.pin:3 of
msgid "Pins the message."
msgstr ""

#: discord.message.Message.pin:5 discord.message.Message.unpin:5 of
msgid ""
"You must have the :attr:`~Permissions.manage_messages` permission to do "
"this in a non-private channel context."
msgstr ""

#: discord.message.Message.pin:8 of
msgid ""
"The reason for pinning the message. Shows up on the audit log.  .. "
"versionadded:: 1.4"
msgstr ""

#: discord.message.Message.pin:8 of
msgid "The reason for pinning the message. Shows up on the audit log."
msgstr ""

#: discord.message.Message.pin:13 of
msgid "You do not have permissions to pin the message."
msgstr ""

#: discord.message.Message.pin:14 discord.message.Message.unpin:14 of
msgid "The message or channel was not found or deleted."
msgstr ""

#: discord.message.Message.pin:15 of
msgid ""
"Pinning the message failed, probably due to the channel     having more "
"than 50 pinned messages."
msgstr ""

#: discord.message.Message.unpin:3 of
msgid "Unpins the message."
msgstr ""

#: discord.message.Message.unpin:8 of
msgid ""
"The reason for unpinning the message. Shows up on the audit log.  .. "
"versionadded:: 1.4"
msgstr ""

#: discord.message.Message.unpin:8 of
msgid "The reason for unpinning the message. Shows up on the audit log."
msgstr ""

#: discord.message.Message.unpin:13 of
msgid "You do not have permissions to unpin the message."
msgstr ""

#: discord.message.Message.unpin:15 of
msgid "Unpinning the message failed."
msgstr ""

#: discord.message.Message.add_reaction:3 of
msgid "Add a reaction to the message."
msgstr ""

#: discord.message.Message.add_reaction:5
#: discord.message.Message.clear_reaction:5
#: discord.message.Message.remove_reaction:5 of
msgid "The emoji may be a unicode emoji or a custom guild :class:`Emoji`."
msgstr ""

#: discord.message.Message.add_reaction:7 of
msgid ""
"You must have the :attr:`~Permissions.read_message_history` permission to"
" use this. If nobody else has reacted to the message using this emoji, "
"the :attr:`~Permissions.add_reactions` permission is required."
msgstr ""

#: discord.message.Message.add_reaction:11 of
msgid "The emoji to react with."
msgstr ""

#: discord.message.Message.add_reaction:14 of
msgid "Adding the reaction failed."
msgstr ""

#: discord.message.Message.add_reaction:15 of
msgid "You do not have the proper permissions to react to the message."
msgstr ""

#: discord.message.Message.add_reaction:16
#: discord.message.Message.clear_reaction:16 discord.reaction.Reaction.clear:11
#: of
msgid "The emoji you specified was not found."
msgstr ""

#: discord.message.Message.add_reaction:17
#: discord.message.Message.clear_reaction:17
#: discord.message.Message.remove_reaction:21
#: discord.reaction.Reaction.clear:12 of
msgid "The emoji parameter is invalid."
msgstr ""

#: discord.message.Message.remove_reaction:3 of
msgid "Remove a reaction by the member from the message."
msgstr ""

#: discord.message.Message.remove_reaction:7 of
msgid ""
"If the reaction is not your own (i.e. ``member`` parameter is not you) "
"then the :attr:`~Permissions.manage_messages` permission is needed."
msgstr ""

#: discord.message.Message.remove_reaction:10 of
msgid ""
"The ``member`` parameter must represent a member and meet the "
":class:`abc.Snowflake` abc."
msgstr ""

#: discord.message.Message.remove_reaction:13 of
msgid "The emoji to remove."
msgstr ""

#: discord.message.Message.remove_reaction:15 of
msgid "The member for which to remove the reaction."
msgstr ""

#: discord.message.Message.remove_reaction:18
#: discord.reaction.Reaction.remove:14 of
msgid "Removing the reaction failed."
msgstr ""

#: discord.message.Message.remove_reaction:19
#: discord.reaction.Reaction.remove:15 of
msgid "You do not have the proper permissions to remove the reaction."
msgstr ""

#: discord.message.Message.remove_reaction:20 of
msgid "The member or emoji you specified was not found."
msgstr ""

#: discord.message.Message.clear_reaction:3 of
msgid "Clears a specific reaction from the message."
msgstr ""

#: discord.message.Message.clear_reaction:7
#: discord.message.Message.clear_reactions:5 discord.reaction.Reaction.clear:5
#: of
msgid "You need the :attr:`~Permissions.manage_messages` permission to use this."
msgstr ""

#: discord.message.Message.clear_reaction:11 of
msgid "The emoji to clear."
msgstr ""

#: discord.message.Message.clear_reaction:14 discord.reaction.Reaction.clear:9
#: of
msgid "Clearing the reaction failed."
msgstr ""

#: discord.message.Message.clear_reaction:15 discord.reaction.Reaction.clear:10
#: of
msgid "You do not have the proper permissions to clear the reaction."
msgstr ""

#: discord.message.Message.clear_reactions:3 of
msgid "Removes all the reactions from the message."
msgstr ""

#: discord.message.Message.clear_reactions:7 of
msgid "Removing the reactions failed."
msgstr ""

#: discord.message.Message.clear_reactions:8 of
msgid "You do not have the proper permissions to remove all the reactions."
msgstr ""

#: discord.message.Message.create_thread:3 of
msgid "Creates a public thread from this message."
msgstr ""

#: discord.message.Message.create_thread:5 of
msgid ""
"You must have :attr:`~discord.Permissions.create_public_threads` in order"
" to create a public thread from a message."
msgstr ""

#: discord.message.Message.create_thread:8 of
msgid "The channel this message belongs in must be a :class:`TextChannel`."
msgstr ""

#: discord.channel.ForumChannel.create_thread:10
#: discord.channel.TextChannel.create_thread:10
#: discord.message.Message.create_thread:12 of
msgid "The name of the thread."
msgstr ""

#: discord.channel.ForumChannel.create_thread:38
#: discord.channel.TextChannel.create_thread:16
#: discord.message.Message.create_thread:14 of
msgid ""
"The duration in minutes before a thread is automatically archived for "
"inactivity. If not provided, the channel's default auto archive duration "
"is used."
msgstr ""

#: discord.channel.ForumChannel.create_thread:50
#: discord.channel.TextChannel.create_thread:26
#: discord.message.Message.create_thread:18 of
msgid "You do not have permissions to create a thread."
msgstr ""

#: discord.message.Message.create_thread:19 of
msgid "Creating the thread failed."
msgstr ""

#: discord.message.Message.create_thread:20 of
msgid "This message does not have guild info attached."
msgstr ""

#: discord.message.Message.create_thread:22 of
msgid "The created thread."
msgstr ""

#: discord.message.Message.create_thread:23 discord.threads.Thread.archive:9
#: discord.threads.Thread.unarchive:6 of
msgid ":class:`.Thread`"
msgstr ""

#: discord.message.Message.reply:3 of
msgid ""
"A shortcut method to :meth:`.abc.Messageable.send` to reply to the "
":class:`.Message`."
msgstr ""

#: discord.message.Message.reply:10 of
msgid ""
"The ``files`` list is not of the appropriate size, or     you specified "
"both ``file`` and ``files``."
msgstr ""

#: discord.message.Message.reply:13 of
msgid ":class:`.Message`"
msgstr ""

#: discord.message.Message.to_reference:1 of
msgid "Creates a :class:`~discord.MessageReference` from the current message."
msgstr ""

#: discord.message.Message.to_reference:5 of
msgid ""
"Whether replying using the message reference should raise "
":class:`HTTPException` if the message no longer exists or Discord could "
"not fetch the message.  .. versionadded:: 1.7"
msgstr ""

#: discord.message.Message.to_reference:5 of
msgid ""
"Whether replying using the message reference should raise "
":class:`HTTPException` if the message no longer exists or Discord could "
"not fetch the message."
msgstr ""

#: discord.message.Message.to_reference:11 of
msgid "The reference to this message."
msgstr ""

#: discord.message.Message.to_reference:12 of
msgid ":class:`~discord.MessageReference`"
msgstr ""

#: ../../api.rst:4183
msgid "Component"
msgstr ""

#: discord.components.Component:1 of
msgid "Represents a Discord Bot UI Kit Component."
msgstr ""

#: discord.components.Component:3 of
msgid "Currently, the only components supported by Discord are:"
msgstr ""

#: discord.components.Component:5 of
msgid ":class:`ActionRow`"
msgstr ""

#: discord.components.Component:6 of
msgid ":class:`Button`"
msgstr ""

#: discord.components.Component:7 of
msgid ":class:`SelectMenu`"
msgstr ""

#: discord.components.Component:9 of
msgid "This class is abstract and cannot be instantiated."
msgstr ""

#: discord.components.ActionRow:11 discord.components.Component:15 of
msgid "The type of component."
msgstr ""

#: discord.components.ActionRow:13 discord.components.Component:17 of
msgid ":class:`ComponentType`"
msgstr ""

#: ../../api.rst:4191
msgid "ActionRow"
msgstr ""

#: discord.components.ActionRow:1 of
msgid "Represents a Discord Bot UI Kit Action Row."
msgstr ""

#: discord.components.ActionRow:3 of
msgid "This is a component that holds up to 5 children components in a row."
msgstr ""

#: discord.components.ActionRow:5 discord.components.Button:3 of
msgid "This inherits from :class:`Component`."
msgstr ""

#: discord.components.ActionRow:17 of
msgid "The children components that this holds, if any."
msgstr ""

#: ../../api.rst:4199 ../../api.rst:4988
msgid "Button"
msgstr ""

#: discord.components.Button:1 of
msgid "Represents a button from the Discord Bot UI Kit."
msgstr ""

#: discord.components.Button:7 of
msgid ""
"The user constructible and usable type to create a button is "
":class:`discord.ui.Button` not this one."
msgstr ""

#: discord.components.Button:14 discord.ui.Button.style:1
#: discord.ui.button.Button:5 of
msgid "The style of the button."
msgstr ""

#: discord.components.Button:16 of
msgid ":class:`.ButtonStyle`"
msgstr ""

#: discord.components.Button:20 discord.ui.button.Button:7 of
msgid ""
"The ID of the button that gets received during an interaction. If this "
"button is for a URL, it does not have a custom ID."
msgstr ""

#: discord.components.Button:27 discord.ui.Button.url:1
#: discord.ui.button.Button:10 of
msgid "The URL this button sends you to."
msgstr ""

#: discord.components.Button:33 discord.ui.Button.disabled:1
#: discord.ui.button.Button:12 of
msgid "Whether the button is disabled or not."
msgstr ""

#: discord.components.Button:39 discord.ui.button.Button:14
#: discord.ui.button.button:15 of
msgid "The label of the button, if any."
msgstr ""

#: discord.components.Button:45 discord.ui.Button.emoji:1
#: discord.ui.button.Button:16 of
msgid "The emoji of the button, if available."
msgstr ""

#: discord.activity.Activity:101 discord.activity.CustomActivity:33
#: discord.components.Button:47 of
msgid "Optional[:class:`PartialEmoji`]"
msgstr ""

#: ../../api.rst:4208
msgid "SelectMenu"
msgstr ""

#: discord.components.SelectMenu:1 of
msgid "Represents a select menu from the Discord Bot UI Kit."
msgstr ""

#: discord.components.SelectMenu:3 of
msgid ""
"A select menu is functionally the same as a dropdown, however on mobile "
"it renders a bit differently."
msgstr ""

#: discord.components.SelectMenu:8 of
msgid ""
"The user constructible and usable type to create a select menu is "
":class:`discord.ui.Select` not this one."
msgstr ""

#: discord.components.SelectMenu:15 discord.ui.Select.custom_id:1 of
msgid "The ID of the select menu that gets received during an interaction."
msgstr ""

#: discord.components.SelectMenu:21 discord.ui.Select.placeholder:1
#: discord.ui.select.Select:12 discord.ui.select.select:10 of
msgid "The placeholder text that is shown if nothing is selected, if any."
msgstr ""

#: discord.components.SelectMenu:27 discord.ui.select.Select:14
#: discord.ui.select.select:21 of
msgid ""
"The minimum number of items that must be chosen for this select menu. "
"Defaults to 1 and must be between 1 and 25."
msgstr ""

#: discord.components.SelectMenu:34 discord.ui.select.Select:17
#: discord.ui.select.select:24 of
msgid ""
"The maximum number of items that must be chosen for this select menu. "
"Defaults to 1 and must be between 1 and 25."
msgstr ""

#: discord.components.SelectMenu:41 discord.ui.Select.options:1
#: discord.ui.select.Select:20 discord.ui.select.select:27 of
msgid "A list of options that can be selected in this menu."
msgstr ""

#: discord.components.SelectMenu:43 of
msgid "List[:class:`SelectOption`]"
msgstr ""

#: discord.components.SelectMenu:47 discord.ui.Select.disabled:1
#: discord.ui.select.Select:22 of
msgid "Whether the select is disabled or not."
msgstr ""

#: ../../api.rst:4218
msgid "DeletedReferencedMessage"
msgstr ""

#: discord.message.DeletedReferencedMessage:1 of
msgid ""
"A special sentinel type that denotes whether the resolved message "
"referenced message had since been deleted."
msgstr ""

#: discord.message.DeletedReferencedMessage:4 of
msgid ""
"The purpose of this class is to separate referenced messages that could "
"not be fetched and those that were previously fetched but have since been"
" deleted."
msgstr ""

#: discord.DeletedReferencedMessage.id:1 of
msgid "The message ID of the deleted referenced message."
msgstr ""

#: discord.DeletedReferencedMessage.channel_id:1 of
msgid "The channel ID of the deleted referenced message."
msgstr ""

#: discord.DeletedReferencedMessage.guild_id:1 of
msgid "The guild ID of the deleted referenced message."
msgstr ""

#: ../../api.rst:4227
msgid "Reaction"
msgstr ""

#: discord.reaction.Reaction:1 of
msgid "Represents a reaction to a message."
msgstr ""

#: discord.invite.Invite:3 discord.reaction.Reaction:3 of
msgid ""
"Depending on the way this object was created, some of the attributes can "
"have a value of ``None``."
msgstr ""

#: discord.reaction.Reaction:10 of
msgid ""
"Checks if two reactions are equal. This works by checking if the emoji is"
" the same. So two messages with the same reaction will be considered "
"\"equal\"."
msgstr ""

#: discord.reaction.Reaction:16 of
msgid "Checks if two reactions are not equal."
msgstr ""

#: discord.reaction.Reaction:20 of
msgid "Returns the reaction's hash."
msgstr ""

#: discord.reaction.Reaction:24 of
msgid "Returns the string form of the reaction's emoji."
msgstr ""

#: discord.reaction.Reaction:28 of
msgid "The reaction emoji. May be a custom emoji, or a unicode emoji."
msgstr ""

#: discord.reaction.Reaction:30 of
msgid "Union[:class:`Emoji`, :class:`PartialEmoji`, :class:`str`]"
msgstr ""

#: discord.reaction.Reaction:34 of
msgid "Number of times this reaction was made"
msgstr ""

#: discord.reaction.Reaction:40 of
msgid "If the user sent this reaction."
msgstr ""

#: discord.reaction.Reaction:46 of
msgid "Message this reaction is for."
msgstr ""

#: ../../docstring discord.Intents.dm_messages:15
#: discord.Intents.guild_messages:15 discord.Intents.messages:15
#: discord.message.PartialMessage.fetch:10 discord.reaction.Reaction:48 of
msgid ":class:`Message`"
msgstr ""

#: discord.reaction.Reaction.users:1 of
msgid ""
"Returns an :class:`AsyncIterator` representing the users that have "
"reacted to the message."
msgstr ""

#: discord.reaction.Reaction.users:3 of
msgid ""
"The ``after`` parameter must represent a member and meet the "
":class:`abc.Snowflake` abc."
msgstr ""

#: discord.reaction.Reaction.users:21 of
msgid ""
"The maximum number of results to return. If not provided, returns all the"
" users who reacted to the message."
msgstr ""

#: discord.reaction.Reaction.users:25 of
msgid "For pagination, reactions are sorted by member."
msgstr ""

#: discord.reaction.Reaction.users:28 of
msgid "Getting the users for the reaction failed."
msgstr ""

#: discord.reaction.Reaction.users:30 of
msgid ""
"Union[:class:`User`, :class:`Member`] -- The member (if retrievable) or "
"the user that has reacted to this message. The case where it can be a "
":class:`Member` is in a guild message context. Sometimes it can be a "
":class:`User` if the member has left the guild."
msgstr ""

#: discord.reaction.Reaction.is_custom_emoji:1 of
msgid ":class:`bool`: If this is a custom emoji."
msgstr ""

#: discord.reaction.Reaction.remove:3 of
msgid "Remove the reaction by the provided :class:`User` from the message."
msgstr ""

#: discord.reaction.Reaction.remove:5 of
msgid ""
"If the reaction is not your own (i.e. ``user`` parameter is not you) then"
" the :attr:`~Permissions.manage_messages` permission is needed."
msgstr ""

#: discord.reaction.Reaction.remove:8 of
msgid ""
"The ``user`` parameter must represent a user or member and meet the "
":class:`abc.Snowflake` abc."
msgstr ""

#: discord.reaction.Reaction.remove:11 of
msgid "The user or member from which to remove the reaction."
msgstr ""

#: discord.reaction.Reaction.remove:16 of
msgid "The user you specified, or the reaction's message was not found."
msgstr ""

#: discord.reaction.Reaction.clear:3 of
msgid "Clears this reaction from the message."
msgstr ""

#: ../../api.rst:4239
msgid "Guild"
msgstr ""

#: discord.guild.Guild:1 of
msgid "Represents a Discord guild."
msgstr ""

#: discord.guild.Guild:3 of
msgid "This is referred to as a \"server\" in the official Discord UI."
msgstr ""

#: discord.guild.Guild:9 of
msgid "Checks if two guilds are equal."
msgstr ""

#: discord.guild.Guild:13 of
msgid "Checks if two guilds are not equal."
msgstr ""

#: discord.guild.Guild:17 of
msgid "Returns the guild's hash."
msgstr ""

#: discord.guild.Guild:21 of
msgid "Returns the guild's name."
msgstr ""

#: discord.guild.Guild:25 of
msgid "The guild name."
msgstr ""

#: discord.guild.Guild:31 of
msgid "All emojis that the guild owns."
msgstr ""

#: discord.guild.Guild:33 of
msgid "Tuple[:class:`Emoji`, ...]"
msgstr ""

#: discord.guild.Guild:37 of
msgid "All stickers that the guild owns."
msgstr ""

#: discord.guild.Guild:41 of
msgid "Tuple[:class:`GuildSticker`, ...]"
msgstr ""

#: discord.guild.Guild:45 of
msgid "The timeout to get sent to the AFK channel."
msgstr ""

#: discord.guild.Guild:51 of
msgid "The channel that denotes the AFK channel. ``None`` if it doesn't exist."
msgstr ""

#: discord.guild.Guild:53 of
msgid "Optional[:class:`VoiceChannel`]"
msgstr ""

#: discord.guild.Guild:57 discord.widget.Widget:19 of
msgid "The guild's ID."
msgstr ""

#: discord.guild.Guild:63 of
msgid "The guild owner's ID. Use :attr:`Guild.owner` instead."
msgstr ""

#: discord.guild.Guild:69 of
msgid ""
"Indicates if the guild is unavailable. If this is ``True`` then the "
"reliability of other attributes outside of :attr:`Guild.id` is slim and "
"they might all be ``None``. It is best to not do anything with the guild "
"if it is unavailable."
msgstr ""

#: discord.guild.Guild:73 of
msgid ""
"Check the :func:`on_guild_unavailable` and :func:`on_guild_available` "
"events."
msgstr ""

#: discord.guild.Guild:79 of
msgid "The maximum amount of presences for the guild."
msgstr ""

#: discord.guild.Guild:85 of
msgid "The maximum amount of members for the guild."
msgstr ""

#: discord.guild.Guild:89 of
msgid "This attribute is only available via :meth:`.Client.fetch_guild`."
msgstr ""

#: discord.guild.Guild:95 of
msgid "The maximum amount of users in a video channel."
msgstr ""

#: discord.guild.Guild:103 of
msgid "The guild's description."
msgstr ""

#: discord.guild.Guild:109 of
msgid ""
"Indicates the guild's two-factor authorisation level. If this value is 0 "
"then the guild does not require 2FA for their administrative members. If "
"the value is 1 then they do."
msgstr ""

#: discord.guild.Guild:123 of
msgid "The guild's explicit content filter."
msgstr ""

#: discord.guild.Guild:129 of
msgid "The guild's notification settings."
msgstr ""

#: discord.guild.Guild:135 of
msgid ""
"A list of features that the guild has. The features that a guild can have"
" are subject to arbitrary change by Discord."
msgstr ""

#: discord.guild.Guild:138 of
msgid "They are currently as follows:"
msgstr ""

#: discord.guild.Guild:140 of
msgid "``ANIMATED_BANNER``: Guild can upload an animated banner."
msgstr ""

#: discord.guild.Guild:141 of
msgid "``ANIMATED_ICON``: Guild can upload an animated icon."
msgstr ""

#: discord.guild.Guild:142 of
msgid "``AUTO_MODERATION``: Guild has enabled the auto moderation system."
msgstr ""

#: discord.guild.Guild:143 of
msgid "``BANNER``: Guild can upload and use a banner. (i.e. :attr:`.banner`)"
msgstr ""

#: discord.guild.Guild:144 of
msgid "``CHANNEL_BANNER``: Guild can upload and use a channel banners."
msgstr ""

#: discord.guild.Guild:145 of
msgid ""
"``COMMERCE``: Guild can sell things using store channels, which have now "
"been removed."
msgstr ""

#: discord.guild.Guild:146 of
msgid "``COMMUNITY``: Guild is a community server."
msgstr ""

#: discord.guild.Guild:147 of
msgid "``DISCOVERABLE``: Guild shows up in Server Discovery."
msgstr ""

#: discord.guild.Guild:148 of
msgid "``HAS_DIRECTORY_ENTRY``: Unknown."
msgstr ""

#: discord.guild.Guild:149 of
msgid ""
"``HUB``: Hubs contain a directory channel that let you find school-"
"related,"
msgstr ""

#: discord.guild.Guild:150 of
msgid "student-run servers for your school or university."
msgstr ""

#: discord.guild.Guild:151 of
msgid ""
"``INTERNAL_EMPLOYEE_ONLY``: Indicates that only users with the staff "
"badge can join the guild."
msgstr ""

#: discord.guild.Guild:152 of
msgid "``INVITE_SPLASH``: Guild's invite page can have a special splash."
msgstr ""

#: discord.guild.Guild:153 of
msgid "``LINKED_TO_HUB``: 'Guild is linked to a hub."
msgstr ""

#: discord.guild.Guild:154 of
msgid "``MEMBER_PROFILES``: Unknown."
msgstr ""

#: discord.guild.Guild:155 of
msgid ""
"``MEMBER_VERIFICATION_GATE_ENABLED``: Guild has Membership Screening "
"enabled."
msgstr ""

#: discord.guild.Guild:156 of
msgid "``MONETIZATION_ENABLED``: Guild has enabled monetization."
msgstr ""

#: discord.guild.Guild:157 of
msgid "``MORE_EMOJI``: Guild has increased custom emoji slots."
msgstr ""

#: discord.guild.Guild:158 of
msgid "``MORE_STICKERS``: Guild has increased custom sticker slots."
msgstr ""

#: discord.guild.Guild:159 of
msgid "``NEWS``: Guild can create news channels."
msgstr ""

#: discord.guild.Guild:160 of
msgid "``NEW_THREAD_PERMISSIONS``: Guild has new thread permissions."
msgstr ""

#: discord.guild.Guild:161 of
msgid "``PARTNERED``: Guild is a partnered server."
msgstr ""

#: discord.guild.Guild:162 of
msgid ""
"``PREMIUM_TIER_3_OVERRIDE``: Forces the server to server boosting level 3"
" (specifically created by Discord"
msgstr ""

#: discord.guild.Guild:163 of
msgid "Staff Member \"Jethro\" for their personal server)."
msgstr ""

#: discord.guild.Guild:164 of
msgid ""
"``PREVIEW_ENABLED``: Guild can be viewed before being accepted via "
"Membership Screening."
msgstr ""

#: discord.guild.Guild:165 of
msgid "``PRIVATE_THREADS``: Guild has access to create private threads."
msgstr ""

#: discord.guild.Guild:166 of
msgid "``ROLE_ICONS``: Guild can set an image or emoji as a role icon."
msgstr ""

#: discord.guild.Guild:167 of
msgid ""
"``ROLE_SUBSCRIPTIONS_AVAILABLE_FOR_PURCHASE``: Role subscriptions are "
"available for purchasing."
msgstr ""

#: discord.guild.Guild:168 of
msgid ""
"``ROLE_SUBSCRIPTIONS_ENABLED``: Guild is able to view and manage role "
"subscriptions."
msgstr ""

#: discord.guild.Guild:169 of
msgid ""
"``TEXT_IN_VOICE_ENABLED``: Guild has a chat button inside voice channels "
"that opens a dedicated text channel"
msgstr ""

#: discord.guild.Guild:170 of
msgid "in a sidebar similar to thread view."
msgstr ""

#: discord.guild.Guild:171 of
msgid ""
"``THREADS_ENABLED_TESTING``: Used by bot developers to test their bots "
"with threads in guilds with 5 or fewer"
msgstr ""

#: discord.guild.Guild:172 of
msgid "members and a bot. Also gives the premium thread features."
msgstr ""

#: discord.guild.Guild:173 of
msgid "``TICKETED_EVENTS_ENABLED``: Guild has enabled ticketed events."
msgstr ""

#: discord.guild.Guild:174 of
msgid ""
"``VANITY_URL``: Guild can have a vanity invite URL (e.g. discord.gg"
"/discord-api)."
msgstr ""

#: discord.guild.Guild:175 of
msgid "``VERIFIED``: Guild is a verified server."
msgstr ""

#: discord.guild.Guild:176 of
msgid "``VIP_REGIONS``: Guild has VIP voice regions."
msgstr ""

#: discord.guild.Guild:177 of
msgid "``WELCOME_SCREEN_ENABLED``: Guild has enabled the welcome screen."
msgstr ""

#: discord.Spotify.artists:3 discord.guild.Guild:179
#: discord.invite.PartialInviteGuild:46 discord.sticker.StandardSticker:53
#: discord.ui.Select.values:3 of
msgid "List[:class:`str`]"
msgstr ""

#: discord.guild.Guild:183 of
msgid ""
"The premium tier for this guild. Corresponds to \"Nitro Server\" in the "
"official UI. The number goes from 0 to 3 inclusive."
msgstr ""

#: discord.guild.Guild:190 of
msgid "The number of \"boosts\" this guild currently has."
msgstr ""

#: discord.guild.Guild:196 of
msgid "Indicates if the guild has premium progress bar enabled."
msgstr ""

#: discord.guild.Guild:204 of
msgid ""
"The preferred locale for the guild. Used when filtering Server Discovery "
"results to a specific language."
msgstr ""

#: discord.guild.Guild:211 of
msgid "The guild's NSFW level."
msgstr ""

#: discord.guild.Guild:215 of
msgid ":class:`NSFWLevel`"
msgstr ""

#: discord.guild.Guild:219 of
msgid ""
"The approximate number of members in the guild. This is ``None`` unless "
"the guild is obtained using :meth:`Client.fetch_guild` with "
"``with_counts=True``."
msgstr ""

#: discord.guild.Guild:228 of
msgid ""
"The approximate number of members currently active in the guild. This "
"includes idle, dnd, online, and invisible members. Offline members are "
"excluded. This is ``None`` unless the guild is obtained using "
":meth:`Client.fetch_guild` with ``with_counts=True``."
msgstr ""

#: discord.guild.Guild.fetch_members:1 of
msgid ""
"Retrieves an :class:`.AsyncIterator` that enables receiving the guild's "
"members. In order to use this, :meth:`Intents.members` must be enabled."
msgstr ""

#: discord.guild.Guild.fetch_members:6 of
msgid ""
"This method is an API call. For general usage, consider :attr:`members` "
"instead."
msgstr ""

#: discord.guild.Guild.fetch_members:12 of
msgid ""
"The number of members to retrieve. Defaults to 1000. Pass ``None`` to "
"fetch all members. Note that this is potentially slow."
msgstr ""

#: discord.guild.Guild.fetch_members:15 of
msgid ""
"Retrieve members after this date or object. If a datetime is provided, it"
" is recommended to use a UTC aware datetime. If the datetime is naive, it"
" is assumed to be local time."
msgstr ""

#: discord.guild.Guild.chunk:13 discord.guild.Guild.fetch_members:20 of
msgid "The members intent is not enabled."
msgstr ""

#: discord.guild.Guild.fetch_members:21 of
msgid "Getting the members failed."
msgstr ""

#: discord.guild.Guild.fetch_members:23 of
msgid ":class:`.Member` -- The member with the member data parsed."
msgstr ""

#: discord.guild.Guild.audit_logs:1 of
msgid ""
"Returns an :class:`AsyncIterator` that enables receiving the guild's "
"audit logs."
msgstr ""

#: discord.guild.Guild.audit_logs:3 of
msgid ""
"You must have the :attr:`~Permissions.view_audit_log` permission to use "
"this."
msgstr ""

#: discord.guild.Guild.audit_logs:7 of
msgid "Getting the first 100 entries: ::"
msgstr ""

#: discord.guild.Guild.audit_logs:12 of
msgid "Getting entries for a specific action: ::"
msgstr ""

#: discord.guild.Guild.audit_logs:17 of
msgid "Getting entries made by a specific user: ::"
msgstr ""

#: discord.guild.Guild.audit_logs:22 of
msgid "The number of entries to retrieve. If ``None`` retrieve all entries."
msgstr ""

#: discord.guild.Guild.audit_logs:24 of
msgid ""
"Retrieve entries before this date or entry. If a datetime is provided, it"
" is recommended to use a UTC aware datetime. If the datetime is naive, it"
" is assumed to be local time."
msgstr ""

#: discord.guild.Guild.audit_logs:28 of
msgid ""
"Retrieve entries after this date or entry. If a datetime is provided, it "
"is recommended to use a UTC aware datetime. If the datetime is naive, it "
"is assumed to be local time."
msgstr ""

#: discord.guild.Guild.audit_logs:32 of
msgid ""
"If set to ``True``, return entries in oldest->newest order. Defaults to "
"``True`` if ``after`` is specified, otherwise ``False``."
msgstr ""

#: discord.guild.Guild.audit_logs:35 of
msgid "The moderator to filter entries from."
msgstr ""

#: discord.guild.Guild.audit_logs:37 of
msgid "The action to filter with."
msgstr ""

#: discord.guild.Guild.audit_logs:40 of
msgid "You are not allowed to fetch audit logs"
msgstr ""

#: discord.guild.Guild.audit_logs:41 of
msgid "An error occurred while fetching the audit logs."
msgstr ""

#: discord.guild.Guild.audit_logs:43 of
msgid ":class:`AuditLogEntry` -- The audit log entry."
msgstr ""

#: discord.Guild.channels:1 of
msgid "A list of channels that belong to this guild."
msgstr ""

#: discord.Guild.threads:1 of
msgid "A list of threads that you have permission to view."
msgstr ""

#: discord.ForumChannel.threads:5 discord.Guild.threads:5
#: discord.TextChannel.threads:5 discord.guild.Guild.active_threads:12 of
msgid "List[:class:`Thread`]"
msgstr ""

#: discord.Guild.jump_url:1 of
msgid "Returns a URL that allows the client to jump to the guild."
msgstr ""

#: discord.Guild.large:1 of
msgid "Indicates if the guild is a 'large' guild."
msgstr ""

#: discord.Guild.large:3 of
msgid ""
"A large guild is defined as having more than ``large_threshold`` count "
"members, which for this library is set to the maximum of 250."
msgstr ""

#: discord.Guild.voice_channels:1 of
msgid "A list of voice channels that belong to this guild."
msgstr ""

#: discord.Guild.categories:3 discord.Guild.forum_channels:5
#: discord.Guild.stage_channels:5 discord.Guild.text_channels:3
#: discord.Guild.voice_channels:3 of
msgid "This is sorted by the position and are in UI order from top to bottom."
msgstr ""

#: discord.CategoryChannel.voice_channels:3 discord.Guild.voice_channels:5 of
msgid "List[:class:`VoiceChannel`]"
msgstr ""

#: discord.Guild.stage_channels:1 of
msgid "A list of stage channels that belong to this guild."
msgstr ""

#: discord.CategoryChannel.stage_channels:5 discord.Guild.stage_channels:7 of
msgid "List[:class:`StageChannel`]"
msgstr ""

#: discord.Guild.forum_channels:1 of
msgid "A list of forum channels that belong to this guild."
msgstr ""

#: discord.CategoryChannel.forum_channels:5 discord.Guild.forum_channels:7 of
msgid "List[:class:`ForumChannel`]"
msgstr ""

#: discord.Guild.me:1 of
msgid ""
"Similar to :attr:`Client.user` except an instance of :class:`Member`. "
"This is essentially used to get the member version of yourself."
msgstr ""

#: discord.Guild.me:4 discord.guild.Guild.fetch_member:17 of
msgid ":class:`Member`"
msgstr ""

#: discord.Guild.voice_client:1 of
msgid "Returns the :class:`VoiceProtocol` associated with this guild, if any."
msgstr ""

#: discord.Guild.voice_client:3 of
msgid "Optional[:class:`VoiceProtocol`]"
msgstr ""

#: discord.Guild.text_channels:1 of
msgid "A list of text channels that belong to this guild."
msgstr ""

#: discord.CategoryChannel.text_channels:3 discord.Guild.text_channels:5 of
msgid "List[:class:`TextChannel`]"
msgstr ""

#: discord.Guild.categories:1 of
msgid "A list of categories that belong to this guild."
msgstr ""

#: discord.Guild.categories:5 of
msgid "List[:class:`CategoryChannel`]"
msgstr ""

#: discord.guild.Guild.by_category:1 of
msgid "Returns every :class:`CategoryChannel` and their associated channels."
msgstr ""

#: discord.guild.Guild.by_category:3 of
msgid "These channels and categories are sorted in the official Discord UI order."
msgstr ""

#: discord.guild.Guild.by_category:5 of
msgid ""
"If the channels do not have a category, then the first element of the "
"tuple is ``None``."
msgstr ""

#: discord.guild.Guild.by_category:8 of
msgid "The categories and their associated channels."
msgstr ""

#: discord.guild.Guild.by_category:9 of
msgid ""
"List[Tuple[Optional[:class:`CategoryChannel`], "
"List[:class:`abc.GuildChannel`]]]"
msgstr ""

#: discord.guild.Guild.get_channel_or_thread:8 of
msgid "The returned channel or thread or ``None`` if not found."
msgstr ""

#: discord.guild.Guild.get_channel_or_thread:9 of
msgid "Optional[Union[:class:`Thread`, :class:`.abc.GuildChannel`]]"
msgstr ""

#: discord.guild.Guild.get_channel:1 of
msgid "Returns a channel with the given ID."
msgstr ""

#: discord.guild.Guild.get_channel:5 of
msgid "This does *not* search for threads."
msgstr ""

#: discord.guild.Guild.get_channel:11 of
msgid "Optional[:class:`.abc.GuildChannel`]"
msgstr ""

#: discord.channel._TextChannel.get_thread:1 discord.guild.Guild.get_thread:1
#: of
msgid "Returns a thread with the given ID."
msgstr ""

#: discord.channel._TextChannel.get_thread:8 discord.guild.Guild.get_thread:8
#: of
msgid "The returned thread or ``None`` if not found."
msgstr ""

#: discord.Guild.system_channel:1 of
msgid "Returns the guild's channel used for system messages."
msgstr ""

#: discord.Guild.public_updates_channel:5 discord.Guild.rules_channel:4
#: discord.Guild.system_channel:3 of
msgid "If no channel is set, then this returns ``None``."
msgstr ""

#: discord.Guild.system_channel_flags:1 of
msgid "Returns the guild's system channel settings."
msgstr ""

#: discord.Guild.system_channel_flags:3 of
msgid ":class:`SystemChannelFlags`"
msgstr ""

#: discord.Guild.rules_channel:1 of
msgid ""
"Return's the guild's channel used for the rules. The guild must be a "
"Community guild."
msgstr ""

#: discord.Guild.public_updates_channel:1 of
msgid ""
"Return's the guild's channel where admins and moderators of the guilds "
"receive notices from Discord. The guild must be a Community guild."
msgstr ""

#: discord.Guild.emoji_limit:1 of
msgid "The maximum number of emoji slots this guild has."
msgstr ""

#: discord.Guild.sticker_limit:1 of
msgid "The maximum number of sticker slots this guild has."
msgstr ""

#: discord.Guild.bitrate_limit:1 of
msgid "The maximum bitrate for voice channels this guild can have."
msgstr ""

#: discord.Guild.filesize_limit:1 of
msgid "The maximum number of bytes files can have when uploaded to this guild."
msgstr ""

#: discord.Guild.members:1 of
msgid "A list of members that belong to this guild."
msgstr ""

#: discord.ForumChannel.members:3 discord.Guild.members:3
#: discord.Guild.premium_subscribers:3 discord.Role.members:3
#: discord.StageChannel.listeners:5 discord.StageChannel.members:3
#: discord.StageChannel.moderators:5 discord.StageChannel.requesting_to_speak:3
#: discord.StageChannel.speakers:5 discord.TextChannel.members:3
#: discord.VoiceChannel.members:3 discord.guild.Guild.query_members:33
#: discord.widget.Widget:47 of
msgid "List[:class:`Member`]"
msgstr ""

#: discord.guild.Guild.get_member:1 of
msgid "Returns a member with the given ID."
msgstr ""

#: discord.guild.Guild.get_member:6 of
msgid "The member or ``None`` if not found."
msgstr ""

#: discord.AutoModRule.creator:3 discord.Guild.owner:3 discord.Thread.owner:3
#: discord.guild.Guild.get_member:7 discord.guild.Guild.get_member_named:20
#: discord.raw_models.AutoModActionExecutionEvent:39
#: discord.raw_models.RawReactionActionEvent:41
#: discord.raw_models.RawTypingEvent:33 of
msgid "Optional[:class:`Member`]"
msgstr ""

#: discord.Guild.premium_subscribers:1 of
msgid "A list of members who have \"boosted\" this guild."
msgstr ""

#: discord.Guild.roles:1 of
msgid "Returns a :class:`list` of the guild's roles in hierarchy order."
msgstr ""

#: discord.Guild.roles:3 of
msgid "The first element of this list will be the lowest role in the hierarchy."
msgstr ""

#: discord.guild.Guild.get_role:1 of
msgid "Returns a role with the given ID."
msgstr ""

#: discord.guild.Guild.get_role:6 of
msgid "The role or ``None`` if not found."
msgstr ""

#: discord.Guild.premium_subscriber_role:5 discord.Guild.self_role:5
#: discord.StreamIntegration.role:3 discord.guild.Guild.get_role:7
#: discord.member.Member.get_role:9 of
msgid "Optional[:class:`Role`]"
msgstr ""

#: discord.Guild.default_role:1 of
msgid "Gets the @everyone role that all members have by default."
msgstr ""

#: discord.Guild.default_role:3 discord.Member.top_role:6
#: discord.guild.Guild.create_role:34 discord.role.Role.edit:46 of
msgid ":class:`Role`"
msgstr ""

#: discord.Guild.premium_subscriber_role:1 of
msgid "Gets the premium subscriber role, AKA \"boost\" role, in this guild."
msgstr ""

#: discord.Guild.self_role:1 of
msgid "Gets the role associated with this client's user, if any."
msgstr ""

#: discord.Guild.stage_instances:1 of
msgid ""
"Returns a :class:`list` of the guild's stage instances that are currently"
" running."
msgstr ""

#: discord.Guild.stage_instances:6 of
msgid "List[:class:`StageInstance`]"
msgstr ""

#: discord.guild.Guild.get_stage_instance:1 of
msgid "Returns a stage instance with the given ID."
msgstr ""

#: discord.StageChannel.instance:5 discord.guild.Guild.get_stage_instance:9 of
msgid "Optional[:class:`StageInstance`]"
msgstr ""

#: discord.Guild.owner:1 of
msgid "The member that owns the guild."
msgstr ""

#: discord.Guild.icon:1 discord.PartialInviteGuild.icon:1
#: discord.PartialWebhookGuild.icon:1 of
msgid "Returns the guild's icon asset, if available."
msgstr ""

#: discord.Guild.banner:1 discord.PartialInviteGuild.banner:1 of
msgid "Returns the guild's banner asset, if available."
msgstr ""

#: discord.Guild.splash:1 discord.PartialInviteGuild.splash:1 of
msgid "Returns the guild's invite splash asset, if available."
msgstr ""

#: discord.Guild.discovery_splash:1 of
msgid "Returns the guild's discovery splash asset, if available."
msgstr ""

#: discord.Guild.member_count:1 of
msgid "Returns the true member count regardless of it being loaded fully or not."
msgstr ""

#: discord.Guild.member_count:5 of
msgid ""
"Due to a Discord limitation, in order for this attribute to remain up-to-"
"date and accurate, it requires :attr:`Intents.members` to be specified."
msgstr ""

#: discord.Guild.chunked:1 of
msgid "Returns a boolean indicating if the guild is \"chunked\"."
msgstr ""

#: discord.Guild.chunked:3 of
msgid ""
"A chunked guild means that :attr:`member_count` is equal to the number of"
" members stored in the internal :attr:`members` cache."
msgstr ""

#: discord.Guild.chunked:6 of
msgid ""
"If this value returns ``False``, then you should request for offline "
"members."
msgstr ""

#: discord.Guild.shard_id:1 of
msgid "Returns the shard ID for this guild if applicable."
msgstr ""

#: discord.Guild.created_at:1 discord.PartialInviteGuild.created_at:1 of
msgid "Returns the guild's creation time in UTC."
msgstr ""

#: discord.guild.Guild.get_member_named:1 of
msgid "Returns the first member found that matches the name provided."
msgstr ""

#: discord.guild.Guild.get_member_named:3 of
msgid ""
"The name can have an optional discriminator argument, e.g. \"Jake#0001\" "
"or \"Jake\" will both do the lookup. However, the former will give a more"
" precise result. Note that the discriminator must have all 4 digits for "
"this to work."
msgstr ""

#: discord.guild.Guild.get_member_named:8 of
msgid ""
"If a nickname is passed, then it is looked up via the nickname. Note "
"however, that a nickname + discriminator combo will not look up the "
"nickname but rather the username + discriminator combo due to nickname + "
"discriminator not being unique."
msgstr ""

#: discord.guild.Guild.get_member_named:13 of
msgid "If no member is found, ``None`` is returned."
msgstr ""

#: discord.guild.Guild.get_member_named:15 of
msgid "The name of the member to lookup with an optional discriminator."
msgstr ""

#: discord.guild.Guild.get_member_named:18 of
msgid ""
"The member in this guild with the associated name. If not found then "
"``None`` is returned."
msgstr ""

#: discord.guild.Guild.create_text_channel:3 of
msgid "Creates a :class:`TextChannel` for the guild."
msgstr ""

#: discord.guild.Guild.create_forum_channel:5
#: discord.guild.Guild.create_text_channel:5 of
msgid ""
"Note that you need the :attr:`~Permissions.manage_channels` permission to"
" create the channel."
msgstr ""

#: discord.guild.Guild.create_forum_channel:8
#: discord.guild.Guild.create_text_channel:8 of
msgid ""
"The ``overwrites`` parameter can be used to create a 'secret' channel "
"upon creation. This parameter expects a :class:`dict` of overwrites with "
"the target (either a :class:`Member` or a :class:`Role`) as the key and a"
" :class:`PermissionOverwrite` as the value."
msgstr ""

#: discord.guild.Guild.create_text_channel:15 of
msgid ""
"Creating a channel of a specified position will not update the position "
"of other channels to follow suit. A follow-up call to "
":meth:`~TextChannel.edit` will be required to update the position of the "
"channel in the channel list."
msgstr ""

#: discord.guild.Guild.create_forum_channel:21
#: discord.guild.Guild.create_text_channel:21 of
msgid "Creating a basic channel:"
msgstr ""

#: discord.guild.Guild.create_forum_channel:27
#: discord.guild.Guild.create_text_channel:27 of
msgid "Creating a \"secret\" channel:"
msgstr ""

#: discord.guild.Guild.create_forum_channel:38
#: discord.guild.Guild.create_stage_channel:7
#: discord.guild.Guild.create_text_channel:38
#: discord.guild.Guild.create_voice_channel:5 discord.widget.WidgetChannel:29
#: of
msgid "The channel's name."
msgstr ""

#: discord.guild.Guild.create_forum_channel:40
#: discord.guild.Guild.create_stage_channel:11
#: discord.guild.Guild.create_text_channel:40
#: discord.guild.Guild.create_voice_channel:7 of
msgid ""
"The overwrites to apply to the channel. Useful for creating secret "
"channels."
msgstr ""

#: discord.guild.Guild.create_forum_channel:42
#: discord.guild.Guild.create_stage_channel:13
#: discord.guild.Guild.create_text_channel:42
#: discord.guild.Guild.create_voice_channel:9 of
msgid ""
"The category to place the newly created channel under. The permissions "
"will be automatically synced to category if no overwrites are provided."
msgstr ""

#: discord.channel._TextChannel.edit:19
#: discord.guild.Guild.create_forum_channel:49
#: discord.guild.Guild.create_stage_channel:9
#: discord.guild.Guild.create_text_channel:49 of
msgid "The new channel's topic."
msgstr ""

#: discord.guild.Guild.create_forum_channel:51
#: discord.guild.Guild.create_text_channel:51 of
msgid ""
"Specifies the slowmode rate limit for user in this channel, in seconds. "
"The maximum value possible is `21600`."
msgstr ""

#: discord.channel._TextChannel.edit:23
#: discord.guild.Guild.create_forum_channel:54
#: discord.guild.Guild.create_text_channel:54 of
msgid "To mark the channel as NSFW or not."
msgstr ""

#: discord.guild.Guild.create_forum_channel:56
#: discord.guild.Guild.create_stage_channel:20
#: discord.guild.Guild.create_text_channel:56
#: discord.guild.Guild.create_voice_channel:29 of
msgid "The reason for creating this channel. Shows up on the audit log."
msgstr ""

#: discord.guild.Guild.create_category:12
#: discord.guild.Guild.create_forum_channel:61
#: discord.guild.Guild.create_stage_channel:25
#: discord.guild.Guild.create_text_channel:61
#: discord.guild.Guild.create_voice_channel:34 of
msgid "The permission overwrite information is not in proper form."
msgstr ""

#: discord.channel.CategoryChannel.create_forum_channel:7
#: discord.channel.CategoryChannel.create_stage_channel:7
#: discord.channel.CategoryChannel.create_text_channel:5
#: discord.channel.CategoryChannel.create_voice_channel:5
#: discord.guild.Guild.create_category:14
#: discord.guild.Guild.create_forum_channel:63
#: discord.guild.Guild.create_stage_channel:27
#: discord.guild.Guild.create_text_channel:63
#: discord.guild.Guild.create_voice_channel:36 of
msgid "The channel that was just created."
msgstr ""

#: discord.channel.CategoryChannel.create_text_channel:6
#: discord.guild.Guild.create_text_channel:64 of
msgid ":class:`TextChannel`"
msgstr ""

#: discord.guild.Guild.create_voice_channel:3 of
msgid ""
"This is similar to :meth:`create_text_channel` except makes a "
":class:`VoiceChannel` instead."
msgstr ""

#: discord.channel.StageChannel:62 discord.channel.VoiceChannel:54
#: discord.guild.Guild.create_voice_channel:16 of
msgid "The channel's preferred audio bitrate in bits per second."
msgstr ""

#: discord.channel.VoiceChannel:60 discord.guild.Guild.create_voice_channel:18
#: of
msgid "The channel's limit for number of members that can be in a voice channel."
msgstr ""

#: discord.guild.Guild.create_voice_channel:20 of
msgid ""
"The region for the voice channel's voice communication. A value of "
"``None`` indicates automatic voice region detection.  .. versionadded:: "
"1.7"
msgstr ""

#: discord.channel.VoiceChannel:66 discord.guild.Guild.create_voice_channel:20
#: of
msgid ""
"The region for the voice channel's voice communication. A value of "
"``None`` indicates automatic voice region detection."
msgstr ""

#: discord.channel.VoiceChannel.edit:37
#: discord.guild.Guild.create_voice_channel:25 of
msgid ""
"The camera video quality for the voice channel's participants.  .. "
"versionadded:: 2.0"
msgstr ""

#: discord.channel.CategoryChannel.create_voice_channel:6
#: discord.guild.Guild.create_voice_channel:37 of
msgid ":class:`VoiceChannel`"
msgstr ""

#: discord.guild.Guild.create_stage_channel:3 of
msgid ""
"This is similar to :meth:`create_text_channel` except makes a "
":class:`StageChannel` instead."
msgstr ""

#: discord.channel.CategoryChannel.create_stage_channel:8
#: discord.guild.Guild.create_stage_channel:28 of
msgid ":class:`StageChannel`"
msgstr ""

#: discord.guild.Guild.create_forum_channel:3 of
msgid "Creates a :class:`ForumChannel` for the guild."
msgstr ""

#: discord.guild.Guild.create_forum_channel:15 of
msgid ""
"Creating a channel of a specified position will not update the position "
"of other channels to follow suit. A follow-up call to "
":meth:`~ForumChannel.edit` will be required to update the position of the"
" channel in the channel list."
msgstr ""

#: discord.channel.CategoryChannel.create_forum_channel:8
#: discord.guild.Guild.create_forum_channel:64 of
msgid ":class:`ForumChannel`"
msgstr ""

#: discord.guild.Guild.create_category:3 of
msgid ""
"Same as :meth:`create_text_channel` except makes a "
":class:`CategoryChannel` instead."
msgstr ""

#: discord.guild.Guild.create_category:7 of
msgid ""
"The ``category`` parameter is not supported in this function since "
"categories cannot have categories."
msgstr ""

#: discord.guild.Guild.create_category:15 of
msgid ":class:`CategoryChannel`"
msgstr ""

#: discord.guild.Guild.leave:3 of
msgid "Leaves the guild."
msgstr ""

#: discord.guild.Guild.leave:7 of
msgid ""
"You cannot leave the guild that you own, you must delete it instead via "
":meth:`delete`."
msgstr ""

#: discord.guild.Guild.leave:10 of
msgid "Leaving the guild failed."
msgstr ""

#: discord.guild.Guild.delete:3 of
msgid "Deletes the guild. You must be the guild owner to delete the guild."
msgstr ""

#: discord.guild.Guild.delete:6 of
msgid "Deleting the guild failed."
msgstr ""

#: discord.guild.Guild.delete:7 of
msgid "You do not have permissions to delete the guild."
msgstr ""

#: discord.guild.Guild.set_mfa_required:3 of
msgid ""
"Set whether it is required to have MFA enabled on your account to perform"
" moderation actions. You must be the guild owner to do this."
msgstr ""

#: discord.guild.Guild.set_mfa_required:6 of
msgid "Whether MFA should be required to perform moderation actions."
msgstr ""

#: discord.guild.Guild.set_mfa_required:8 of
msgid "The reason to show up in the audit log."
msgstr ""

#: discord.automod.AutoModRule.delete:9 discord.automod.AutoModRule.edit:23
#: discord.guild.Guild.create_scheduled_event:22
#: discord.guild.Guild.set_mfa_required:11 discord.member.Member.edit:55
#: discord.member.Member.request_to_speak:15
#: discord.scheduled_events.ScheduledEvent.cancel:13
#: discord.scheduled_events.ScheduledEvent.complete:13
#: discord.scheduled_events.ScheduledEvent.delete:6
#: discord.scheduled_events.ScheduledEvent.edit:35
#: discord.scheduled_events.ScheduledEvent.start:13 of
msgid "The operation failed."
msgstr ""

#: discord.guild.Guild.set_mfa_required:12 of
msgid "You are not the owner of the guild."
msgstr ""

#: discord.guild.Guild.edit:3 of
msgid "Edits the guild."
msgstr ""

#: discord.guild.Guild.edit:5 of
msgid ""
"You must have the :attr:`~Permissions.manage_guild` permission to edit "
"the guild."
msgstr ""

#: discord.guild.Guild.edit:8 of
msgid ""
"The `rules_channel` and `public_updates_channel` keyword-only parameters "
"were added."
msgstr ""

#: discord.guild.Guild.edit:11 of
msgid "The `discovery_splash` and `community` keyword-only parameters were added."
msgstr ""

#: discord.guild.Guild.edit:14 of
msgid "The newly updated guild is returned."
msgstr ""

#: discord.guild.Guild.edit:17 of
msgid "The new name of the guild."
msgstr ""

#: discord.guild.Guild.edit:19 of
msgid ""
"The new description of the guild. Could be ``None`` for no description. "
"This is only available to guilds that contain ``PUBLIC`` in "
":attr:`Guild.features`."
msgstr ""

#: discord.guild.Guild.edit:22 of
msgid ""
"A :term:`py:bytes-like object` representing the icon. Only PNG/JPEG is "
"supported. GIF is only available to guilds that contain ``ANIMATED_ICON``"
" in :attr:`Guild.features`. Could be ``None`` to denote removal of the "
"icon."
msgstr ""

#: discord.guild.Guild.edit:26 of
msgid ""
"A :term:`py:bytes-like object` representing the banner. Could be ``None``"
" to denote removal of the banner. This is only available to guilds that "
"contain ``BANNER`` in :attr:`Guild.features`."
msgstr ""

#: discord.guild.Guild.edit:30 of
msgid ""
"A :term:`py:bytes-like object` representing the invite splash. Only "
"PNG/JPEG supported. Could be ``None`` to denote removing the splash. This"
" is only available to guilds that contain ``INVITE_SPLASH`` in "
":attr:`Guild.features`."
msgstr ""

#: discord.guild.Guild.edit:35 of
msgid ""
"A :term:`py:bytes-like object` representing the discovery splash. Only "
"PNG/JPEG supported. Could be ``None`` to denote removing the splash. This"
" is only available to guilds that contain ``DISCOVERABLE`` in "
":attr:`Guild.features`."
msgstr ""

#: discord.guild.Guild.edit:40 of
msgid ""
"Whether the guild should be a Community guild. If set to ``True``\\, both"
" ``rules_channel`` and ``public_updates_channel`` parameters are "
"required."
msgstr ""

#: discord.guild.Guild.edit:43 of
msgid ""
"The new channel that is the AFK channel. Could be ``None`` for no AFK "
"channel."
msgstr ""

#: discord.guild.Guild.edit:45 of
msgid "The number of seconds until someone is moved to the AFK channel."
msgstr ""

#: discord.guild.Guild.edit:47 of
msgid ""
"The new owner of the guild to transfer ownership to. Note that you must "
"be owner of the guild to do this."
msgstr ""

#: discord.guild.Guild.edit:50 of
msgid "The new verification level for the guild."
msgstr ""

#: discord.guild.Guild.edit:52 of
msgid "The new default notification level for the guild."
msgstr ""

#: discord.guild.Guild.edit:54 of
msgid "The new explicit content filter for the guild."
msgstr ""

#: discord.guild.Guild.edit:56 of
msgid "The new vanity code for the guild."
msgstr ""

#: discord.guild.Guild.edit:58 of
msgid ""
"The new channel that is used for the system channel. Could be ``None`` "
"for no system channel."
msgstr ""

#: discord.guild.Guild.edit:60 of
msgid "The new system channel settings to use with the new system channel."
msgstr ""

#: discord.guild.Guild.edit:62 of
msgid ""
"The new preferred locale for the guild. Used as the primary language in "
"the guild. If set, this must be an ISO 639 code, e.g. ``en-US`` or ``ja``"
" or ``zh-CN``."
msgstr ""

#: discord.guild.Guild.edit:65 of
msgid ""
"The new channel that is used for rules. This is only available to guilds "
"that contain ``PUBLIC`` in :attr:`Guild.features`. Could be ``None`` for "
"no rules channel."
msgstr ""

#: discord.guild.Guild.edit:69 of
msgid ""
"The new channel that is used for public updates from Discord. This is "
"only available to guilds that contain ``PUBLIC`` in "
":attr:`Guild.features`. Could be ``None`` for no public updates channel."
msgstr ""

#: discord.guild.Guild.edit:73 of
msgid "Whether the guild should have premium progress bar enabled."
msgstr ""

#: discord.guild.Guild.edit:75 of
msgid "The reason for editing this guild. Shows up on the audit log."
msgstr ""

#: discord.guild.Guild.edit:78 of
msgid "You do not have permissions to edit the guild."
msgstr ""

#: discord.guild.Guild.edit:79 discord.integrations.StreamIntegration.edit:16
#: of
msgid "Editing the guild failed."
msgstr ""

#: discord.guild.Guild.edit:80 of
msgid ""
"The image format passed in to ``icon`` is invalid. It must be     PNG or "
"JPG. This is also raised if you are not the owner of the     guild and "
"request an ownership transfer."
msgstr ""

#: discord.guild.Guild.edit:82 of
msgid ""
"The newly updated guild. Note that this has the same limitations as "
"mentioned in :meth:`Client.fetch_guild` and may not have full data."
msgstr ""

#: discord.Emoji.guild:3 discord.WelcomeScreen.guild:3
#: discord.channel.CategoryChannel:33 discord.channel.ForumChannel:31
#: discord.channel.StageChannel:33 discord.channel.TextChannel:31
#: discord.channel.VoiceChannel:31 discord.guild.Guild.edit:84
#: discord.integrations.BotIntegration:21 discord.integrations.Integration:21
#: discord.integrations.StreamIntegration:21 discord.member.Member:48
#: discord.role.Role:53 discord.scheduled_events.ScheduledEvent:27
#: discord.stage_instance.StageInstance:29 discord.template.Template:52
#: discord.threads.Thread:33 of
msgid ":class:`Guild`"
msgstr ""

#: discord.guild.Guild.fetch_channels:3 of
msgid "Retrieves all :class:`abc.GuildChannel` that the guild has."
msgstr ""

#: discord.guild.Guild.fetch_channels:7 of
msgid ""
"This method is an API call. For general usage, consider :attr:`channels` "
"instead."
msgstr ""

#: discord.guild.Guild.fetch_channels:12 of
msgid "Retrieving the channels failed."
msgstr ""

#: discord.guild.Guild.fetch_channels:14 of
msgid "All channels in the guild."
msgstr ""

#: discord.guild.Guild.fetch_channels:15 of
msgid "Sequence[:class:`abc.GuildChannel`]"
msgstr ""

#: discord.guild.Guild.active_threads:3 of
msgid "Returns a list of active :class:`Thread` that the client can access."
msgstr ""

#: discord.guild.Guild.active_threads:5 of
msgid "This includes both private and public threads."
msgstr ""

#: discord.guild.Guild.active_threads:9 of
msgid "The request to get the active threads failed."
msgstr ""

#: discord.guild.Guild.active_threads:11 of
msgid "The active threads"
msgstr ""

#: discord.guild.Guild.fetch_member:3 of
msgid "Retrieves a :class:`Member` from a guild ID, and a member ID."
msgstr ""

#: discord.guild.Guild.fetch_member:7 of
msgid ""
"This method is an API call. If you have :attr:`Intents.members` and "
"member cache enabled, consider :meth:`get_member` instead."
msgstr ""

#: discord.guild.Guild.fetch_member:10 of
msgid "The member's ID to fetch from."
msgstr ""

#: discord.guild.Guild.fetch_member:14 of
msgid "Fetching the member failed."
msgstr ""

#: discord.guild.Guild.fetch_member:16 of
msgid "The member from the member ID."
msgstr ""

#: discord.guild.Guild.fetch_ban:3 of
msgid "Retrieves the :class:`BanEntry` for a user."
msgstr ""

#: discord.guild.Guild.fetch_ban:5 of
msgid ""
"You must have the :attr:`~Permissions.ban_members` permission to get this"
" information."
msgstr ""

#: discord.guild.Guild.fetch_ban:8 of
msgid "The user to get ban information from."
msgstr ""

#: discord.guild.Guild.fetch_ban:12 of
msgid "This user is not banned."
msgstr ""

#: discord.guild.Guild.fetch_ban:15 of
msgid "The :class:`BanEntry` object for the specified user."
msgstr ""

#: discord.guild.Guild.fetch_ban:16 of
msgid ":class:`BanEntry`"
msgstr ""

#: discord.guild.Guild.fetch_channel:3 of
msgid ""
"Retrieves a :class:`.abc.GuildChannel` or :class:`.Thread` with the "
"specified ID."
msgstr ""

#: discord.guild.Guild.fetch_channel:7 of
msgid ""
"This method is an API call. For general usage, consider "
":meth:`get_channel_or_thread` instead."
msgstr ""

#: discord.guild.Guild.fetch_channel:11 of
msgid ""
"An unknown channel type was received from Discord     or the guild the "
"channel belongs to is not the same     as the one in this object points "
"to."
msgstr ""

#: discord.guild.Guild.fetch_channel:17 of
msgid "Union[:class:`.abc.GuildChannel`, :class:`.Thread`]"
msgstr ""

#: discord.guild.Guild.bans:3 of
msgid ""
"Retrieves an :class:`.AsyncIterator` that enables receiving the guild's "
"bans. In order to use this, you must have the "
":attr:`~Permissions.ban_members` permission."
msgstr ""

#: discord.guild.Guild.bans:6 of
msgid ""
"The ``limit``, ``before``. and ``after`` parameters were added. Now "
"returns a :class:`.BanIterator` instead of a list of ``BanEntry`` "
"objects."
msgstr ""

#: discord.guild.Guild.bans:12 of
msgid "The number of bans to retrieve. Defaults to 1000."
msgstr ""

#: discord.guild.Guild.bans:14 of
msgid ""
"Retrieve bans before this date or object. If a datetime is provided, it "
"is recommended to use a UTC aware datetime. If the datetime is naive, it "
"is assumed to be local time."
msgstr ""

#: discord.guild.Guild.bans:18 of
msgid ""
"Retrieve bans after this date or object. If a datetime is provided, it is"
" recommended to use a UTC aware datetime. If the datetime is naive, it is"
" assumed to be local time."
msgstr ""

#: discord.guild.Guild.bans:26 of
msgid ":class:`.BanEntry` -- The ban entry for the ban."
msgstr ""

#: discord.guild.Guild.prune_members:3 of
msgid "Prunes the guild from its inactive members."
msgstr ""

#: discord.guild.Guild.prune_members:5 of
msgid ""
"The inactive members are denoted if they have not logged on in ``days`` "
"number of days and have no roles."
msgstr ""

#: discord.guild.Guild.prune_members:8 of
msgid ""
"You must have the :attr:`~Permissions.kick_members` permission to use "
"this."
msgstr ""

#: discord.guild.Guild.prune_members:11 of
msgid ""
"To check how many members you would prune without actually pruning, see "
"the :meth:`estimate_pruned_members` function."
msgstr ""

#: discord.guild.Guild.prune_members:14 of
msgid "To prune members that have specific roles see the ``roles`` parameter."
msgstr ""

#: discord.guild.Guild.prune_members:16 of
msgid "The ``roles`` keyword-only parameter was added."
msgstr ""

#: discord.guild.Guild.estimate_pruned_members:7
#: discord.guild.Guild.prune_members:19 of
msgid "The number of days before counting as inactive."
msgstr ""

#: discord.guild.Guild.prune_members:23 of
msgid ""
"Whether to compute the prune count. This defaults to ``True`` which makes"
" it prone to timeouts in very large guilds. In order to prevent timeouts,"
" you must set this to ``False``. If this is set to ``False``\\, then this"
" function will always return ``None``."
msgstr ""

#: discord.guild.Guild.prune_members:28 of
msgid ""
"A list of :class:`abc.Snowflake` that represent roles to include in the "
"pruning process. If a member has a role that is not specified, they'll be"
" excluded."
msgstr ""

#: discord.guild.Guild.estimate_pruned_members:15
#: discord.guild.Guild.prune_members:32 of
msgid "You do not have permissions to prune members."
msgstr ""

#: discord.guild.Guild.prune_members:33 of
msgid "An error occurred while pruning members."
msgstr ""

#: discord.guild.Guild.estimate_pruned_members:17
#: discord.guild.Guild.prune_members:34 of
msgid "An integer was not passed for ``days``."
msgstr ""

#: discord.guild.Guild.prune_members:36 of
msgid ""
"The number of members pruned. If ``compute_prune_count`` is ``False`` "
"then this returns ``None``."
msgstr ""

#: discord.guild.Guild.templates:3 of
msgid "Gets the list of templates from this guild."
msgstr ""

#: discord.guild.Guild.templates:5 of
msgid "Requires :attr:`~.Permissions.manage_guild` permissions."
msgstr ""

#: discord.guild.Guild.templates:9 of
msgid "You don't have permissions to get the templates."
msgstr ""

#: discord.guild.Guild.templates:11 of
msgid "The templates for this guild."
msgstr ""

#: discord.guild.Guild.templates:12 of
msgid "List[:class:`Template`]"
msgstr ""

#: discord.guild.Guild.webhooks:3 of
msgid "Gets the list of webhooks from this guild."
msgstr ""

#: discord.channel.VoiceChannel.create_webhook:5
#: discord.channel.VoiceChannel.webhooks:5
#: discord.channel._TextChannel.create_webhook:5
#: discord.channel._TextChannel.webhooks:5 discord.guild.Guild.webhooks:5 of
msgid "Requires :attr:`~.Permissions.manage_webhooks` permissions."
msgstr ""

#: discord.channel.VoiceChannel.webhooks:7
#: discord.channel._TextChannel.webhooks:7 discord.guild.Guild.webhooks:7 of
msgid "You don't have permissions to get the webhooks."
msgstr ""

#: discord.guild.Guild.webhooks:9 of
msgid "The webhooks for this guild."
msgstr ""

#: discord.channel.VoiceChannel.webhooks:10
#: discord.channel._TextChannel.webhooks:10 discord.guild.Guild.webhooks:10 of
msgid "List[:class:`Webhook`]"
msgstr ""

#: discord.guild.Guild.estimate_pruned_members:3 of
msgid ""
"Similar to :meth:`prune_members` except instead of actually pruning "
"members, it returns how many members it would prune from the guild had it"
" been called."
msgstr ""

#: discord.guild.Guild.estimate_pruned_members:9 of
msgid ""
"A list of :class:`abc.Snowflake` that represent roles to include in the "
"estimate. If a member has a role that is not specified, they'll be "
"excluded.  .. versionadded:: 1.7"
msgstr ""

#: discord.guild.Guild.estimate_pruned_members:9 of
msgid ""
"A list of :class:`abc.Snowflake` that represent roles to include in the "
"estimate. If a member has a role that is not specified, they'll be "
"excluded."
msgstr ""

#: discord.guild.Guild.estimate_pruned_members:16 of
msgid "An error occurred while fetching the prune members estimate."
msgstr ""

#: discord.guild.Guild.estimate_pruned_members:19 of
msgid "The number of members estimated to be pruned."
msgstr ""

#: discord.guild.Guild.invites:3 of
msgid "Returns a list of all active instant invites from the guild."
msgstr ""

#: discord.guild.Guild.invites:5 of
msgid ""
"You must have the :attr:`~Permissions.manage_guild` permission to get "
"this information."
msgstr ""

#: discord.guild.Guild.invites:12 of
msgid "List[:class:`Invite`]"
msgstr ""

#: discord.guild.Guild.create_template:3 of
msgid "Creates a template for the guild."
msgstr ""

#: discord.guild.Guild.create_integration:5
#: discord.guild.Guild.create_template:5 discord.guild.Guild.integrations:5
#: discord.integrations.Integration.delete:5
#: discord.integrations.StreamIntegration.edit:5
#: discord.integrations.StreamIntegration.sync:5 of
msgid "You must have the :attr:`~Permissions.manage_guild` permission to do this."
msgstr ""

#: discord.guild.Guild.create_template:10 discord.template.Template:19 of
msgid "The name of the template."
msgstr ""

#: discord.guild.Guild.create_template:12 discord.template.Template:25 of
msgid "The description of the template."
msgstr ""

#: discord.guild.Guild.create_integration:3 of
msgid "Attaches an integration to the guild."
msgstr ""

#: discord.guild.Guild.create_integration:10 of
msgid "The integration type (e.g. Twitch)."
msgstr ""

#: discord.guild.Guild.create_integration:12
#: discord.integrations.BotIntegration:7 discord.integrations.Integration:7
#: discord.integrations.StreamIntegration:7 of
msgid "The integration ID."
msgstr ""

#: discord.guild.Guild.create_integration:15
#: discord.guild.Guild.integrations:10 of
msgid "You do not have permission to create the integration."
msgstr ""

#: discord.guild.Guild.create_integration:16 of
msgid "The account could not be found."
msgstr ""

#: discord.guild.Guild.integrations:3 of
msgid "Returns a list of all integrations attached to the guild."
msgstr ""

#: discord.guild.Guild.integrations:11 of
msgid "Fetching the integrations failed."
msgstr ""

#: discord.guild.Guild.integrations:13 of
msgid "The list of integrations that are attached to the guild."
msgstr ""

#: discord.guild.Guild.integrations:14 of
msgid "List[:class:`Integration`]"
msgstr ""

#: discord.guild.Guild.fetch_stickers:3 of
msgid "Retrieves a list of all :class:`Sticker`\\s for the guild."
msgstr ""

#: discord.guild.Guild.fetch_stickers:9 of
msgid ""
"This method is an API call. For general usage, consider :attr:`stickers` "
"instead."
msgstr ""

#: discord.guild.Guild.fetch_stickers:11 of
msgid "An error occurred fetching the stickers."
msgstr ""

#: discord.guild.Guild.fetch_stickers:13 of
msgid "The retrieved stickers."
msgstr ""

#: discord.guild.Guild.fetch_stickers:14 of
msgid "List[:class:`GuildSticker`]"
msgstr ""

#: discord.guild.Guild.fetch_sticker:3 of
msgid "Retrieves a custom :class:`Sticker` from the guild."
msgstr ""

#: discord.guild.Guild.fetch_sticker:9 of
msgid ""
"This method is an API call. For general usage, consider iterating over "
":attr:`stickers` instead."
msgstr ""

#: discord.guild.Guild.fetch_sticker:12 of
msgid "The sticker's ID."
msgstr ""

#: discord.guild.Guild.fetch_sticker:15 of
msgid "The sticker requested could not be found."
msgstr ""

#: discord.guild.Guild.fetch_sticker:16 of
msgid "An error occurred fetching the sticker."
msgstr ""

#: discord.guild.Guild.fetch_sticker:18 discord.sticker.StickerItem.fetch:7 of
msgid "The retrieved sticker."
msgstr ""

#: ../../docstring discord.Intents.emojis_and_stickers:13
#: discord.guild.Guild.create_sticker:26 discord.guild.Guild.fetch_sticker:19
#: discord.sticker.GuildSticker.edit:18 of
msgid ":class:`GuildSticker`"
msgstr ""

#: discord.guild.Guild.create_sticker:3 of
msgid "Creates a :class:`Sticker` for the guild."
msgstr ""

#: discord.guild.Guild.create_sticker:5 discord.guild.Guild.delete_sticker:5
#: discord.sticker.GuildSticker.delete:5 of
msgid ""
"You must have :attr:`~Permissions.manage_emojis_and_stickers` permission "
"to do this."
msgstr ""

#: discord.guild.Guild.create_sticker:10 of
msgid "The sticker name. Must be 2 to 30 characters."
msgstr ""

#: discord.guild.Guild.create_sticker:12 of
msgid "The sticker's description. If used, must be 2 to 100 characters."
msgstr ""

#: discord.guild.Guild.create_sticker:14 discord.sticker.GuildSticker.edit:9 of
msgid "The name of a unicode emoji that represents the sticker's expression."
msgstr ""

#: discord.guild.Guild.create_sticker:16 of
msgid "The file of the sticker to upload."
msgstr ""

#: discord.guild.Guild.create_sticker:18 of
msgid "The reason for creating this sticker. Shows up on the audit log."
msgstr ""

#: discord.guild.Guild.create_sticker:21 of
msgid "You are not allowed to create stickers."
msgstr ""

#: discord.guild.Guild.create_sticker:22 of
msgid "An error occurred creating a sticker."
msgstr ""

#: discord.guild.Guild.create_sticker:23 of
msgid "The parameters for the sticker are not correctly formatted."
msgstr ""

#: discord.guild.Guild.create_sticker:25 of
msgid "The created sticker."
msgstr ""

#: discord.guild.Guild.delete_sticker:3 discord.sticker.GuildSticker.delete:3
#: of
msgid "Deletes the custom :class:`Sticker` from the guild."
msgstr ""

#: discord.guild.Guild.delete_sticker:10 of
msgid "The sticker you are deleting."
msgstr ""

#: discord.guild.Guild.delete_sticker:12 discord.sticker.GuildSticker.delete:8
#: of
msgid "The reason for deleting this sticker. Shows up on the audit log."
msgstr ""

#: discord.guild.Guild.delete_sticker:15 discord.sticker.GuildSticker.delete:11
#: of
msgid "You are not allowed to delete stickers."
msgstr ""

#: discord.guild.Guild.delete_sticker:16 discord.sticker.GuildSticker.delete:12
#: of
msgid "An error occurred deleting the sticker."
msgstr ""

#: discord.guild.Guild.fetch_emojis:3 of
msgid "Retrieves all custom :class:`Emoji`\\s from the guild."
msgstr ""

#: discord.guild.Guild.fetch_emojis:7 of
msgid ""
"This method is an API call. For general usage, consider :attr:`emojis` "
"instead."
msgstr ""

#: discord.guild.Guild.fetch_emojis:9 of
msgid "An error occurred fetching the emojis."
msgstr ""

#: discord.guild.Guild.fetch_emojis:11 of
msgid "The retrieved emojis."
msgstr ""

#: discord.guild.Guild.fetch_emojis:12 of
msgid "List[:class:`Emoji`]"
msgstr ""

#: discord.guild.Guild.fetch_emoji:3 of
msgid "Retrieves a custom :class:`Emoji` from the guild."
msgstr ""

#: discord.guild.Guild.fetch_emoji:7 of
msgid ""
"This method is an API call. For general usage, consider iterating over "
":attr:`emojis` instead."
msgstr ""

#: discord.emoji.Emoji:37 discord.guild.Guild.fetch_emoji:10 of
msgid "The emoji's ID."
msgstr ""

#: discord.guild.Guild.fetch_emoji:13 of
msgid "The emoji requested could not be found."
msgstr ""

#: discord.guild.Guild.fetch_emoji:14 of
msgid "An error occurred fetching the emoji."
msgstr ""

#: discord.guild.Guild.fetch_emoji:16 of
msgid "The retrieved emoji."
msgstr ""

#: ../../docstring discord.Intents.emojis_and_stickers:12
#: discord.emoji.Emoji.edit:22 discord.guild.Guild.create_custom_emoji:25
#: discord.guild.Guild.fetch_emoji:17 of
msgid ":class:`Emoji`"
msgstr ""

#: discord.guild.Guild.create_custom_emoji:3 of
msgid "Creates a custom :class:`Emoji` for the guild."
msgstr ""

#: discord.guild.Guild.create_custom_emoji:5 of
msgid ""
"There is currently a limit of 50 static and animated emojis respectively "
"per guild, unless the guild has the ``MORE_EMOJI`` feature which extends "
"the limit to 200."
msgstr ""

#: discord.guild.Guild.create_custom_emoji:8 of
msgid ""
"You must have the :attr:`~Permissions.manage_emojis` permission to do "
"this."
msgstr ""

#: discord.guild.Guild.create_custom_emoji:11 of
msgid "The emoji name. Must be at least 2 characters."
msgstr ""

#: discord.guild.Guild.create_custom_emoji:13 of
msgid ""
"The :term:`py:bytes-like object` representing the image data to use. Only"
" JPG, PNG and GIF images are supported."
msgstr ""

#: discord.guild.Guild.create_custom_emoji:16 of
msgid ""
"A :class:`list` of :class:`Role`\\s that can use this emoji. Leave empty "
"to make it available to everyone."
msgstr ""

#: discord.guild.Guild.create_custom_emoji:18 of
msgid "The reason for creating this emoji. Shows up on the audit log."
msgstr ""

#: discord.guild.Guild.create_custom_emoji:21 of
msgid "You are not allowed to create emojis."
msgstr ""

#: discord.guild.Guild.create_custom_emoji:22 of
msgid "An error occurred creating an emoji."
msgstr ""

#: discord.guild.Guild.create_custom_emoji:24 of
msgid "The created emoji."
msgstr ""

#: discord.guild.Guild.delete_emoji:3 of
msgid "Deletes the custom :class:`Emoji` from the guild."
msgstr ""

#: discord.emoji.Emoji.delete:5 discord.emoji.Emoji.edit:5
#: discord.guild.Guild.delete_emoji:5 of
msgid "You must have :attr:`~Permissions.manage_emojis` permission to do this."
msgstr ""

#: discord.guild.Guild.delete_emoji:8 of
msgid "The emoji you are deleting."
msgstr ""

#: discord.emoji.Emoji.delete:8 discord.guild.Guild.delete_emoji:10 of
msgid "The reason for deleting this emoji. Shows up on the audit log."
msgstr ""

#: discord.emoji.Emoji.delete:11 discord.guild.Guild.delete_emoji:13 of
msgid "You are not allowed to delete emojis."
msgstr ""

#: discord.emoji.Emoji.delete:12 discord.guild.Guild.delete_emoji:14 of
msgid "An error occurred deleting the emoji."
msgstr ""

#: discord.guild.Guild.fetch_roles:3 of
msgid "Retrieves all :class:`Role` that the guild has."
msgstr ""

#: discord.guild.Guild.fetch_roles:7 of
msgid ""
"This method is an API call. For general usage, consider :attr:`roles` "
"instead."
msgstr ""

#: discord.guild.Guild.fetch_roles:11 of
msgid "Retrieving the roles failed."
msgstr ""

#: discord.guild.Guild.fetch_roles:13 of
msgid "All roles in the guild."
msgstr ""

#: discord.guild.Guild.create_role:3 of
msgid "Creates a :class:`Role` for the guild."
msgstr ""

#: discord.guild.Guild.create_role:5 discord.role.Role.edit:8 of
msgid "All fields are optional."
msgstr ""

#: discord.guild.Guild.create_role:7 discord.guild.Guild.edit_role_positions:5
#: of
msgid "You must have the :attr:`~Permissions.manage_roles` permission to do this."
msgstr ""

#: discord.guild.Guild.create_role:10 discord.role.Role.edit:10 of
msgid "Can now pass ``int`` to ``colour`` keyword-only parameter."
msgstr ""

#: discord.guild.Guild.create_role:13 of
msgid "The role name. Defaults to 'new role'."
msgstr ""

#: discord.guild.Guild.create_role:15 of
msgid "The permissions to have. Defaults to no permissions."
msgstr ""

#: discord.guild.Guild.create_role:17 of
msgid ""
"The colour for the role. Defaults to :meth:`Colour.default`. This is "
"aliased to ``color`` as well."
msgstr ""

#: discord.guild.Guild.create_role:20 of
msgid ""
"Indicates if the role should be shown separately in the member list. "
"Defaults to ``False``."
msgstr ""

#: discord.guild.Guild.create_role:23 of
msgid ""
"Indicates if the role should be mentionable by others. Defaults to "
"``False``."
msgstr ""

#: discord.guild.Guild.create_role:26 of
msgid "The reason for creating this role. Shows up on the audit log."
msgstr ""

#: discord.guild.Guild.create_role:29 of
msgid "You do not have permissions to create the role."
msgstr ""

#: discord.guild.Guild.create_role:30 of
msgid "Creating the role failed."
msgstr ""

#: discord.guild.Guild.create_role:31
#: discord.guild.Guild.edit_role_positions:30 of
msgid "An invalid keyword argument was given."
msgstr ""

#: discord.guild.Guild.create_role:33 of
msgid "The newly created role."
msgstr ""

#: discord.guild.Guild.edit_role_positions:3 of
msgid "Bulk edits a list of :class:`Role` in the guild."
msgstr ""

#: discord.guild.Guild.edit_role_positions:10 of
msgid "Example:"
msgstr ""

#: discord.guild.Guild.edit_role_positions:22 of
msgid ""
"A :class:`dict` of :class:`Role` to :class:`int` to change the positions "
"of each given role."
msgstr ""

#: discord.guild.Guild.edit_role_positions:25 of
msgid "The reason for editing the role positions. Shows up on the audit log."
msgstr ""

#: discord.guild.Guild.edit_role_positions:28 of
msgid "You do not have permissions to move the roles."
msgstr ""

#: discord.guild.Guild.edit_role_positions:29 of
msgid "Moving the roles failed."
msgstr ""

#: discord.guild.Guild.edit_role_positions:32 of
msgid "A list of all the roles in the guild."
msgstr ""

#: discord.guild.Guild.kick:3 of
msgid "Kicks a user from the guild."
msgstr ""

#: discord.guild.Guild.ban:5 discord.guild.Guild.kick:5
#: discord.guild.Guild.unban:5 of
msgid "The user must meet the :class:`abc.Snowflake` abc."
msgstr ""

#: discord.guild.Guild.kick:7 of
msgid "You must have the :attr:`~Permissions.kick_members` permission to do this."
msgstr ""

#: discord.guild.Guild.kick:10 of
msgid "The user to kick from their guild."
msgstr ""

#: discord.guild.Guild.kick:12 of
msgid "The reason the user got kicked."
msgstr ""

#: discord.guild.Guild.kick:15 of
msgid "You do not have the proper permissions to kick."
msgstr ""

#: discord.guild.Guild.kick:16 of
msgid "Kicking failed."
msgstr ""

#: discord.guild.Guild.ban:3 of
msgid "Bans a user from the guild."
msgstr ""

#: discord.guild.Guild.ban:7 discord.guild.Guild.unban:7 of
msgid "You must have the :attr:`~Permissions.ban_members` permission to do this."
msgstr ""

#: discord.guild.Guild.ban:10 of
msgid "The user to ban from their guild."
msgstr ""

#: discord.guild.Guild.ban:12 of
msgid ""
"The number of days worth of messages to delete from the user in the "
"guild. The minimum is 0 and the maximum is 7."
msgstr ""

#: discord.guild.Guild.ban:15 of
msgid "The reason the user got banned."
msgstr ""

#: discord.guild.Guild.ban:18 of
msgid "You do not have the proper permissions to ban."
msgstr ""

#: discord.guild.Guild.ban:19 of
msgid "Banning failed."
msgstr ""

#: discord.guild.Guild.unban:3 of
msgid "Unbans a user from the guild."
msgstr ""

#: discord.guild.Guild.unban:10 of
msgid "The user to unban."
msgstr ""

#: discord.guild.Guild.unban:15 of
msgid "You do not have the proper permissions to unban."
msgstr ""

#: discord.guild.Guild.unban:16 of
msgid "Unbanning failed."
msgstr ""

#: discord.guild.Guild.vanity_invite:3 of
msgid "Returns the guild's special vanity invite."
msgstr ""

#: discord.guild.Guild.vanity_invite:5 of
msgid "The guild must have ``VANITY_URL`` in :attr:`~Guild.features`."
msgstr ""

#: discord.guild.Guild.vanity_invite:7 of
msgid ""
"You must have the :attr:`~Permissions.manage_guild` permission to use "
"this as well."
msgstr ""

#: discord.guild.Guild.vanity_invite:10 discord.guild.Guild.welcome_screen:11
#: of
msgid "You do not have the proper permissions to get this."
msgstr ""

#: discord.guild.Guild.vanity_invite:11 of
msgid "Retrieving the vanity invite failed."
msgstr ""

#: discord.guild.Guild.vanity_invite:13 of
msgid ""
"The special vanity invite. If ``None`` then the guild does not have a "
"vanity invite set."
msgstr ""

#: discord.guild.Guild.vanity_invite:15 of
msgid "Optional[:class:`Invite`]"
msgstr ""

#: discord.guild.Guild.widget:3 of
msgid "Returns the widget of the guild."
msgstr ""

#: discord.guild.Guild.widget:13 of
msgid ":class:`Widget`"
msgstr ""

#: discord.guild.Guild.edit_widget:3 of
msgid "Edits the widget of the guild."
msgstr ""

#: discord.guild.Guild.edit_widget:5 of
msgid "You must have the :attr:`~Permissions.manage_guild` permission to use this"
msgstr ""

#: discord.guild.Guild.edit_widget:10 of
msgid "Whether to enable the widget for the guild."
msgstr ""

#: discord.guild.Guild.edit_widget:12 of
msgid "The new widget channel. ``None`` removes the widget channel."
msgstr ""

#: discord.guild.Guild.edit_widget:15 of
msgid "You do not have permission to edit the widget."
msgstr ""

#: discord.guild.Guild.edit_widget:16 of
msgid "Editing the widget failed."
msgstr ""

#: discord.guild.Guild.chunk:3 of
msgid ""
"Requests all members that belong to this guild. In order to use this, "
":meth:`Intents.members` must be enabled."
msgstr ""

#: discord.guild.Guild.chunk:6 discord.guild.Guild.query_members:6 of
msgid "This is a websocket operation and can be slow."
msgstr ""

#: discord.guild.Guild.chunk:10 of
msgid "Whether to cache the members as well."
msgstr ""

#: discord.guild.Guild.query_members:3 of
msgid ""
"Request members that belong to this guild whose username starts with the "
"query given."
msgstr ""

#: discord.guild.Guild.query_members:10 of
msgid "The string that the username's start with."
msgstr ""

#: discord.guild.Guild.query_members:12 of
msgid ""
"The maximum number of members to send back. This must be a number between"
" 5 and 100."
msgstr ""

#: discord.guild.Guild.query_members:15 of
msgid ""
"Whether to request for presences to be provided. This defaults to "
"``False``.  .. versionadded:: 1.6"
msgstr ""

#: discord.guild.Guild.query_members:15 of
msgid ""
"Whether to request for presences to be provided. This defaults to "
"``False``."
msgstr ""

#: discord.guild.Guild.query_members:20 of
msgid ""
"Whether to cache the members internally. This makes operations such as "
":meth:`get_member` work for those that matched."
msgstr ""

#: discord.guild.Guild.query_members:23 of
msgid ""
"List of user IDs to search for. If the user ID is not in the guild then "
"it won't be returned.  .. versionadded:: 1.4"
msgstr ""

#: discord.guild.Guild.query_members:23 of
msgid ""
"List of user IDs to search for. If the user ID is not in the guild then "
"it won't be returned."
msgstr ""

#: discord.guild.Guild.query_members:28 of
msgid "The query timed out waiting for the members."
msgstr ""

#: discord.guild.Guild.query_members:29 of
msgid "Invalid parameters were passed to the function"
msgstr ""

#: discord.guild.Guild.query_members:30 of
msgid "The presences intent is not enabled."
msgstr ""

#: discord.guild.Guild.query_members:32 of
msgid "The list of members that have matched the query."
msgstr ""

#: discord.guild.Guild.change_voice_state:3 of
msgid "Changes client's voice state in the guild."
msgstr ""

#: discord.guild.Guild.change_voice_state:7 of
msgid "Channel the client wants to join. Use ``None`` to disconnect."
msgstr ""

#: discord.guild.Guild.change_voice_state:9 of
msgid "Indicates if the client should be self-muted."
msgstr ""

#: discord.guild.Guild.change_voice_state:11 of
msgid "Indicates if the client should be self-deafened."
msgstr ""

#: discord.guild.Guild.welcome_screen:3 of
msgid "Returns the :class:`WelcomeScreen` of the guild."
msgstr ""

#: discord.guild.Guild.welcome_screen:5 of
msgid "The guild must have ``COMMUNITY`` in :attr:`~Guild.features`."
msgstr ""

#: discord.guild.Guild.welcome_screen:7 of
msgid ""
"You must have the :attr:`~Permissions.manage_guild` permission in order "
"to get this."
msgstr ""

#: discord.guild.Guild.welcome_screen:12 of
msgid "Retrieving the welcome screen failed somehow."
msgstr ""

#: discord.guild.Guild.welcome_screen:13 of
msgid "The guild doesn't have a welcome screen or community feature is disabled."
msgstr ""

#: discord.guild.Guild.welcome_screen:15 of
msgid "The welcome screen of guild."
msgstr ""

#: discord.guild.Guild.edit_welcome_screen:24
#: discord.guild.Guild.welcome_screen:16 of
msgid ":class:`WelcomeScreen`"
msgstr ""

#: discord.guild.Guild.edit_welcome_screen:3 of
msgid ""
"A shorthand for :attr:`WelcomeScreen.edit` without fetching the welcome "
"screen."
msgstr ""

#: discord.guild.Guild.edit_welcome_screen:5
#: discord.welcome_screen.WelcomeScreen.edit:5 of
msgid ""
"You must have the :attr:`~Permissions.manage_guild` permission in the "
"guild to do this."
msgstr ""

#: discord.guild.Guild.edit_welcome_screen:8 of
msgid "The guild must have ``COMMUNITY`` in :attr:`Guild.features`"
msgstr ""

#: discord.guild.Guild.edit_welcome_screen:10
#: discord.welcome_screen.WelcomeScreen.edit:27 of
msgid "The new description of welcome screen."
msgstr ""

#: discord.guild.Guild.edit_welcome_screen:12
#: discord.welcome_screen.WelcomeScreen.edit:29 of
msgid ""
"The welcome channels. The order of the channels would be same as the "
"passed list order."
msgstr ""

#: discord.guild.Guild.edit_welcome_screen:14
#: discord.welcome_screen.WelcomeScreen.edit:31 of
msgid "Whether the welcome screen should be displayed."
msgstr ""

#: discord.guild.Guild.edit_welcome_screen:16 of
msgid "The reason that shows up on audit log."
msgstr ""

#: discord.guild.Guild.edit_welcome_screen:19
#: discord.welcome_screen.WelcomeScreen.edit:36 of
msgid "Editing the welcome screen failed somehow."
msgstr ""

#: discord.guild.Guild.edit_welcome_screen:20
#: discord.welcome_screen.WelcomeScreen.edit:37 of
msgid "You don't have permissions to edit the welcome screen."
msgstr ""

#: discord.guild.Guild.edit_welcome_screen:21
#: discord.welcome_screen.WelcomeScreen.edit:38 of
msgid "This welcome screen does not exist."
msgstr ""

#: discord.guild.Guild.edit_welcome_screen:23 of
msgid "The edited welcome screen."
msgstr ""

#: discord.guild.Guild.fetch_scheduled_events:3 of
msgid "Returns a list of :class:`ScheduledEvent` in the guild."
msgstr ""

#: discord.guild.Guild.fetch_scheduled_events:7 of
msgid ""
"This method is an API call. For general usage, consider "
":attr:`scheduled_events` instead."
msgstr ""

#: discord.guild.Guild.fetch_scheduled_events:9 of
msgid ""
"If the scheduled event should be fetched with the number of users that "
"are interested in the events. Defaults to ``True``."
msgstr ""

#: discord.guild.Guild.fetch_scheduled_events:14 of
msgid "The scheduled events intent is not enabled."
msgstr ""

#: discord.guild.Guild.fetch_scheduled_events:15 of
msgid "Getting the scheduled events failed."
msgstr ""

#: discord.guild.Guild.fetch_scheduled_events:17 of
msgid "The fetched scheduled events."
msgstr ""

#: discord.guild.Guild.fetch_scheduled_events:18 of
msgid "List[:class:`ScheduledEvent`]"
msgstr ""

#: discord.guild.Guild.fetch_scheduled_event:3 of
msgid "Retrieves a :class:`ScheduledEvent` from event ID."
msgstr ""

#: discord.guild.Guild.fetch_scheduled_event:7 of
msgid ""
"This method is an API call. If you have :attr:`Intents.scheduled_events`,"
" consider :meth:`get_scheduled_event` instead."
msgstr ""

#: discord.guild.Guild.fetch_scheduled_event:10 of
msgid "The event's ID to fetch with."
msgstr ""

#: discord.guild.Guild.fetch_scheduled_event:12 of
msgid ""
"If the scheduled vent should be fetched with the number of users that are"
" interested in the event. Defaults to ``True``."
msgstr ""

#: discord.guild.Guild.fetch_scheduled_event:17 of
msgid "Fetching the event failed."
msgstr ""

#: discord.guild.Guild.fetch_scheduled_event:18 of
msgid "Event not found."
msgstr ""

#: discord.guild.Guild.fetch_scheduled_event:20 of
msgid "The scheduled event from the event ID."
msgstr ""

#: discord.guild.Guild.create_scheduled_event:25
#: discord.guild.Guild.fetch_scheduled_event:21
#: discord.guild.Guild.get_scheduled_event:7 discord.invite.Invite:161 of
msgid "Optional[:class:`ScheduledEvent`]"
msgstr ""

#: discord.guild.Guild.get_scheduled_event:1 of
msgid "Returns a Scheduled Event with the given ID."
msgstr ""

#: discord.guild.Guild.get_scheduled_event:6 of
msgid "The scheduled event or ``None`` if not found."
msgstr ""

#: discord.guild.Guild.create_scheduled_event:1 of
msgid "|coro| Creates a scheduled event."
msgstr ""

#: discord.guild.Guild.create_scheduled_event:4
#: discord.scheduled_events.ScheduledEvent:31 of
msgid "The name of the scheduled event."
msgstr ""

#: discord.guild.Guild.create_scheduled_event:6
#: discord.scheduled_events.ScheduledEvent:37 of
msgid "The description of the scheduled event."
msgstr ""

#: discord.guild.Guild.create_scheduled_event:8 of
msgid "A datetime object of when the scheduled event is supposed to start."
msgstr ""

#: discord.guild.Guild.create_scheduled_event:10 of
msgid "A datetime object of when the scheduled event is supposed to end."
msgstr ""

#: discord.guild.Guild.create_scheduled_event:12 of
msgid "The location of where the event is happening."
msgstr ""

#: discord.guild.Guild.create_scheduled_event:14
#: discord.scheduled_events.ScheduledEvent.edit:25 of
msgid ""
"The privacy level of the event. Currently, the only possible value is "
":attr:`ScheduledEventPrivacyLevel.guild_only`, which is default, so there"
" is no need to change this parameter."
msgstr ""

#: discord.guild.Guild.create_scheduled_event:18
#: discord.scheduled_events.ScheduledEvent.cancel:9
#: discord.scheduled_events.ScheduledEvent.complete:9
#: discord.scheduled_events.ScheduledEvent.edit:29
#: discord.scheduled_events.ScheduledEvent.start:9 of
msgid "The reason to show in the audit log."
msgstr ""

#: discord.guild.Guild.create_scheduled_event:21
#: discord.scheduled_events.ScheduledEvent.cancel:12
#: discord.scheduled_events.ScheduledEvent.complete:12
#: discord.scheduled_events.ScheduledEvent.delete:5
#: discord.scheduled_events.ScheduledEvent.edit:34
#: discord.scheduled_events.ScheduledEvent.start:12 of
msgid "You do not have the Manage Events permission."
msgstr ""

#: discord.guild.Guild.create_scheduled_event:24 of
msgid "The created scheduled event."
msgstr ""

#: discord.Guild.scheduled_events:1 of
msgid "A list of scheduled events in this guild."
msgstr ""

#: discord.Guild.scheduled_events:3 of
msgid "List[:class:`.ScheduledEvent`]"
msgstr ""

#: discord.guild.Guild.fetch_auto_moderation_rules:3 of
msgid "Retrieves a list of auto moderation rules for this guild."
msgstr ""

#: discord.guild.Guild.fetch_auto_moderation_rules:5 of
msgid "Getting the auto moderation rules failed."
msgstr ""

#: discord.automod.AutoModRule.delete:8 discord.automod.AutoModRule.edit:22
#: discord.guild.Guild.create_auto_moderation_rule:23
#: discord.guild.Guild.fetch_auto_moderation_rule:6
#: discord.guild.Guild.fetch_auto_moderation_rules:6 of
msgid "You do not have the Manage Guild permission."
msgstr ""

#: discord.guild.Guild.fetch_auto_moderation_rules:8 of
msgid "The auto moderation rules for this guild."
msgstr ""

#: discord.guild.Guild.fetch_auto_moderation_rules:9 of
msgid "List[:class:`AutoModRule`]"
msgstr ""

#: discord.guild.Guild.fetch_auto_moderation_rule:3 of
msgid "Retrieves a :class:`AutoModRule` from rule ID."
msgstr ""

#: discord.guild.Guild.fetch_auto_moderation_rule:5 of
msgid "Getting the auto moderation rule failed."
msgstr ""

#: discord.guild.Guild.fetch_auto_moderation_rule:8 of
msgid "The requested auto moderation rule."
msgstr ""

#: discord.guild.Guild.create_auto_moderation_rule:26
#: discord.guild.Guild.fetch_auto_moderation_rule:9 of
msgid ":class:`AutoModRule`"
msgstr ""

#: discord.guild.Guild.create_auto_moderation_rule:1 of
msgid "Creates an auto moderation rule."
msgstr ""

#: discord.guild.Guild.create_auto_moderation_rule:3 of
msgid "The name of the auto moderation rule."
msgstr ""

#: discord.guild.Guild.create_auto_moderation_rule:5 of
msgid "The type of event that triggers the rule."
msgstr ""

#: discord.guild.Guild.create_auto_moderation_rule:7 of
msgid "The rule's trigger type."
msgstr ""

#: discord.automod.AutoModRule:55
#: discord.guild.Guild.create_auto_moderation_rule:9 of
msgid "The rule's trigger metadata."
msgstr ""

#: discord.guild.Guild.create_auto_moderation_rule:11 of
msgid "The actions to take when the rule is triggered."
msgstr ""

#: discord.guild.Guild.create_auto_moderation_rule:13 of
msgid "Whether the rule is enabled."
msgstr ""

#: discord.guild.Guild.create_auto_moderation_rule:15 of
msgid "A list of roles that are exempt from the rule."
msgstr ""

#: discord.guild.Guild.create_auto_moderation_rule:17 of
msgid "A list of channels that are exempt from the rule."
msgstr ""

#: discord.guild.Guild.create_auto_moderation_rule:19 of
msgid "The reason for creating the rule. Shows up in the audit log."
msgstr ""

#: discord.guild.Guild.create_auto_moderation_rule:22 of
msgid "Creating the auto moderation rule failed."
msgstr ""

#: discord.guild.Guild.create_auto_moderation_rule:25 of
msgid "The new auto moderation rule."
msgstr ""

#: ../../api.rst:4255
msgid "A namedtuple which represents a ban returned from :meth:`~Guild.bans`."
msgstr ""

#: ../../api.rst:4259
msgid "The reason this user was banned."
msgstr ""

#: ../../api.rst:4264
msgid "The :class:`User` that was banned."
msgstr ""

#: ../../api.rst:4269
msgid "ScheduledEvent"
msgstr ""

#: discord.scheduled_events.ScheduledEvent:1 of
msgid "Represents a Discord Guild Scheduled Event."
msgstr ""

#: discord.scheduled_events.ScheduledEvent:7 of
msgid "Checks if two scheduled events are equal."
msgstr ""

#: discord.scheduled_events.ScheduledEvent:11 of
msgid "Checks if two scheduled events are not equal."
msgstr ""

#: discord.scheduled_events.ScheduledEvent:15 of
msgid "Returns the scheduled event's hash."
msgstr ""

#: discord.scheduled_events.ScheduledEvent:19 of
msgid "Returns the scheduled event's name."
msgstr ""

#: discord.scheduled_events.ScheduledEvent:25 of
msgid "The guild where the scheduled event is happening."
msgstr ""

#: discord.scheduled_events.ScheduledEvent:43 of
msgid "The time when the event will start"
msgstr ""

#: discord.scheduled_events.ScheduledEvent:49 of
msgid "The time when the event is supposed to end."
msgstr ""

#: discord.Activity.end:3 discord.Activity.start:3
#: discord.BaseActivity.created_at:5 discord.Game.end:3 discord.Game.start:3
#: discord.PartialEmoji.created_at:5 discord.Spotify.created_at:5
#: discord.invite.Invite:125 discord.member.Member:30 discord.member.Member:69
#: discord.member.Member:77 discord.member.VoiceState:61
#: discord.scheduled_events.ScheduledEvent:51 discord.threads.Thread:128 of
msgid "Optional[:class:`datetime.datetime`]"
msgstr ""

#: discord.scheduled_events.ScheduledEvent:55 of
msgid "The status of the scheduled event."
msgstr ""

#: discord.scheduled_events.ScheduledEvent:57 of
msgid ":class:`ScheduledEventStatus`"
msgstr ""

#: discord.scheduled_events.ScheduledEvent:61 of
msgid ""
"The location of the event. See :class:`ScheduledEventLocation` for more "
"information."
msgstr ""

#: discord.scheduled_events.ScheduledEvent:64 of
msgid ":class:`ScheduledEventLocation`"
msgstr ""

#: discord.scheduled_events.ScheduledEvent:68 of
msgid ""
"The number of users that have marked themselves as interested in the "
"event."
msgstr ""

#: discord.scheduled_events.ScheduledEvent:74 of
msgid ""
"The ID of the user who created the event. It may be ``None`` because "
"events created before October 25th, 2021, haven't had their creators "
"tracked."
msgstr ""

#: discord.scheduled_events.ScheduledEvent:82 of
msgid "The resolved user object of who created the event."
msgstr ""

#: discord.scheduled_events.ScheduledEvent:88 of
msgid ""
"The privacy level of the event. Currently, the only possible value is "
":attr:`ScheduledEventPrivacyLevel.guild_only`, which is default, so there"
" is no need to use this attribute."
msgstr ""

#: discord.scheduled_events.ScheduledEvent:92 of
msgid ":class:`ScheduledEventPrivacyLevel`"
msgstr ""

#: discord.ScheduledEvent.created_at:1 of
msgid "Returns the scheduled event's creation time in UTC."
msgstr ""

#: discord.ScheduledEvent.interested:1 of
msgid "An alias to :attr:`.subscriber_count`"
msgstr ""

#: discord.ScheduledEvent.url:1 of
msgid "The url to reference the scheduled event."
msgstr ""

#: discord.ScheduledEvent.cover:1 of
msgid "Returns the scheduled event cover image asset, if available."
msgstr ""

#: discord.scheduled_events.ScheduledEvent.edit:3 of
msgid "Edits the Scheduled Event's data"
msgstr ""

#: discord.scheduled_events.ScheduledEvent.edit:5 of
msgid ""
"All parameters are optional unless ``location.type`` is "
":attr:`ScheduledEventLocationType.external`, then ``end_time`` is "
"required."
msgstr ""

#: discord.scheduled_events.ScheduledEvent.edit:9 of
msgid "Will return a new :class:`.ScheduledEvent` object if applicable."
msgstr ""

#: discord.scheduled_events.ScheduledEvent.edit:11 of
msgid "The new name of the event."
msgstr ""

#: discord.scheduled_events.ScheduledEvent.edit:13 of
msgid "The new description of the event."
msgstr ""

#: discord.scheduled_events.ScheduledEvent.edit:15 of
msgid "The location of the event."
msgstr ""

#: discord.scheduled_events.ScheduledEvent.edit:17 of
msgid ""
"The status of the event. It is recommended, however, to use "
":meth:`.start`, :meth:`.complete`, and :meth:`cancel` to edit statuses "
"instead."
msgstr ""

#: discord.scheduled_events.ScheduledEvent.edit:21 of
msgid "The new starting time for the event."
msgstr ""

#: discord.scheduled_events.ScheduledEvent.edit:23 of
msgid "The new ending time of the event."
msgstr ""

#: discord.scheduled_events.ScheduledEvent.edit:31 of
msgid "The cover image of the scheduled event."
msgstr ""

#: discord.scheduled_events.ScheduledEvent.edit:37 of
msgid ""
"The newly updated scheduled event object. This is only returned when "
"certain fields are updated."
msgstr ""

#: discord.scheduled_events.ScheduledEvent.cancel:16
#: discord.scheduled_events.ScheduledEvent.complete:16
#: discord.scheduled_events.ScheduledEvent.edit:39
#: discord.scheduled_events.ScheduledEvent.start:16
#: discord.stage_instance.StageInstance:59 of
msgid "Optional[:class:`.ScheduledEvent`]"
msgstr ""

#: discord.scheduled_events.ScheduledEvent.delete:3 of
msgid "Deletes the scheduled event."
msgstr ""

#: discord.scheduled_events.ScheduledEvent.start:3 of
msgid "Starts the scheduled event. Shortcut from :meth:`.edit`."
msgstr ""

#: discord.scheduled_events.ScheduledEvent.cancel:7
#: discord.scheduled_events.ScheduledEvent.start:7 of
msgid ""
"This method can only be used if :attr:`.status` is "
":attr:`ScheduledEventStatus.scheduled`."
msgstr ""

#: discord.scheduled_events.ScheduledEvent.cancel:15
#: discord.scheduled_events.ScheduledEvent.complete:15
#: discord.scheduled_events.ScheduledEvent.start:15 of
msgid "The newly updated scheduled event object."
msgstr ""

#: discord.scheduled_events.ScheduledEvent.complete:3 of
msgid "Ends/completes the scheduled event. Shortcut from :meth:`.edit`."
msgstr ""

#: discord.scheduled_events.ScheduledEvent.complete:7 of
msgid ""
"This method can only be used if :attr:`.status` is "
":attr:`ScheduledEventStatus.active`."
msgstr ""

#: discord.scheduled_events.ScheduledEvent.cancel:3 of
msgid "Cancels the scheduled event. Shortcut from :meth:`.edit`."
msgstr ""

#: discord.scheduled_events.ScheduledEvent.subscribers:1 of
msgid ""
"Returns an :class:`AsyncIterator` representing the users or members "
"subscribed to the event."
msgstr ""

#: discord.scheduled_events.ScheduledEvent.subscribers:3 of
msgid ""
"The ``after`` and ``before`` parameters must represent member or user "
"objects and meet the :class:`abc.Snowflake` abc."
msgstr ""

#: discord.scheduled_events.ScheduledEvent.subscribers:8 of
msgid ""
"Even is ``as_member`` is set to ``True``, if the user is outside the "
"guild, it will be a :class:`User` object."
msgstr ""

#: discord.scheduled_events.ScheduledEvent.subscribers:23 of
msgid "Getting members instead of user objects: ::"
msgstr ""

#: discord.scheduled_events.ScheduledEvent.subscribers:28 of
msgid "The maximum number of results to return."
msgstr ""

#: discord.scheduled_events.ScheduledEvent.subscribers:30 of
msgid ""
"Whether to fetch :class:`Member` objects instead of user objects. There "
"may still be :class:`User` objects if the user is outside the guild."
msgstr ""

#: discord.scheduled_events.ScheduledEvent.subscribers:34 of
msgid ""
"Retrieves users before this date or object. If a datetime is provided, it"
" is recommended to use a UTC aware datetime. If the datetime is naive, it"
" is assumed to be local time."
msgstr ""

#: discord.scheduled_events.ScheduledEvent.subscribers:38 of
msgid ""
"Retrieves users after this date or object. If a datetime is provided, it "
"is recommended to use a UTC aware datetime. If the datetime is naive, it "
"is assumed to be local time."
msgstr ""

#: discord.scheduled_events.ScheduledEvent.subscribers:43 of
msgid "Fetching the subscribed users failed."
msgstr ""

#: discord.scheduled_events.ScheduledEvent.subscribers:45 of
msgid ""
"Union[:class:`User`, :class:`Member`] -- The subscribed :class:`Member`. "
"If ``as_member`` is set to ``False`` or the user is outside the guild, it"
" will be a :class:`User` object."
msgstr ""

#: discord.scheduled_events.ScheduledEventLocation:1 of
msgid "Represents a scheduled event's location."
msgstr ""

#: discord.scheduled_events.ScheduledEventLocation:3 of
msgid ""
"Setting the ``value`` to its corresponding type will set the location "
"type automatically:"
msgstr ""

#: discord.scheduled_events.ScheduledEventLocation:6 of
msgid "Type of Input"
msgstr ""

#: discord.scheduled_events.ScheduledEventLocation:6 of
msgid "Location Type"
msgstr ""

#: discord.scheduled_events.ScheduledEventLocation:8 of
msgid ":class:`StageChannel` :class:`VoiceChannel` :class:`str`"
msgstr ""

#: discord.scheduled_events.ScheduledEventLocation:8 of
msgid ""
":attr:`ScheduledEventLocationType.stage_instance` "
":attr:`ScheduledEventLocationType.voice` "
":attr:`ScheduledEventLocationType.external`"
msgstr ""

#: discord.scheduled_events.ScheduledEventLocation:17 of
msgid "The actual location of the scheduled event."
msgstr ""

#: discord.scheduled_events.ScheduledEventLocation:19 of
msgid ""
"Union[:class:`str`, :class:`StageChannel`, :class:`VoiceChannel`, "
":class:`Object`]"
msgstr ""

#: discord.scheduled_events.ScheduledEventLocation:23 of
msgid "The type of location."
msgstr ""

#: discord.scheduled_events.ScheduledEventLocation:25 of
msgid ":class:`ScheduledEventLocationType`"
msgstr ""

#: ../../api.rst:4280
msgid "Integration"
msgstr ""

#: discord.integrations.Integration:1 of
msgid "Represents a guild integration."
msgstr ""

#: discord.integrations.BotIntegration:13 discord.integrations.Integration:13
#: discord.integrations.StreamIntegration:13 of
msgid "The integration name."
msgstr ""

#: discord.integrations.BotIntegration:19 discord.integrations.Integration:19
#: discord.integrations.StreamIntegration:19 of
msgid "The guild of the integration."
msgstr ""

#: discord.integrations.BotIntegration:25 discord.integrations.Integration:25
#: discord.integrations.StreamIntegration:25 of
msgid "The integration type (i.e. Twitch)."
msgstr ""

#: discord.integrations.BotIntegration:31 discord.integrations.Integration:31
#: discord.integrations.StreamIntegration:31 of
msgid "Whether the integration is currently enabled."
msgstr ""

#: discord.integrations.Integration:37 of
msgid "The account linked to this integration."
msgstr ""

#: discord.integrations.BotIntegration:45 discord.integrations.Integration:39
#: discord.integrations.StreamIntegration:69 of
msgid ":class:`IntegrationAccount`"
msgstr ""

#: discord.integrations.BotIntegration:37 discord.integrations.Integration:43
#: of
msgid "The user that added this integration."
msgstr ""

#: discord.integrations.Integration.delete:3 of
msgid "Deletes the integration."
msgstr ""

#: discord.integrations.Integration.delete:8 of
msgid ""
"The reason the integration was deleted. Shows up on the audit log.  .. "
"versionadded:: 2.0"
msgstr ""

#: discord.integrations.Integration.delete:8 of
msgid "The reason the integration was deleted. Shows up on the audit log."
msgstr ""

#: discord.integrations.Integration.delete:13 of
msgid "You do not have permission to delete the integration."
msgstr ""

#: discord.integrations.Integration.delete:14 of
msgid "Deleting the integration failed."
msgstr ""

#: discord.integrations.IntegrationAccount:1 of
msgid "Represents an integration account."
msgstr ""

#: discord.integrations.IntegrationAccount:7 of
msgid "The account ID."
msgstr ""

#: discord.integrations.IntegrationAccount:13 of
msgid "The account name."
msgstr ""

#: discord.integrations.BotIntegration:1 of
msgid "Represents a bot integration on discord."
msgstr ""

#: discord.integrations.BotIntegration:43
#: discord.integrations.StreamIntegration:67 of
msgid "The integration account information."
msgstr ""

#: discord.integrations.BotIntegration:49 of
msgid "The application tied to this integration."
msgstr ""

#: discord.integrations.BotIntegration:51 of
msgid ":class:`IntegrationApplication`"
msgstr ""

#: discord.integrations.IntegrationApplication:1 of
msgid "Represents an application for a bot integration."
msgstr ""

#: discord.integrations.IntegrationApplication:7 of
msgid "The ID for this application."
msgstr ""

#: discord.integrations.IntegrationApplication:13 of
msgid "The application's name."
msgstr ""

#: discord.integrations.IntegrationApplication:19 of
msgid "The application's icon hash."
msgstr ""

#: discord.integrations.IntegrationApplication:25 of
msgid "The application's description. Can be an empty string."
msgstr ""

#: discord.integrations.IntegrationApplication:31 of
msgid "The summary of the application. Can be an empty string."
msgstr ""

#: discord.integrations.IntegrationApplication:37 of
msgid "The bot user on this application."
msgstr ""

#: discord.integrations.StreamIntegration:1 of
msgid "Represents a stream integration for Twitch or YouTube."
msgstr ""

#: discord.integrations.StreamIntegration:37 of
msgid "Where the integration is currently syncing."
msgstr ""

#: discord.integrations.StreamIntegration:43 of
msgid ""
"Whether emoticons should be synced for this integration (currently twitch"
" only)."
msgstr ""

#: discord.integrations.StreamIntegration:49 of
msgid ""
"The behaviour of expiring subscribers. Aliased to ``expire_behavior`` as "
"well."
msgstr ""

#: discord.StreamIntegration.expire_behavior:3
#: discord.integrations.StreamIntegration:51 of
msgid ":class:`ExpireBehaviour`"
msgstr ""

#: discord.integrations.StreamIntegration:55 of
msgid "The grace period (in days) for expiring subscribers."
msgstr ""

#: discord.integrations.StreamIntegration:61 of
msgid "The user for the integration."
msgstr ""

#: discord.integrations.StreamIntegration:73 of
msgid "An aware UTC datetime representing when the integration was last synced."
msgstr ""

#: discord.StreamIntegration.expire_behavior:1 of
msgid "An alias for :attr:`expire_behaviour`."
msgstr ""

#: discord.StreamIntegration.role:1 of
msgid "The role which the integration uses for subscribers."
msgstr ""

#: discord.integrations.StreamIntegration.edit:3 of
msgid "Edits the integration."
msgstr ""

#: discord.integrations.StreamIntegration.edit:8 of
msgid ""
"The behaviour when an integration subscription lapses. Aliased to "
"``expire_behavior`` as well."
msgstr ""

#: discord.integrations.StreamIntegration.edit:10 of
msgid ""
"The period (in days) where the integration will ignore lapsed "
"subscriptions."
msgstr ""

#: discord.integrations.StreamIntegration.edit:12 of
msgid ""
"Where emoticons should be synced for this integration (currently twitch "
"only)."
msgstr ""

#: discord.integrations.StreamIntegration.edit:15 of
msgid "You do not have permission to edit the integration."
msgstr ""

#: discord.integrations.StreamIntegration.edit:17 of
msgid "``expire_behaviour`` did not receive a :class:`ExpireBehaviour`."
msgstr ""

#: discord.integrations.StreamIntegration.sync:3 of
msgid "Syncs the integration."
msgstr ""

#: discord.integrations.StreamIntegration.sync:8 of
msgid "You do not have permission to sync the integration."
msgstr ""

#: discord.integrations.StreamIntegration.sync:9 of
msgid "Syncing the integration failed."
msgstr ""

#: ../../api.rst:4298
msgid "Interaction"
msgstr ""

#: discord.interactions.Interaction:1 of
msgid "Represents a Discord interaction."
msgstr ""

#: discord.interactions.Interaction:3 of
msgid ""
"An interaction happens when a user does an action that needs to be "
"notified. Current examples are slash commands and components."
msgstr ""

#: discord.interactions.Interaction:10
#: discord.interactions.MessageInteraction:13 of
msgid "The interaction's ID."
msgstr ""

#: discord.interactions.Interaction:16
#: discord.interactions.MessageInteraction:19 of
msgid "The interaction type."
msgstr ""

#: discord.interactions.Interaction:18
#: discord.interactions.MessageInteraction:21 of
msgid ":class:`InteractionType`"
msgstr ""

#: discord.interactions.Interaction:22 of
msgid "The guild ID the interaction was sent from."
msgstr ""

#: discord.interactions.Interaction:28 of
msgid "The channel ID the interaction was sent from."
msgstr ""

#: discord.interactions.Interaction:34 of
msgid "The application ID that the interaction was for."
msgstr ""

#: discord.interactions.Interaction:40 of
msgid "The user or member that sent the interaction."
msgstr ""

#: discord.interactions.Interaction:42 of
msgid "Optional[Union[:class:`User`, :class:`Member`]]"
msgstr ""

#: discord.interactions.Interaction:46 of
msgid "The message that sent this interaction."
msgstr ""

#: discord.ForumChannel.last_message:14 discord.TextChannel.last_message:14
#: discord.Thread.last_message:14 discord.Thread.starting_message:9
#: discord.VoiceChannel.last_message:14 discord.interactions.Interaction:48
#: discord.message.PartialMessage.edit:45
#: discord.raw_models.AutoModActionExecutionEvent:64
#: discord.raw_models.AutoModActionExecutionEvent:78
#: discord.raw_models.RawMessageDeleteEvent:25
#: discord.raw_models.RawMessageUpdateEvent:36 of
msgid "Optional[:class:`Message`]"
msgstr ""

#: discord.interactions.Interaction:52 of
msgid "The token to continue the interaction. These are valid for 15 minutes."
msgstr ""

#: discord.interactions.Interaction:59
#: discord.interactions.MessageInteraction:37 of
msgid "The raw interaction data."
msgstr ""

#: discord.interactions.Interaction:65 of
msgid "The user's locale."
msgstr ""

#: discord.interactions.Interaction:71 of
msgid "The guilds preferred locale, if invoked in a guild."
msgstr ""

#: discord.interactions.Interaction:77 of
msgid "The custom ID for the interaction."
msgstr ""

#: discord.Interaction.client:1 of
msgid "Returns the client that sent the interaction."
msgstr ""

#: discord.Interaction.client:3 of
msgid ":class:`Client`"
msgstr ""

#: discord.Interaction.guild:1 of
msgid "The guild the interaction was sent from."
msgstr ""

#: discord.interactions.Interaction.is_command:1 of
msgid ""
":class:`bool`: Indicates whether the interaction is an application "
"command."
msgstr ""

#: discord.interactions.Interaction.is_component:1 of
msgid ":class:`bool`: Indicates whether the interaction is a message component."
msgstr ""

#: ../../docstring discord.Interaction.channel:1 of
msgid ""
"Optional[Union[:class:`abc.GuildChannel`, :class:`PartialMessageable`, "
":class:`Thread`]]: The channel the interaction was sent from."
msgstr ""

#: ../../docstring discord.Interaction.channel:4 of
msgid ""
"Note that due to a Discord limitation, DM channels are not resolved since"
" there is no data to complete them. These are :class:`PartialMessageable`"
" instead."
msgstr ""

#: discord.Interaction.permissions:1 of
msgid ""
"The resolved permissions of the member in the channel, including "
"overwrites."
msgstr ""

#: discord.Interaction.permissions:3 of
msgid ""
"In a non-guild context where this doesn't apply, an empty permissions "
"object is returned."
msgstr ""

#: ../../docstring discord.Interaction.app_permissions:1 of
msgid ""
"The resolved permissions of the application in the channel, including "
"overwrites."
msgstr ""

#: ../../docstring discord.Interaction.response:1 of
msgid "Returns an object responsible for handling responding to the interaction."
msgstr ""

#: ../../docstring discord.Interaction.response:3 of
msgid ""
"A response can only be done once. If secondary messages need to be sent, "
"consider using :attr:`followup` instead."
msgstr ""

#: ../../docstring discord.Interaction.response:6 of
msgid ":class:`InteractionResponse`"
msgstr ""

#: discord.interactions.Interaction.original_message:3 of
msgid ""
"Fetches the original interaction response message associated with the "
"interaction."
msgstr ""

#: discord.interactions.Interaction.original_message:5 of
msgid ""
"If the interaction response was :meth:`InteractionResponse.send_message` "
"then this would return the message that was sent using that response. "
"Otherwise, this would return the message that triggered the interaction."
msgstr ""

#: discord.interactions.Interaction.original_message:9 of
msgid "Repeated calls to this will return a cached value."
msgstr ""

#: discord.interactions.Interaction.original_message:11 of
msgid "Fetching the original response message failed."
msgstr ""

#: discord.interactions.Interaction.original_message:12 of
msgid "The channel for the message could not be resolved."
msgstr ""

#: discord.interactions.Interaction.original_message:14 of
msgid "The original interaction response message."
msgstr ""

#: discord.interactions.Interaction.delete_original_message:5 of
msgid ""
"This is a lower level interface to :meth:`InteractionMessage.delete` in "
"case you do not want to fetch the message and save an HTTP request."
msgstr ""

#: discord.interactions.Interaction.to_dict:1 of
msgid "Converts this interaction object into a dict."
msgstr ""

#: discord.interactions.Interaction.to_dict:3 of
msgid ""
"A dictionary of :class:`str` interaction keys bound to the respective "
"value."
msgstr ""

#: ../../api.rst:4306
msgid "InteractionResponse"
msgstr ""

#: discord.interactions.InteractionResponse:1 of
msgid "Represents a Discord interaction response."
msgstr ""

#: discord.interactions.InteractionResponse:3 of
msgid "This type can be accessed through :attr:`Interaction.response`."
msgstr ""

#: discord.interactions.InteractionResponse.is_done:1 of
msgid ""
":class:`bool`: Indicates whether an interaction response has been done "
"before."
msgstr ""

#: discord.interactions.InteractionResponse.is_done:3 of
msgid "An interaction can only be responded to once."
msgstr ""

#: discord.interactions.InteractionResponse.pong:3 of
msgid "Pongs the ping interaction."
msgstr ""

#: discord.interactions.InteractionResponse.pong:5 of
msgid "This should rarely be used."
msgstr ""

#: discord.interactions.InteractionResponse.pong:7 of
msgid "Ponging the interaction failed."
msgstr ""

#: discord.interactions.InteractionResponse.edit_message:3 of
msgid ""
"Responds to this interaction by editing the original message of a "
"component or modal interaction."
msgstr ""

#: discord.interactions.InteractionResponse.edit_message:6 of
msgid "The new content to replace the message with. ``None`` removes the content."
msgstr ""

#: discord.interactions.InteractionResponse.edit_message:13 of
msgid ""
"A new file to add to the message. This cannot be mixed with ``files`` "
"parameter."
msgstr ""

#: discord.interactions.InteractionResponse.edit_message:15 of
msgid ""
"A list of new files to add to the message. Must be a maximum of 10. This "
"cannot be mixed with the ``file`` parameter."
msgstr ""

#: discord.interactions.InteractionResponse.send_autocomplete_result:1 of
msgid "|coro| Responds to this interaction by sending the autocomplete choices."
msgstr ""

#: discord.interactions.InteractionResponse.send_autocomplete_result:4 of
msgid "A list of choices."
msgstr ""

#: discord.interactions.InteractionResponse.send_autocomplete_result:7 of
msgid "Sending the result failed."
msgstr ""

#: ../../api.rst:4314
msgid "InteractionMessage"
msgstr ""

#: discord.interactions.InteractionMessage:1 of
msgid "Represents the original interaction response message."
msgstr ""

#: discord.interactions.InteractionMessage:3 of
msgid ""
"This allows you to edit or delete the message associated with the "
"interaction response. To retrieve this object see "
":meth:`Interaction.original_message`."
msgstr ""

#: ../../api.rst:4322
msgid "MessageInteraction"
msgstr ""

#: discord.interactions.MessageInteraction:1 of
msgid "Represents a Discord message interaction."
msgstr ""

#: discord.interactions.MessageInteraction:3 of
msgid ""
"This is sent on the message object when the message is a response to an "
"interaction without an existing message e.g. application command."
msgstr ""

#: discord.interactions.MessageInteraction:9 of
msgid "Responses to message components do not include this property."
msgstr ""

#: discord.interactions.MessageInteraction:25 of
msgid "The name of the invoked application command."
msgstr ""

#: discord.interactions.MessageInteraction:31 of
msgid "The user that sent the interaction."
msgstr ""

#: ../../api.rst:4330
msgid "Member"
msgstr ""

#: discord.member.Member:1 of
msgid "Represents a Discord member to a :class:`Guild`."
msgstr ""

#: discord.member.Member:3 of
msgid "This implements a lot of the functionality of :class:`User`."
msgstr ""

#: discord.member.Member:9 of
msgid ""
"Checks if two members are equal. Note that this works with :class:`User` "
"instances too."
msgstr ""

#: discord.member.Member:14 of
msgid ""
"Checks if two members are not equal. Note that this works with "
":class:`User` instances too."
msgstr ""

#: discord.member.Member:19 of
msgid "Returns the member's hash."
msgstr ""

#: discord.member.Member:23 of
msgid "Returns the member's name with the discriminator."
msgstr ""

#: discord.member.Member:27 of
msgid ""
"An aware datetime object that specifies the date and time in UTC that the"
" member joined the guild. If the member left and rejoined the guild, this"
" will be the latest date. In certain cases, this can be ``None``."
msgstr ""

#: discord.member.Member:34 of
msgid "The activities that the user is currently doing."
msgstr ""

#: discord.member.Member:38 of
msgid ""
"Due to a Discord API limitation, a user's Spotify activity may not appear"
" if they are listening to a song with a title longer than 128 characters."
msgstr ""

#: discord.member.Member:42 of
msgid "Tuple[Union[:class:`BaseActivity`, :class:`Spotify`]]"
msgstr ""

#: discord.member.Member:46 of
msgid "The guild that the member belongs to."
msgstr ""

#: discord.member.Member:52 of
msgid "The guild specific nickname of the user."
msgstr ""

#: discord.member.Member:58 of
msgid "Whether the member is pending member verification."
msgstr ""

#: discord.member.Member:66 of
msgid ""
"An aware datetime object that specifies the date and time in UTC when the"
" member used their \"Nitro boost\" on the guild, if available. This could"
" be ``None``."
msgstr ""

#: discord.member.Member:73 of
msgid ""
"An aware datetime object that specifies the date and time in UTC when the"
" member will be removed from timeout."
msgstr ""

#: discord.Member.name:1 of
msgid "Equivalent to :attr:`User.name`"
msgstr ""

#: discord.Member.id:1 of
msgid "Equivalent to :attr:`User.id`"
msgstr ""

#: discord.Member.discriminator:1 of
msgid "Equivalent to :attr:`User.discriminator`"
msgstr ""

#: discord.Member.bot:1 of
msgid "Equivalent to :attr:`User.bot`"
msgstr ""

#: discord.Member.system:1 of
msgid "Equivalent to :attr:`User.system`"
msgstr ""

#: discord.Member.created_at:1 of
msgid "Equivalent to :attr:`User.created_at`"
msgstr ""

#: discord.Member.default_avatar:1 of
msgid "Equivalent to :attr:`User.default_avatar`"
msgstr ""

#: discord.Member.avatar:1 of
msgid "Equivalent to :attr:`User.avatar`"
msgstr ""

#: discord.Member.dm_channel:1 of
msgid "Equivalent to :attr:`User.dm_channel`"
msgstr ""

#: discord.Member.mutual_guilds:1 of
msgid "Equivalent to :attr:`User.mutual_guilds`"
msgstr ""

#: discord.Member.public_flags:1 of
msgid "Equivalent to :attr:`User.public_flags`"
msgstr ""

#: discord.Member.banner:1 of
msgid "Equivalent to :attr:`User.banner`"
msgstr ""

#: discord.Member.accent_color:1 of
msgid "Equivalent to :attr:`User.accent_color`"
msgstr ""

#: discord.Member.accent_colour:1 of
msgid "Equivalent to :attr:`User.accent_colour`"
msgstr ""

#: discord.Member.raw_status:1 of
msgid "The member's overall status as a string value."
msgstr ""

#: discord.Member.status:1 of
msgid ""
"The member's overall status. If the value is unknown, then it will be a "
":class:`str` instead."
msgstr ""

#: discord.Member.desktop_status:3 discord.Member.mobile_status:3
#: discord.Member.status:4 discord.Member.web_status:3
#: discord.widget.WidgetMember:49 of
msgid ":class:`Status`"
msgstr ""

#: discord.Member.mobile_status:1 of
msgid "The member's status on a mobile device, if applicable."
msgstr ""

#: discord.Member.desktop_status:1 of
msgid "The member's status on the desktop client, if applicable."
msgstr ""

#: discord.Member.web_status:1 of
msgid "The member's status on the web client, if applicable."
msgstr ""

#: discord.member.Member.is_on_mobile:1 of
msgid ""
":class:`bool`: A helper function that determines if a member is active on"
" a mobile device."
msgstr ""

#: discord.Member.colour:1 of
msgid ""
"A property that returns a colour denoting the rendered colour for the "
"member. If the default colour is the one rendered then an instance of "
":meth:`Colour.default` is returned."
msgstr ""

#: discord.Member.color:1 of
msgid ""
"A property that returns a color denoting the rendered color for the "
"member. If the default color is the one rendered then an instance of "
":meth:`Colour.default` is returned."
msgstr ""

#: discord.Member.roles:1 of
msgid ""
"A :class:`list` of :class:`Role` that the member belongs to. Note that "
"the first element of this list is always the default '@everyone' role."
msgstr ""

#: discord.Member.roles:5 of
msgid "These roles are sorted by their position in the role hierarchy."
msgstr ""

#: discord.Member.mention:1 of
msgid "Returns a string that allows you to mention the member."
msgstr ""

#: discord.Member.display_avatar:1 of
msgid "Returns the member's display avatar."
msgstr ""

#: discord.Member.display_avatar:3 of
msgid ""
"For regular members this is just their avatar, but if they have a guild "
"specific avatar then that is returned instead."
msgstr ""

#: discord.Member.guild_avatar:1 of
msgid ""
"Returns an :class:`Asset` for the guild avatar the member has. If "
"unavailable, ``None`` is returned."
msgstr ""

#: discord.Member.activity:1 of
msgid ""
"Returns the primary activity the user is currently doing. Could be "
"``None`` if no activity is being done."
msgstr ""

#: discord.Member.activity:6 of
msgid ""
"Due to a Discord API limitation, this may be ``None`` if the user is "
"listening to a song on Spotify with a title longer than 128 characters."
msgstr ""

#: discord.Member.activity:12 of
msgid ""
"A user may have multiple activities, these can be accessed under "
":attr:`activities`."
msgstr ""

#: discord.Member.activity:14 discord.widget.WidgetMember:67 of
msgid "Optional[Union[:class:`BaseActivity`, :class:`Spotify`]]"
msgstr ""

#: discord.member.Member.mentioned_in:1 of
msgid "Checks if the member is mentioned in the specified message."
msgstr ""

#: discord.member.Member.mentioned_in:6 of
msgid "Indicates if the member is mentioned in the message."
msgstr ""

#: discord.Member.top_role:1 of
msgid "Returns the member's highest role."
msgstr ""

#: discord.Member.top_role:3 of
msgid ""
"This is useful for figuring where a member stands in the role hierarchy "
"chain."
msgstr ""

#: discord.Member.guild_permissions:1 of
msgid "Returns the member's guild permissions."
msgstr ""

#: discord.Member.guild_permissions:3 of
msgid ""
"This only takes into consideration the guild permissions and not most of "
"the implied permissions or any of the channel permission overwrites. For "
"100% accurate permission calculation, please use "
":meth:`abc.GuildChannel.permissions_for`."
msgstr ""

#: discord.Member.guild_permissions:8 of
msgid ""
"This does take into consideration guild ownership and the administrator "
"implication."
msgstr ""

#: discord.Member.voice:1 of
msgid "Returns the member's current voice state."
msgstr ""

#: discord.Member.voice:3 of
msgid "Optional[:class:`VoiceState`]"
msgstr ""

#: discord.Member.timed_out:1 of
msgid "Returns whether the member is timed out."
msgstr ""

#: discord.Member.timed_out:5 of
msgid "bool"
msgstr ""

#: discord.member.Member.ban:3 of
msgid "Bans this member. Equivalent to :meth:`Guild.ban`."
msgstr ""

#: discord.member.Member.unban:3 of
msgid "Unbans this member. Equivalent to :meth:`Guild.unban`."
msgstr ""

#: discord.member.Member.kick:3 of
msgid "Kicks this member. Equivalent to :meth:`Guild.kick`."
msgstr ""

#: discord.member.Member.edit:3 of
msgid "Edits the member's data."
msgstr ""

#: discord.member.Member.edit:5 of
msgid ""
"Depending on the parameter passed, this requires different permissions "
"listed below:"
msgstr ""

#: discord.member.Member.edit:8 of
msgid "Parameter"
msgstr ""

#: discord.member.Member.edit:8 of
msgid "Permission"
msgstr ""

#: discord.member.Member.edit:10 of
msgid "nick"
msgstr ""

#: discord.member.Member.edit:10 of
msgid ":attr:`Permissions.manage_nicknames`"
msgstr ""

#: discord.member.Member.edit:12 of
msgid "mute"
msgstr ""

#: discord.member.Member.edit:12 of
msgid ":attr:`Permissions.mute_members`"
msgstr ""

#: discord.member.Member.edit:14 of
msgid "deafen"
msgstr ""

#: discord.member.Member.edit:14 of
msgid ":attr:`Permissions.deafen_members`"
msgstr ""

#: discord.member.Member.edit:16 of
msgid ":attr:`Permissions.manage_roles`"
msgstr ""

#: discord.member.Member.edit:18 of
msgid "voice_channel"
msgstr ""

#: discord.member.Member.edit:18 of
msgid ":attr:`Permissions.move_members`"
msgstr ""

#: discord.member.Member.edit:20 of
msgid ":attr:`Permissions.moderate_members`"
msgstr ""

#: discord.member.Member.edit:25 of
msgid "Can now pass ``None`` to ``voice_channel`` to kick a member from voice."
msgstr ""

#: discord.member.Member.edit:28 of
msgid "The newly member is now optionally returned, if applicable."
msgstr ""

#: discord.member.Member.edit:31 of
msgid "The member's new nickname. Use ``None`` to remove the nickname."
msgstr ""

#: discord.member.Member.edit:33 of
msgid "Indicates if the member should be guild muted or un-muted."
msgstr ""

#: discord.member.Member.edit:35 of
msgid "Indicates if the member should be guild deafened or un-deafened."
msgstr ""

#: discord.member.Member.edit:37 of
msgid ""
"Indicates if the member should be suppressed in stage channels.  .. "
"versionadded:: 1.7"
msgstr ""

#: discord.member.Member.edit:37 of
msgid "Indicates if the member should be suppressed in stage channels."
msgstr ""

#: discord.member.Member.edit:41 of
msgid "The member's new list of roles. This *replaces* the roles."
msgstr ""

#: discord.member.Member.edit:43 of
msgid ""
"The voice channel to move the member to. Pass ``None`` to kick them from "
"voice."
msgstr ""

#: discord.member.Member.edit:46 of
msgid "The reason for editing this member. Shows up on the audit log."
msgstr ""

#: discord.member.Member.edit:48 of
msgid ""
"Temporarily puts the member in timeout until this time. If the value is "
"``None``, then the user is removed from timeout.  .. versionadded:: 2.0"
msgstr ""

#: discord.member.Member.edit:48 of
msgid ""
"Temporarily puts the member in timeout until this time. If the value is "
"``None``, then the user is removed from timeout."
msgstr ""

#: discord.member.Member.edit:54 discord.member.Member.request_to_speak:14 of
msgid "You do not have the proper permissions to the action requested."
msgstr ""

#: discord.member.Member.edit:57 of
msgid ""
"The newly updated member, if applicable. This is only returned when "
"certain fields are updated."
msgstr ""

#: discord.member.Member.edit:59 of
msgid "Optional[:class:`.Member`]"
msgstr ""

#: discord.member.Member.timeout:3 of
msgid "Applies a timeout to a member in the guild until a set datetime."
msgstr ""

#: discord.member.Member.timeout:5 discord.member.Member.timeout_for:6 of
msgid ""
"You must have the :attr:`~Permissions.moderate_members` permission to "
"timeout a member."
msgstr ""

#: discord.member.Member.timeout:7 of
msgid ""
"The date and time to timeout the member for. If this is ``None`` then the"
" member is removed from timeout."
msgstr ""

#: discord.member.Member.timeout:12 discord.member.Member.timeout_for:14 of
msgid "You do not have permissions to timeout members."
msgstr ""

#: discord.member.Member.remove_timeout:14 discord.member.Member.timeout:13
#: discord.member.Member.timeout_for:15 of
msgid "An error occurred doing the request."
msgstr ""

#: discord.member.Member.timeout_for:3 of
msgid ""
"Applies a timeout to a member in the guild for a set duration. A shortcut"
" method for :meth:`~.timeout`, and equivalent to "
"``timeout(until=datetime.utcnow() + duration, reason=reason)``."
msgstr ""

#: discord.member.Member.timeout_for:9 of
msgid "The duration to timeout the member for."
msgstr ""

#: discord.member.Member.remove_timeout:3 of
msgid "Removes the timeout from a member."
msgstr ""

#: discord.member.Member.remove_timeout:5 of
msgid ""
"You must have the :attr:`~Permissions.moderate_members` permission to "
"remove the timeout."
msgstr ""

#: discord.member.Member.remove_timeout:8 of
msgid ""
"This is equivalent to calling :meth:`~.timeout` and passing ``None`` to "
"the ``until`` parameter."
msgstr ""

#: discord.member.Member.remove_timeout:13 of
msgid "You do not have permissions to remove the timeout."
msgstr ""

#: discord.member.Member.request_to_speak:3 of
msgid "Request to speak in the connected channel."
msgstr ""

#: discord.member.Member.request_to_speak:5 discord.member.VoiceState:45 of
msgid "Only applies to stage channels."
msgstr ""

#: discord.member.Member.request_to_speak:9 of
msgid ""
"Requesting members that are not the client is equivalent to :attr:`.edit`"
" providing ``suppress`` as ``False``."
msgstr ""

#: discord.member.Member.move_to:3 of
msgid "Moves a member to a new voice channel (they must be connected first)."
msgstr ""

#: discord.member.Member.move_to:5 of
msgid ""
"You must have the :attr:`~Permissions.move_members` permission to use "
"this."
msgstr ""

#: discord.member.Member.move_to:8 of
msgid "This raises the same exceptions as :meth:`edit`."
msgstr ""

#: discord.member.Member.move_to:10 of
msgid "Can now pass ``None`` to kick a member from voice."
msgstr ""

#: discord.member.Member.move_to:13 of
msgid ""
"The new voice channel to move the member to. Pass ``None`` to kick them "
"from voice."
msgstr ""

#: discord.member.Member.add_roles:3 of
msgid "Gives the member a number of :class:`Role`\\s."
msgstr ""

#: discord.member.Member.add_roles:5 of
msgid ""
"You must have the :attr:`~Permissions.manage_roles` permission to use "
"this, and the added :class:`Role`\\s must appear lower in the list of "
"roles than the highest role of the member."
msgstr ""

#: discord.member.Member.add_roles:9 of
msgid ""
"An argument list of :class:`abc.Snowflake` representing a :class:`Role` "
"to give to the member."
msgstr ""

#: discord.member.Member.add_roles:12 of
msgid "The reason for adding these roles. Shows up on the audit log."
msgstr ""

#: discord.member.Member.add_roles:14 of
msgid ""
"Whether to atomically add roles. This will ensure that multiple "
"operations will always be applied regardless of the current state of the "
"cache."
msgstr ""

#: discord.member.Member.add_roles:19 of
msgid "You do not have permissions to add these roles."
msgstr ""

#: discord.member.Member.add_roles:20 of
msgid "Adding roles failed."
msgstr ""

#: discord.Member.jump_url:1 of
msgid "Equivalent to :attr:`User.jump_url`"
msgstr ""

#: discord.member.Member.remove_roles:3 of
msgid "Removes :class:`Role`\\s from this member."
msgstr ""

#: discord.member.Member.remove_roles:5 of
msgid ""
"You must have the :attr:`~Permissions.manage_roles` permission to use "
"this, and the removed :class:`Role`\\s must appear lower in the list of "
"roles than the highest role of the member."
msgstr ""

#: discord.member.Member.remove_roles:9 of
msgid ""
"An argument list of :class:`abc.Snowflake` representing a :class:`Role` "
"to remove from the member."
msgstr ""

#: discord.member.Member.remove_roles:12 of
msgid "The reason for removing these roles. Shows up on the audit log."
msgstr ""

#: discord.member.Member.remove_roles:14 of
msgid ""
"Whether to atomically remove roles. This will ensure that multiple "
"operations will always be applied regardless of the current state of the "
"cache."
msgstr ""

#: discord.member.Member.remove_roles:19 of
msgid "You do not have permissions to remove these roles."
msgstr ""

#: discord.member.Member.remove_roles:20 of
msgid "Removing the roles failed."
msgstr ""

#: discord.member.Member.get_role:1 of
msgid "Returns a role with the given ID from roles which the member has."
msgstr ""

#: discord.member.Member.get_role:8 of
msgid "The role or ``None`` if not found in the member's roles."
msgstr ""

#: ../../api.rst:4346
msgid "Spotify"
msgstr ""

#: discord.activity.Spotify:1 of
msgid ""
"Represents a Spotify listening activity from Discord. This is a special "
"case of :class:`Activity` that makes it easier to work with the Spotify "
"integration."
msgstr ""

#: discord.activity.CustomActivity:7 discord.activity.Spotify:8 of
msgid "Checks if two activities are equal."
msgstr ""

#: discord.activity.CustomActivity:11 discord.activity.Spotify:12 of
msgid "Checks if two activities are not equal."
msgstr ""

#: discord.activity.CustomActivity:15 discord.activity.Spotify:16 of
msgid "Returns the activity's hash."
msgstr ""

#: discord.activity.Spotify:20 of
msgid "Returns the string 'Spotify'."
msgstr ""

#: discord.CustomActivity.type:1 discord.Spotify.type:1 of
msgid ""
"Returns the activity's type. This is for compatibility with "
":class:`Activity`."
msgstr ""

#: discord.Spotify.type:3 of
msgid "It always returns :attr:`ActivityType.listening`."
msgstr ""

#: discord.CustomActivity.type:5 discord.Game.type:5 discord.Spotify.type:5
#: discord.Streaming.type:5 discord.activity.Activity:34 of
msgid ":class:`ActivityType`"
msgstr ""

#: discord.Spotify.created_at:1 of
msgid "When the user started listening in UTC."
msgstr ""

#: discord.Spotify.color:1 discord.Spotify.colour:1 of
msgid "Returns the Spotify integration colour, as a :class:`Colour`."
msgstr ""

#: discord.Spotify.colour:3 of
msgid "There is an alias for this named :attr:`color`"
msgstr ""

#: discord.Spotify.color:3 of
msgid "There is an alias for this named :attr:`colour`"
msgstr ""

#: discord.Spotify.name:1 of
msgid "The activity's name. This will always return \"Spotify\"."
msgstr ""

#: discord.Spotify.title:1 of
msgid "The title of the song being played."
msgstr ""

#: discord.Spotify.artists:1 of
msgid "The artists of the song being played."
msgstr ""

#: discord.Spotify.artist:1 of
msgid "The artist of the song being played."
msgstr ""

#: discord.Spotify.artist:3 of
msgid ""
"This does not attempt to split the artist information into multiple "
"artists. Useful if there's only a single artist."
msgstr ""

#: discord.Spotify.album:1 of
msgid "The album that the song being played belongs to."
msgstr ""

#: discord.Spotify.album_cover_url:1 of
msgid "The album cover image URL from Spotify's CDN."
msgstr ""

#: discord.Spotify.track_id:1 of
msgid "The track ID used by Spotify to identify this song."
msgstr ""

#: discord.Spotify.track_url:1 of
msgid "The track URL to listen on Spotify."
msgstr ""

#: discord.Spotify.start:1 of
msgid "When the user started playing this song in UTC."
msgstr ""

#: discord.Spotify.end:1 of
msgid "When the user will stop playing this song in UTC."
msgstr ""

#: discord.Spotify.duration:1 of
msgid "The duration of the song being played."
msgstr ""

#: discord.Spotify.duration:3 of
msgid ":class:`datetime.timedelta`"
msgstr ""

#: discord.Spotify.party_id:1 of
msgid "The party ID of the listening party."
msgstr ""

#: ../../api.rst:4354
msgid "VoiceState"
msgstr ""

#: discord.member.VoiceState:1 of
msgid "Represents a Discord user's voice state."
msgstr ""

#: discord.member.VoiceState:5 of
msgid "Indicates if the user is currently deafened by the guild."
msgstr ""

#: discord.member.VoiceState:11 of
msgid "Indicates if the user is currently muted by the guild."
msgstr ""

#: discord.member.VoiceState:17 of
msgid "Indicates if the user is currently muted by their own accord."
msgstr ""

#: discord.member.VoiceState:23 of
msgid "Indicates if the user is currently deafened by their own accord."
msgstr ""

#: discord.member.VoiceState:29 of
msgid "Indicates if the user is currently streaming via 'Go Live' feature."
msgstr ""

#: discord.member.VoiceState:37 of
msgid "Indicates if the user is currently broadcasting video."
msgstr ""

#: discord.member.VoiceState:43 of
msgid "Indicates if the user is suppressed from speaking."
msgstr ""

#: discord.member.VoiceState:53 of
msgid ""
"An aware datetime object that specifies the date and time in UTC that the"
" member requested to speak. It will be ``None`` if they are not "
"requesting to speak anymore or have been accepted to speak."
msgstr ""

#: discord.member.VoiceState:57 of
msgid "Only applicable to stage channels."
msgstr ""

#: discord.member.VoiceState:65 of
msgid "Indicates if the user is currently in the AFK channel in the guild."
msgstr ""

#: discord.member.VoiceState:71 of
msgid ""
"The voice channel that the user is currently connected to. ``None`` if "
"the user is not currently in a voice channel."
msgstr ""

#: discord.member.VoiceState:74 of
msgid "Optional[Union[:class:`VoiceChannel`, :class:`StageChannel`]]"
msgstr ""

#: ../../api.rst:4362
msgid "Emoji"
msgstr ""

#: discord.emoji.Emoji:1 of
msgid "Represents a custom emoji."
msgstr ""

#: discord.emoji.Emoji:3 of
msgid ""
"Depending on the way this object was created, some attributes can have a "
"value of ``None``."
msgstr ""

#: discord.emoji.Emoji:10 discord.partial_emoji.PartialEmoji:12 of
msgid "Checks if two emoji are the same."
msgstr ""

#: discord.emoji.Emoji:14 discord.partial_emoji.PartialEmoji:16 of
msgid "Checks if two emoji are not the same."
msgstr ""

#: discord.emoji.Emoji:18 discord.partial_emoji.PartialEmoji:20 of
msgid "Return the emoji's hash."
msgstr ""

#: discord.emoji.Emoji:22 of
msgid ""
"Returns an iterator of ``(field, value)`` pairs. This allows this class "
"to be used as an iterable in list/dict/etc constructions."
msgstr ""

#: discord.emoji.Emoji:27 discord.partial_emoji.PartialEmoji:24 of
msgid "Returns the emoji rendered for discord."
msgstr ""

#: discord.emoji.Emoji:31 of
msgid "The name of the emoji."
msgstr ""

#: discord.emoji.Emoji:43 of
msgid ""
"If colons are required to use this emoji in the client (:PJSalt: vs "
"PJSalt)."
msgstr ""

#: discord.emoji.Emoji:49 of
msgid "Whether an emoji is animated or not."
msgstr ""

#: discord.emoji.Emoji:55 of
msgid "If this emoji is managed by a Twitch integration."
msgstr ""

#: discord.emoji.Emoji:61 of
msgid "The guild ID the emoji belongs to."
msgstr ""

#: discord.emoji.Emoji:67 of
msgid "Whether the emoji is available for use."
msgstr ""

#: discord.emoji.Emoji:73 of
msgid ""
"The user that created the emoji. This can only be retrieved using "
":meth:`Guild.fetch_emoji` and having the "
":attr:`~Permissions.manage_emojis` permission."
msgstr ""

#: discord.Emoji.created_at:1 of
msgid "Returns the emoji's creation time in UTC."
msgstr ""

#: discord.Emoji.url:1 of
msgid "Returns the URL of the emoji."
msgstr ""

#: discord.Emoji.roles:1 of
msgid "A :class:`list` of roles that is allowed to use this emoji."
msgstr ""

#: discord.Emoji.roles:3 of
msgid "If roles is empty, the emoji is unrestricted."
msgstr ""

#: discord.Emoji.guild:1 of
msgid "The guild this emoji belongs to."
msgstr ""

#: discord.emoji.Emoji.is_usable:1 of
msgid ":class:`bool`: Whether the bot can use this emoji."
msgstr ""

#: discord.emoji.Emoji.delete:3 of
msgid "Deletes the custom emoji."
msgstr ""

#: discord.emoji.Emoji.edit:3 of
msgid "Edits the custom emoji."
msgstr ""

#: discord.emoji.Emoji.edit:8 of
msgid "The newly updated emoji is returned."
msgstr ""

#: discord.emoji.Emoji.edit:11 of
msgid "The new emoji name."
msgstr ""

#: discord.emoji.Emoji.edit:13 of
msgid ""
"A list of roles that can use this emoji. An empty list can be passed to "
"make it available to everyone."
msgstr ""

#: discord.emoji.Emoji.edit:15 of
msgid "The reason for editing this emoji. Shows up on the audit log."
msgstr ""

#: discord.emoji.Emoji.edit:18 of
msgid "You are not allowed to edit emojis."
msgstr ""

#: discord.emoji.Emoji.edit:19 of
msgid "An error occurred editing the emoji."
msgstr ""

#: discord.emoji.Emoji.edit:21 of
msgid "The newly updated emoji."
msgstr ""

#: ../../api.rst:4371
msgid "PartialEmoji"
msgstr ""

#: discord.partial_emoji.PartialEmoji:1 of
msgid "Represents a \"partial\" emoji."
msgstr ""

#: discord.partial_emoji.PartialEmoji:3 of
msgid "This model will be given in two scenarios:"
msgstr ""

#: discord.partial_emoji.PartialEmoji:5 of
msgid "\"Raw\" data events such as :func:`on_raw_reaction_add`"
msgstr ""

#: discord.partial_emoji.PartialEmoji:6 of
msgid "Custom emoji that the bot cannot see from e.g. :attr:`Message.reactions`"
msgstr ""

#: discord.partial_emoji.PartialEmoji:28 of
msgid ""
"The custom emoji name, if applicable, or the unicode codepoint of the "
"non-custom emoji. This can be ``None`` if the emoji got deleted (e.g. "
"removing a reaction with a deleted emoji)."
msgstr ""

#: discord.partial_emoji.PartialEmoji:36 of
msgid "Whether the emoji is animated or not."
msgstr ""

#: discord.partial_emoji.PartialEmoji:42 of
msgid "The ID of the custom emoji, if applicable."
msgstr ""

#: discord.partial_emoji.PartialEmoji.from_str:1 of
msgid ""
"Converts a Discord string representation of an emoji to a "
":class:`PartialEmoji`."
msgstr ""

#: discord.partial_emoji.PartialEmoji.from_str:3 of
msgid "The formats accepted are:"
msgstr ""

#: discord.partial_emoji.PartialEmoji.from_str:5 of
msgid "``a:name:id``"
msgstr ""

#: discord.partial_emoji.PartialEmoji.from_str:6 of
msgid "``<a:name:id>``"
msgstr ""

#: discord.partial_emoji.PartialEmoji.from_str:7 of
msgid "``name:id``"
msgstr ""

#: discord.partial_emoji.PartialEmoji.from_str:8 of
msgid "``<:name:id>``"
msgstr ""

#: discord.partial_emoji.PartialEmoji.from_str:10 of
msgid "If the format does not match then it is assumed to be a unicode emoji."
msgstr ""

#: discord.partial_emoji.PartialEmoji.from_str:14 of
msgid "The string representation of an emoji."
msgstr ""

#: discord.partial_emoji.PartialEmoji.from_str:17 of
msgid "The partial emoji from this string."
msgstr ""

#: discord.partial_emoji.PartialEmoji.from_str:18
#: discord.raw_models.RawReactionActionEvent:32
#: discord.raw_models.RawReactionClearEmojiEvent:27 of
msgid ":class:`PartialEmoji`"
msgstr ""

#: discord.partial_emoji.PartialEmoji.is_custom_emoji:1 of
msgid ":class:`bool`: Checks if this is a custom non-Unicode emoji."
msgstr ""

#: discord.partial_emoji.PartialEmoji.is_unicode_emoji:1 of
msgid ":class:`bool`: Checks if this is a Unicode emoji."
msgstr ""

#: discord.PartialEmoji.created_at:1 of
msgid "Returns the emoji's creation time in UTC, or None if Unicode emoji."
msgstr ""

#: discord.PartialEmoji.url:1 of
msgid "Returns the URL of the emoji, if it is custom."
msgstr ""

#: discord.PartialEmoji.url:3 of
msgid "If this isn't a custom emoji then an empty string is returned"
msgstr ""

#: ../../api.rst:4380
msgid "Role"
msgstr ""

#: discord.role.Role:1 of
msgid "Represents a Discord role in a :class:`Guild`."
msgstr ""

#: discord.role.Role:7 of
msgid "Checks if two roles are equal."
msgstr ""

#: discord.role.Role:11 of
msgid "Checks if two roles are not equal."
msgstr ""

#: discord.role.Role:15 of
msgid "Checks if a role is higher than another in the hierarchy."
msgstr ""

#: discord.role.Role:19 of
msgid "Checks if a role is lower than another in the hierarchy."
msgstr ""

#: discord.role.Role:23 of
msgid "Checks if a role is higher or equal to another in the hierarchy."
msgstr ""

#: discord.role.Role:27 of
msgid "Checks if a role is lower or equal to another in the hierarchy."
msgstr ""

#: discord.role.Role:31 of
msgid "Return the role's hash."
msgstr ""

#: discord.role.Role:35 of
msgid "Returns the role's name."
msgstr ""

#: discord.role.Role:39 of
msgid "The ID for the role."
msgstr ""

#: discord.role.Role:45 of
msgid "The name of the role."
msgstr ""

#: discord.role.Role:51 of
msgid "The guild the role belongs to."
msgstr ""

#: discord.role.Role:57 of
msgid "Indicates if the role will be displayed separately from other members."
msgstr ""

#: discord.role.Role:63 of
msgid ""
"The position of the role. This number is usually positive. The bottom "
"role has a position of 0."
msgstr ""

#: discord.role.Role:68 of
msgid ""
"Multiple roles can have the same position number. As a consequence of "
"this, comparing via role position is prone to subtle bugs if checking for"
" role hierarchy. The recommended and correct way to compare for roles in "
"the hierarchy is using the comparison operators on the role objects "
"themselves."
msgstr ""

#: discord.role.Role:78 of
msgid ""
"Indicates if the role is managed by the guild through some form of "
"integrations such as Twitch."
msgstr ""

#: discord.role.Role:85 of
msgid "Indicates if the role can be mentioned by users."
msgstr ""

#: discord.role.Role:91 of
msgid "The role tags associated with this role."
msgstr ""

#: discord.role.Role:93 of
msgid "Optional[:class:`RoleTags`]"
msgstr ""

#: discord.role.Role:97 of
msgid ""
"The role's unicode emoji. Only available to guilds that contain "
"``ROLE_ICONS`` in :attr:`Guild.features`."
msgstr ""

#: discord.role.Role.is_default:1 of
msgid ":class:`bool`: Checks if the role is the default role."
msgstr ""

#: discord.role.Role.is_bot_managed:1 discord.role.RoleTags.is_bot_managed:1 of
msgid ":class:`bool`: Whether the role is associated with a bot."
msgstr ""

#: discord.role.Role.is_premium_subscriber:1
#: discord.role.RoleTags.is_premium_subscriber:1 of
msgid ""
":class:`bool`: Whether the role is the premium subscriber, AKA \"boost\","
" role for the guild."
msgstr ""

#: discord.role.Role.is_integration:1 discord.role.RoleTags.is_integration:1 of
msgid ":class:`bool`: Whether the role is managed by an integration."
msgstr ""

#: discord.role.Role.is_assignable:1 of
msgid ""
":class:`bool`: Whether the role is able to be assigned or removed by the "
"bot."
msgstr ""

#: discord.Role.permissions:1 of
msgid "Returns the role's permissions."
msgstr ""

#: discord.Role.colour:1 of
msgid "Returns the role colour. An alias exists under ``color``."
msgstr ""

#: discord.Role.color:1 of
msgid "Returns the role color. An alias exists under ``colour``."
msgstr ""

#: discord.Role.created_at:1 of
msgid "Returns the role's creation time in UTC."
msgstr ""

#: discord.Role.mention:1 of
msgid "Returns a string that allows you to mention a role."
msgstr ""

#: discord.Role.members:1 of
msgid "Returns all the members with this role."
msgstr ""

#: discord.Role.icon:1 of
msgid "Returns the role's icon asset, if available."
msgstr ""

#: discord.role.Role.edit:3 of
msgid "Edits the role."
msgstr ""

#: discord.role.Role.delete:5 discord.role.Role.edit:5 of
msgid ""
"You must have the :attr:`~Permissions.manage_roles` permission to use "
"this."
msgstr ""

#: discord.role.Role.edit:13 of
msgid ""
"Edits are no longer in-place, the newly edited role is returned instead. "
"Added ``icon`` and ``unicode_emoji``."
msgstr ""

#: discord.role.Role.edit:17 of
msgid "The new role name to change to."
msgstr ""

#: discord.role.Role.edit:19 of
msgid "The new permissions to change to."
msgstr ""

#: discord.role.Role.edit:21 of
msgid "The new colour to change to. (aliased to color as well)"
msgstr ""

#: discord.role.Role.edit:23 of
msgid "Indicates if the role should be shown separately in the member list."
msgstr ""

#: discord.role.Role.edit:25 of
msgid "Indicates if the role should be mentionable by others."
msgstr ""

#: discord.role.Role.edit:27 of
msgid ""
"The new role's position. This must be below your top role's position, or "
"it will fail."
msgstr ""

#: discord.role.Role.edit:30 of
msgid "The reason for editing this role. Shows up on the audit log."
msgstr ""

#: discord.role.Role.edit:32 of
msgid ""
"A :term:`py:bytes-like object` representing the icon. Only PNG/JPEG/WebP "
"is supported. If this argument is passed, ``unicode_emoji`` is set to "
"None. Only available to guilds that contain ``ROLE_ICONS`` in "
":attr:`Guild.features`. Could be ``None`` to denote removal of the icon."
msgstr ""

#: discord.role.Role.edit:37 of
msgid ""
"The role's unicode emoji. If this argument is passed, ``icon`` is set to "
"None. Only available to guilds that contain ``ROLE_ICONS`` in "
":attr:`Guild.features`."
msgstr ""

#: discord.role.Role.edit:41 of
msgid "You do not have permissions to change the role."
msgstr ""

#: discord.role.Role.edit:42 of
msgid "Editing the role failed."
msgstr ""

#: discord.role.Role.edit:43 of
msgid ""
"An invalid position was given or the default     role was asked to be "
"moved."
msgstr ""

#: discord.role.Role.edit:45 of
msgid "The newly edited role."
msgstr ""

#: discord.role.Role.delete:3 of
msgid "Deletes the role."
msgstr ""

#: discord.role.Role.delete:8 of
msgid "The reason for deleting this role. Shows up on the audit log."
msgstr ""

#: discord.role.Role.delete:11 of
msgid "You do not have permissions to delete the role."
msgstr ""

#: discord.role.Role.delete:12 of
msgid "Deleting the role failed."
msgstr ""

#: ../../api.rst:4388
msgid "RoleTags"
msgstr ""

#: discord.role.RoleTags:1 of
msgid "Represents tags on a role."
msgstr ""

#: discord.role.RoleTags:3 of
msgid ""
"A role tag is a piece of extra information attached to a managed role "
"that gives it context for the reason the role is managed."
msgstr ""

#: discord.role.RoleTags:6 of
msgid ""
"While this can be accessed, a useful interface is also provided in the "
":class:`Role` and :class:`Guild` classes as well."
msgstr ""

#: discord.role.RoleTags:13 of
msgid "The bot's user ID that manages this role."
msgstr ""

#: discord.role.RoleTags:19 of
msgid "The integration ID that manages the role."
msgstr ""

#: ../../api.rst:4396
msgid "PartialMessageable"
msgstr ""

#: discord.channel.PartialMessageable:1 of
msgid ""
"Represents a partial messageable to aid with working messageable channels"
" when only a channel ID are present."
msgstr ""

#: discord.channel.PartialMessageable:4 of
msgid ""
"The only way to construct this class is through "
":meth:`Client.get_partial_messageable`."
msgstr ""

#: discord.channel.PartialMessageable:6 discord.message.PartialMessage:11 of
msgid "Note that this class is trimmed down and has no rich attributes."
msgstr ""

#: discord.channel.PartialMessageable:14 of
msgid "Checks if two partial messageables are equal."
msgstr ""

#: discord.channel.PartialMessageable:18 of
msgid "Checks if two partial messageables are not equal."
msgstr ""

#: discord.channel.PartialMessageable:22 of
msgid "Returns the partial messageable's hash."
msgstr ""

#: discord.channel.PartialMessageable:26 of
msgid "The channel ID associated with this partial messageable."
msgstr ""

#: discord.channel.PartialMessageable:32 of
msgid "The channel type associated with this partial messageable, if given."
msgstr ""

#: discord.channel.PartialMessageable:34 of
msgid "Optional[:class:`ChannelType`]"
msgstr ""

#: discord.channel.DMChannel.get_partial_message:1
#: discord.channel.PartialMessageable.get_partial_message:1
#: discord.channel.VoiceChannel.get_partial_message:1
#: discord.channel._TextChannel.get_partial_message:1
#: discord.threads.Thread.get_partial_message:1 of
msgid "Creates a :class:`PartialMessage` from the message ID."
msgstr ""

#: discord.channel.DMChannel.get_partial_message:3
#: discord.channel.PartialMessageable.get_partial_message:3
#: discord.channel.VoiceChannel.get_partial_message:3
#: discord.channel._TextChannel.get_partial_message:3
#: discord.threads.Thread.get_partial_message:3 of
msgid ""
"This is useful if you want to work with a message and only have its ID "
"without doing an unnecessary API call."
msgstr ""

#: discord.channel.DMChannel.get_partial_message:8
#: discord.channel.PartialMessageable.get_partial_message:6
#: discord.channel.VoiceChannel.get_partial_message:8
#: discord.channel._TextChannel.get_partial_message:8
#: discord.threads.Thread.get_partial_message:8 of
msgid "The message ID to create a partial message for."
msgstr ""

#: discord.channel.DMChannel.get_partial_message:11
#: discord.channel.PartialMessageable.get_partial_message:9
#: discord.channel.VoiceChannel.get_partial_message:11
#: discord.channel._TextChannel.get_partial_message:11
#: discord.threads.Thread.get_partial_message:11 of
msgid "The partial message."
msgstr ""

#: discord.channel.DMChannel.get_partial_message:12
#: discord.channel.PartialMessageable.get_partial_message:10
#: discord.channel.VoiceChannel.get_partial_message:12
#: discord.channel._TextChannel.get_partial_message:12
#: discord.threads.Thread.get_partial_message:12 of
msgid ":class:`PartialMessage`"
msgstr ""

#: ../../api.rst:4405
msgid "TextChannel"
msgstr ""

#: discord.channel.TextChannel:1 of
msgid "Represents a Discord text channel."
msgstr ""

#: discord.channel.CategoryChannel:9 discord.channel.DMChannel:7
#: discord.channel.ForumChannel:7 discord.channel.GroupChannel:7
#: discord.channel.StageChannel:9 discord.channel.TextChannel:7
#: discord.channel.VoiceChannel:7 of
msgid "Checks if two channels are equal."
msgstr ""

#: discord.channel.CategoryChannel:13 discord.channel.DMChannel:11
#: discord.channel.ForumChannel:11 discord.channel.GroupChannel:11
#: discord.channel.StageChannel:13 discord.channel.TextChannel:11
#: discord.channel.VoiceChannel:11 of
msgid "Checks if two channels are not equal."
msgstr ""

#: discord.channel.DMChannel:15 discord.channel.ForumChannel:15
#: discord.channel.GroupChannel:15 discord.channel.StageChannel:17
#: discord.channel.TextChannel:15 discord.channel.VoiceChannel:15 of
msgid "Returns the channel's hash."
msgstr ""

#: discord.channel.ForumChannel:19 discord.channel.StageChannel:21
#: discord.channel.TextChannel:19 discord.channel.VoiceChannel:19 of
msgid "Returns the channel's name."
msgstr ""

#: discord.channel.ForumChannel:35 discord.channel.StageChannel:37
#: discord.channel.TextChannel:35 discord.channel.VoiceChannel:35 of
msgid "The channel ID."
msgstr ""

#: discord.channel.ForumChannel:41 discord.channel.StageChannel:49
#: discord.channel.TextChannel:41 discord.channel.VoiceChannel:41 of
msgid "The category channel ID this channel belongs to, if applicable."
msgstr ""

#: discord.channel.ForumChannel:47 discord.channel.TextChannel:47 of
msgid "The channel's topic. ``None`` if it doesn't exist."
msgstr ""

#: discord.channel.ForumChannel:57 discord.channel.StageChannel:55
#: discord.channel.TextChannel:53 discord.channel.VoiceChannel:47 of
msgid ""
"The position in the channel list. This is a number that starts at 0. e.g."
" the top channel is position 0. Can be ``None`` if the channel was "
"received in an interaction."
msgstr ""

#: discord.channel.ForumChannel:64 discord.channel.TextChannel:60 of
msgid ""
"The last message ID of the message sent to this channel. It may *not* "
"point to an existing or valid message."
msgstr ""

#: discord.channel.ForumChannel:71 discord.channel.TextChannel:67 of
msgid ""
"The number of seconds a member must wait between sending messages in this"
" channel. A value of `0` denotes that it is disabled. Bots and users with"
" :attr:`~Permissions.manage_channels` or "
":attr:`~Permissions.manage_messages` bypass slowmode."
msgstr ""

#: discord.channel.CategoryChannel:50 discord.channel.ForumChannel:80
#: discord.channel.TextChannel:76 of
msgid "If the channel is marked as \"not safe for work\"."
msgstr ""

#: discord.channel.CategoryChannel:54 discord.channel.ForumChannel:84
#: discord.channel.TextChannel:80 of
msgid ""
"To check if the channel or the guild of that channel are marked as NSFW, "
"consider :meth:`is_nsfw` instead."
msgstr ""

#: discord.channel.ForumChannel:90 discord.channel.TextChannel:86 of
msgid ""
"The default auto archive duration in minutes for threads created in this "
"channel."
msgstr ""

#: discord.channel.CategoryChannel:60 discord.channel.ForumChannel:98
#: discord.channel.StageChannel:89 discord.channel.TextChannel:94
#: discord.channel.VoiceChannel:91 of
msgid "Extra features of the channel."
msgstr ""

#: discord.channel.CategoryChannel:64 discord.channel.ForumChannel:102
#: discord.channel.StageChannel:93 discord.channel.TextChannel:98
#: discord.channel.VoiceChannel:95 discord.threads.Thread:136 of
msgid ":class:`ChannelFlags`"
msgstr ""

#: discord.channel.TextChannel.is_news:1 of
msgid ":class:`bool`: Checks if the channel is a news/announcements channel."
msgstr ""

#: discord.TextChannel.news:1 of
msgid "Equivalent to :meth:`is_news`."
msgstr ""

#: discord.channel.TextChannel.create_thread:3 of
msgid "Creates a thread in this text channel."
msgstr ""

#: discord.channel.ForumChannel.create_thread:5
#: discord.channel.TextChannel.create_thread:5 of
msgid ""
"To create a public thread, you must have "
":attr:`~discord.Permissions.create_public_threads`. For a private thread,"
" :attr:`~discord.Permissions.create_private_threads` is needed instead."
msgstr ""

#: discord.channel.TextChannel.create_thread:12 of
msgid ""
"A snowflake representing the message to create the thread with. If "
"``None`` is passed then a private thread is created. Defaults to "
"``None``."
msgstr ""

#: discord.channel.TextChannel.create_thread:19 of
msgid ""
"The type of thread to create. If a ``message`` is passed then this "
"parameter is ignored, as a thread created with a message is always a "
"public thread. By default, this creates a private thread if this is "
"``None``."
msgstr ""

#: discord.channel.ForumChannel.create_thread:47
#: discord.channel.TextChannel.create_thread:23 of
msgid "The reason for creating a new thread. Shows up on the audit log."
msgstr ""

#: discord.channel.ForumChannel.create_thread:51
#: discord.channel.TextChannel.create_thread:27 of
msgid "Starting the thread failed."
msgstr ""

#: discord.channel.ForumChannel.create_thread:53
#: discord.channel.TextChannel.create_thread:29 of
msgid "The created thread"
msgstr ""

#: discord.ThreadMember.thread:3 discord.channel.ForumChannel.create_thread:54
#: discord.channel.TextChannel.create_thread:30 discord.threads.Thread.edit:36
#: of
msgid ":class:`Thread`"
msgstr ""

#: discord.channel._TextChannel.archived_threads:1 of
msgid ""
"Returns an :class:`~discord.AsyncIterator` that iterates over all "
"archived threads in the guild."
msgstr ""

#: discord.channel._TextChannel.archived_threads:3 of
msgid ""
"You must have :attr:`~Permissions.read_message_history` to use this. If "
"iterating over private threads then :attr:`~Permissions.manage_threads` "
"is also required."
msgstr ""

#: discord.channel._TextChannel.archived_threads:8 of
msgid ""
"The number of threads to retrieve. If ``None``, retrieves every archived "
"thread in the channel. Note, however, that this would make it a slow "
"operation."
msgstr ""

#: discord.channel._TextChannel.archived_threads:12 of
msgid "Retrieve archived channels before the given date or ID."
msgstr ""

#: discord.channel._TextChannel.archived_threads:14 of
msgid "Whether to retrieve private archived threads."
msgstr ""

#: discord.channel._TextChannel.archived_threads:16 of
msgid ""
"Whether to retrieve private archived threads that you've joined. You "
"cannot set ``joined`` to ``True`` and ``private`` to ``False``."
msgstr ""

#: discord.channel._TextChannel.archived_threads:20 of
msgid "You do not have permissions to get archived threads."
msgstr ""

#: discord.channel._TextChannel.archived_threads:21 of
msgid "The request to get the archived threads failed."
msgstr ""

#: discord.channel._TextChannel.archived_threads:23 of
msgid ":class:`Thread` -- The archived threads."
msgstr ""

#: discord.channel.VoiceChannel.create_webhook:3
#: discord.channel._TextChannel.create_webhook:3 of
msgid "Creates a webhook for this channel."
msgstr ""

#: discord.channel.VoiceChannel.create_webhook:7
#: discord.channel._TextChannel.create_webhook:7 of
msgid "Added the ``reason`` keyword-only parameter."
msgstr ""

#: discord.channel.VoiceChannel.create_webhook:10
#: discord.channel._TextChannel.create_webhook:10 of
msgid "The webhook's name."
msgstr ""

#: discord.channel.VoiceChannel.create_webhook:12
#: discord.channel._TextChannel.create_webhook:12 of
msgid ""
"A :term:`py:bytes-like object` representing the webhook's default avatar."
" This operates similarly to :meth:`~ClientUser.edit`."
msgstr ""

#: discord.channel.VoiceChannel.create_webhook:15
#: discord.channel._TextChannel.create_webhook:15 of
msgid "The reason for creating this webhook. Shows up in the audit logs."
msgstr ""

#: discord.channel.VoiceChannel.create_webhook:18
#: discord.channel._TextChannel.create_webhook:18 of
msgid "Creating the webhook failed."
msgstr ""

#: discord.channel.VoiceChannel.create_webhook:19
#: discord.channel._TextChannel.create_webhook:19 of
msgid "You do not have permissions to create a webhook."
msgstr ""

#: discord.channel.VoiceChannel.create_webhook:21
#: discord.channel._TextChannel.create_webhook:21
#: discord.channel._TextChannel.follow:22 of
msgid "The created webhook."
msgstr ""

#: discord.channel.VoiceChannel.delete_messages:3
#: discord.channel._TextChannel.delete_messages:3
#: discord.threads.Thread.delete_messages:3 of
msgid ""
"Deletes a list of messages. This is similar to :meth:`Message.delete` "
"except it bulk deletes multiple messages."
msgstr ""

#: discord.channel.VoiceChannel.delete_messages:6
#: discord.channel._TextChannel.delete_messages:6
#: discord.threads.Thread.delete_messages:6 of
msgid ""
"As a special case, if the number of messages is 0, then nothing is done. "
"If the number of messages is 1 then single message delete is done. If "
"it's more than two, then bulk delete is used."
msgstr ""

#: discord.channel.VoiceChannel.delete_messages:10
#: discord.channel._TextChannel.delete_messages:10
#: discord.threads.Thread.delete_messages:10 of
msgid ""
"You cannot bulk delete more than 100 messages or messages that are older "
"than 14 days old."
msgstr ""

#: discord.channel.VoiceChannel.delete_messages:13
#: discord.channel._TextChannel.delete_messages:13
#: discord.threads.Thread.delete_messages:13 of
msgid ""
"You must have the :attr:`~Permissions.manage_messages` permission to use "
"this."
msgstr ""

#: discord.channel.VoiceChannel.delete_messages:16
#: discord.channel._TextChannel.delete_messages:16
#: discord.threads.Thread.delete_messages:18 of
msgid "An iterable of messages denoting which ones to bulk delete."
msgstr ""

#: discord.channel.VoiceChannel.delete_messages:18
#: discord.channel.VoiceChannel.purge:40
#: discord.channel._TextChannel.delete_messages:18
#: discord.channel._TextChannel.purge:40
#: discord.threads.Thread.delete_messages:20 discord.threads.Thread.purge:40 of
msgid "The reason for deleting the messages. Shows up on the audit log."
msgstr ""

#: discord.channel.VoiceChannel.delete_messages:21
#: discord.channel._TextChannel.delete_messages:21
#: discord.threads.Thread.delete_messages:23 of
msgid "The number of messages to delete was more than 100."
msgstr ""

#: discord.channel.VoiceChannel.delete_messages:22
#: discord.channel._TextChannel.delete_messages:22 of
msgid "You do not have proper permissions to delete the messages."
msgstr ""

#: discord.channel.VoiceChannel.delete_messages:23
#: discord.channel._TextChannel.delete_messages:23
#: discord.threads.Thread.delete_messages:25 of
msgid "If single delete, then the message was already deleted."
msgstr ""

#: discord.channel.VoiceChannel.delete_messages:24
#: discord.channel._TextChannel.delete_messages:24
#: discord.threads.Thread.delete_messages:26 of
msgid "Deleting the messages failed."
msgstr ""

#: discord.channel.CategoryChannel.edit:3 discord.channel.StageChannel.edit:3
#: discord.channel.VoiceChannel.edit:3 discord.channel._TextChannel.edit:3 of
msgid "Edits the channel."
msgstr ""

#: discord.channel.CategoryChannel.edit:5
#: discord.channel.StageChannel.create_instance:5
#: discord.channel.StageChannel.edit:5 discord.channel.VoiceChannel.edit:5
#: discord.channel._TextChannel.edit:5
#: discord.stage_instance.StageInstance.delete:5
#: discord.stage_instance.StageInstance.edit:5 of
msgid ""
"You must have the :attr:`~Permissions.manage_channels` permission to use "
"this."
msgstr ""

#: discord.channel.CategoryChannel.edit:8 discord.channel.VoiceChannel.edit:8
#: discord.channel._TextChannel.edit:8 of
msgid "The ``overwrites`` keyword-only parameter was added."
msgstr ""

#: discord.channel._TextChannel.edit:11 of
msgid "The ``type`` keyword-only parameter was added."
msgstr ""

#: discord.channel.CategoryChannel.edit:11 discord.channel.StageChannel.edit:11
#: discord.channel.VoiceChannel.edit:11 discord.channel._TextChannel.edit:14 of
msgid ""
"Edits are no longer in-place, the newly edited channel is returned "
"instead."
msgstr ""

#: discord.channel._TextChannel.edit:17 of
msgid "The new channel name."
msgstr ""

#: discord.channel.StageChannel.edit:16 discord.channel.VoiceChannel.edit:20
#: discord.channel._TextChannel.edit:21 of
msgid "The new channel's position."
msgstr ""

#: discord.channel.StageChannel.edit:18 discord.channel.VoiceChannel.edit:22
#: discord.channel._TextChannel.edit:25 of
msgid ""
"Whether to sync permissions with the channel's new or pre-existing "
"category. Defaults to ``False``."
msgstr ""

#: discord.channel.StageChannel.edit:21 discord.channel.VoiceChannel.edit:25
#: discord.channel._TextChannel.edit:28 of
msgid "The new category for this channel. Can be ``None`` to remove the category."
msgstr ""

#: discord.channel._TextChannel.edit:31 of
msgid ""
"Specifies the slowmode rate limit for user in this channel, in seconds. A"
" value of `0` disables slowmode. The maximum value possible is `21600`."
msgstr ""

#: discord.channel._TextChannel.edit:34 of
msgid ""
"Change the type of this text channel. Currently, only conversion between "
":attr:`ChannelType.text` and :attr:`ChannelType.news` is supported. This "
"is only available to guilds that contain ``NEWS`` in "
":attr:`Guild.features`."
msgstr ""

#: discord.channel.StageChannel.edit:24 discord.channel.VoiceChannel.edit:28
#: discord.channel._TextChannel.edit:38 of
msgid "The reason for editing this channel. Shows up on the audit log."
msgstr ""

#: discord.channel.CategoryChannel.edit:22 discord.channel.StageChannel.edit:26
#: discord.channel.VoiceChannel.edit:30 discord.channel._TextChannel.edit:40 of
msgid ""
"The overwrites to apply to channel permissions. Useful for creating "
"secret channels."
msgstr ""

#: discord.channel._TextChannel.edit:42 of
msgid ""
"The new default auto archive duration in minutes for threads created in "
"this channel. Must be one of ``60``, ``1440``, ``4320``, or ``10080``."
msgstr ""

#: discord.channel._TextChannel.edit:46 of
msgid ""
"If position is less than 0 or greater than the number of channels, or if"
"     the permission overwrite information is not in proper form."
msgstr ""

#: discord.channel.StageChannel.edit:37 discord.channel.VoiceChannel.edit:43
#: discord.channel._TextChannel.edit:47 of
msgid "You do not have permissions to edit the channel."
msgstr ""

#: discord.channel.StageChannel.edit:38 discord.channel.VoiceChannel.edit:44
#: discord.channel._TextChannel.edit:48 of
msgid "Editing the channel failed."
msgstr ""

#: discord.channel._TextChannel.edit:50 of
msgid ""
"The newly edited text channel. If the edit was only positional then "
"``None`` is returned instead."
msgstr ""

#: discord.channel._TextChannel.edit:52 of
msgid "Optional[:class:`.TextChannel`]"
msgstr ""

#: discord.channel._TextChannel.follow:1 of
msgid "Follows a channel using a webhook."
msgstr ""

#: discord.channel._TextChannel.follow:3 of
msgid "Only news channels can be followed."
msgstr ""

#: discord.channel._TextChannel.follow:7 of
msgid ""
"The webhook returned will not provide a token to do webhook actions, as "
"Discord does not provide it."
msgstr ""

#: discord.channel._TextChannel.follow:12 of
msgid "The channel you would like to follow from."
msgstr ""

#: discord.channel._TextChannel.follow:14 of
msgid ""
"The reason for following the channel. Shows up on the destination guild's"
" audit log.  .. versionadded:: 1.4"
msgstr ""

#: discord.channel._TextChannel.follow:14 of
msgid ""
"The reason for following the channel. Shows up on the destination guild's"
" audit log."
msgstr ""

#: discord.channel._TextChannel.follow:19 of
msgid "Following the channel failed."
msgstr ""

#: discord.channel._TextChannel.follow:20 of
msgid "You do not have the permissions to create a webhook."
msgstr ""

#: discord.channel.VoiceChannel.is_nsfw:1
#: discord.channel._TextChannel.is_nsfw:1 of
msgid ":class:`bool`: Checks if the channel is NSFW."
msgstr ""

#: discord.ForumChannel.last_message:1 discord.TextChannel.last_message:1
#: discord.VoiceChannel.last_message:1 of
msgid "Fetches the last message from this channel in cache."
msgstr ""

#: discord.ForumChannel.last_message:3 discord.TextChannel.last_message:3
#: discord.Thread.last_message:3 discord.Thread.starting_message:3
#: discord.VoiceChannel.last_message:3 of
msgid "The message might not be valid or point to an existing message."
msgstr ""

#: discord.ForumChannel.last_message:5 discord.TextChannel.last_message:5
#: discord.Thread.last_message:5 discord.VoiceChannel.last_message:5 of
msgid "Reliable Fetching"
msgstr ""

#: discord.ForumChannel.last_message:8 discord.TextChannel.last_message:8
#: discord.Thread.last_message:8 discord.VoiceChannel.last_message:8 of
msgid ""
"For a slightly more reliable method of fetching the last message, "
"consider using either :meth:`history` or :meth:`fetch_message` with the "
":attr:`last_message_id` attribute."
msgstr ""

#: discord.ForumChannel.last_message:13 discord.TextChannel.last_message:13
#: discord.Thread.last_message:13 discord.VoiceChannel.last_message:13 of
msgid "The last message in this channel or ``None`` if not found."
msgstr ""

#: discord.ForumChannel.members:1 discord.TextChannel.members:1 of
msgid "Returns all members that can see this channel."
msgstr ""

#: discord.channel.VoiceChannel.purge:3 discord.channel._TextChannel.purge:3
#: discord.threads.Thread.purge:3 of
msgid ""
"Purges a list of messages that meet the criteria given by the predicate "
"``check``. If a ``check`` is not provided then all messages are deleted "
"without discrimination."
msgstr ""

#: discord.channel.VoiceChannel.purge:7 discord.channel._TextChannel.purge:7 of
msgid ""
"You must have the :attr:`~Permissions.manage_messages` permission to "
"delete messages even if they are your own. The "
":attr:`~Permissions.read_message_history` permission is also needed to "
"retrieve message history."
msgstr ""

#: discord.channel.VoiceChannel.purge:14 discord.channel._TextChannel.purge:14
#: discord.threads.Thread.purge:14 of
msgid "Deleting bot's messages ::"
msgstr ""

#: discord.channel.VoiceChannel.purge:22 discord.channel._TextChannel.purge:22
#: discord.threads.Thread.purge:22 of
msgid ""
"The number of messages to search through. This is not the number of "
"messages that will be deleted, though it can be."
msgstr ""

#: discord.channel.VoiceChannel.purge:25 discord.channel._TextChannel.purge:25
#: discord.threads.Thread.purge:25 of
msgid ""
"The function used to check if a message should be deleted. It must take a"
" :class:`Message` as its sole parameter."
msgstr ""

#: discord.channel.VoiceChannel.purge:28 discord.channel._TextChannel.purge:28
#: discord.threads.Thread.purge:28 of
msgid "Same as ``before`` in :meth:`history`."
msgstr ""

#: discord.channel.VoiceChannel.purge:30 discord.channel._TextChannel.purge:30
#: discord.threads.Thread.purge:30 of
msgid "Same as ``after`` in :meth:`history`."
msgstr ""

#: discord.channel.VoiceChannel.purge:32 discord.channel._TextChannel.purge:32
#: discord.threads.Thread.purge:32 of
msgid "Same as ``around`` in :meth:`history`."
msgstr ""

#: discord.channel.VoiceChannel.purge:34 discord.channel._TextChannel.purge:34
#: discord.threads.Thread.purge:34 of
msgid "Same as ``oldest_first`` in :meth:`history`."
msgstr ""

#: discord.channel.VoiceChannel.purge:36 discord.channel._TextChannel.purge:36
#: discord.threads.Thread.purge:36 of
msgid ""
"If ``True``, use bulk delete. Setting this to ``False`` is useful for "
"mass-deleting a bot's own messages without "
":attr:`Permissions.manage_messages`. When ``True``, will fall back to "
"single delete if messages are older than two weeks."
msgstr ""

#: discord.channel.VoiceChannel.purge:43 discord.channel._TextChannel.purge:43
#: discord.threads.Thread.purge:43 of
msgid "You do not have proper permissions to do the actions required."
msgstr ""

#: discord.channel.VoiceChannel.purge:44 discord.channel._TextChannel.purge:44
#: discord.threads.Thread.purge:44 of
msgid "Purging the messages failed."
msgstr ""

#: discord.channel.VoiceChannel.purge:46 discord.channel._TextChannel.purge:46
#: discord.threads.Thread.purge:46 of
msgid "The list of messages that were deleted."
msgstr ""

#: discord.channel.VoiceChannel.purge:47 discord.channel._TextChannel.purge:47
#: discord.threads.Thread.purge:47 of
msgid "List[:class:`.Message`]"
msgstr ""

#: discord.ForumChannel.threads:1 discord.TextChannel.threads:1 of
msgid "Returns all the threads that you can see."
msgstr ""

#: discord.CategoryChannel.type:1 discord.DMChannel.type:1
#: discord.ForumChannel.type:1 discord.GroupChannel.type:1
#: discord.StageChannel.type:1 discord.TextChannel.type:1 discord.Thread.type:1
#: discord.VoiceChannel.type:1 of
msgid "The channel's Discord type."
msgstr ""

#: discord.CategoryChannel.type:3 discord.DMChannel.type:3
#: discord.ForumChannel.type:3 discord.GroupChannel.type:3
#: discord.StageChannel.type:3 discord.TextChannel.type:3 discord.Thread.type:3
#: discord.VoiceChannel.type:3 discord.invite.PartialInviteChannel:40 of
msgid ":class:`ChannelType`"
msgstr ""

#: discord.channel.VoiceChannel.webhooks:3
#: discord.channel._TextChannel.webhooks:3 of
msgid "Gets the list of webhooks from this channel."
msgstr ""

#: discord.channel.VoiceChannel.webhooks:9
#: discord.channel._TextChannel.webhooks:9 of
msgid "The webhooks for this channel."
msgstr ""

#: ../../api.rst:4421 ../../api.rst:4490
msgid "ForumChannel"
msgstr ""

#: discord.channel.ForumChannel:1 of
msgid "Represents a Discord forum channel."
msgstr ""

#: discord.channel.ForumChannel:51 of
msgid ":attr:`guidelines` exists as an alternative to this attribute."
msgstr ""

#: discord.ForumChannel.guidelines:1 of
msgid "The channel's guidelines. An alias of :attr:`topic`."
msgstr ""

#: discord.channel.ForumChannel.create_thread:3 of
msgid "Creates a thread in this forum channel."
msgstr ""

#: discord.channel.ForumChannel.create_thread:24 of
msgid "The time to wait before deleting the thread."
msgstr ""

#: discord.channel.ForumChannel.create_thread:41 of
msgid ""
"The number of seconds a member must wait between sending messages in the "
"new thread. A value of `0` denotes that it is disabled. Bots and users "
"with :attr:`~Permissions.manage_channels` or "
":attr:`~Permissions.manage_messages` bypass slowmode. If not provided, "
"the forum channel's default slowmode is used."
msgstr ""

#: ../../api.rst:4430
msgid "Thread"
msgstr ""

#: discord.threads.Thread:1 of
msgid "Represents a Discord thread."
msgstr ""

#: discord.threads.Thread:7 of
msgid "Checks if two threads are equal."
msgstr ""

#: discord.threads.Thread:11 of
msgid "Checks if two threads are not equal."
msgstr ""

#: discord.threads.Thread:15 of
msgid "Returns the thread's hash."
msgstr ""

#: discord.threads.Thread:19 of
msgid "Returns the thread's name."
msgstr ""

#: discord.threads.Thread:25 of
msgid "The thread name."
msgstr ""

#: discord.threads.Thread:31 of
msgid "The guild the thread belongs to."
msgstr ""

#: discord.threads.Thread:37 of
msgid "The thread ID."
msgstr ""

#: discord.threads.Thread:40 of
msgid "This ID is the same as the thread starting message ID."
msgstr ""

#: discord.threads.Thread:46 of
msgid "The parent :class:`TextChannel` ID this thread belongs to."
msgstr ""

#: discord.threads.Thread:52 of
msgid "The user's ID that created this thread."
msgstr ""

#: discord.threads.Thread:58 of
msgid ""
"The last message ID of the message sent to this thread. It may *not* "
"point to an existing or valid message."
msgstr ""

#: discord.threads.Thread:65 of
msgid ""
"The number of seconds a member must wait between sending messages in this"
" thread. A value of `0` denotes that it is disabled. Bots and users with "
":attr:`~Permissions.manage_channels` or "
":attr:`~Permissions.manage_messages` bypass slowmode."
msgstr ""

#: discord.threads.Thread:74 of
msgid "An approximate number of messages in this thread. This caps at 50."
msgstr ""

#: discord.threads.Thread:80 of
msgid "An approximate number of members in this thread. This caps at 50."
msgstr ""

#: discord.threads.Thread:86 of
msgid ""
"A thread member representing yourself, if you've joined the thread. This "
"could not be available."
msgstr ""

#: discord.threads.Thread:89 of
msgid "Optional[:class:`ThreadMember`]"
msgstr ""

#: discord.threads.Thread:93 of
msgid "Whether the thread is archived."
msgstr ""

#: discord.threads.Thread:99 of
msgid "Whether the thread is locked."
msgstr ""

#: discord.threads.Thread:105 of
msgid ""
"Whether non-moderators can add other non-moderators to this thread. This "
"is always ``True`` for public threads."
msgstr ""

#: discord.threads.Thread:112 of
msgid ""
"The duration in minutes until the thread is automatically archived due to"
" inactivity. Usually a value of 60, 1440, 4320 and 10080."
msgstr ""

#: discord.threads.Thread:119 of
msgid ""
"An aware timestamp of when the thread's archived status was last updated "
"in UTC."
msgstr ""

#: discord.threads.Thread:125 of
msgid ""
"An aware timestamp of when the thread was created. Only available for "
"threads created after 2022-01-09."
msgstr ""

#: discord.threads.Thread:132 of
msgid "Extra features of the thread."
msgstr ""

#: discord.Thread.parent:1 of
msgid "The parent channel this thread belongs to."
msgstr ""

#: discord.Thread.owner:1 of
msgid "The member this thread belongs to."
msgstr ""

#: discord.Thread.mention:1 of
msgid "The string that allows you to mention the thread."
msgstr ""

#: discord.Thread.jump_url:1 of
msgid "Returns a URL that allows the client to jump to the thread."
msgstr ""

#: discord.Thread.members:1 of
msgid "A list of thread members in this thread."
msgstr ""

#: discord.Thread.members:3 of
msgid ""
"This requires :attr:`Intents.members` to be properly filled. Most of the "
"time however, this data is not provided by the gateway and a call to "
":meth:`fetch_members` is needed."
msgstr ""

#: discord.Thread.members:7 discord.threads.Thread.fetch_members:11 of
msgid "List[:class:`ThreadMember`]"
msgstr ""

#: discord.Thread.last_message:1 of
msgid "Returns the last message from this thread in cache."
msgstr ""

#: discord.Thread.category:1 of
msgid "The category channel the parent channel belongs to, if applicable."
msgstr ""

#: discord.Thread.category:3 discord.Thread.category_id:3 of
msgid "The parent channel was not cached and returned ``None``."
msgstr ""

#: discord.Thread.category:5 of
msgid "The parent channel's category."
msgstr ""

#: discord.Thread.category:6 of
msgid "Optional[:class:`CategoryChannel`]"
msgstr ""

#: discord.Thread.category_id:1 of
msgid "The category channel ID the parent channel belongs to, if applicable."
msgstr ""

#: discord.Thread.category_id:5 of
msgid "The parent channel's category ID."
msgstr ""

#: discord.Thread.starting_message:1 of
msgid "Returns the message that started this thread."
msgstr ""

#: discord.Thread.starting_message:6 of
msgid "The ID for this message is the same as the thread ID."
msgstr ""

#: discord.Thread.starting_message:8 of
msgid ""
"The message that started this thread or ``None`` if not found in the "
"cache."
msgstr ""

#: discord.threads.Thread.is_private:1 of
msgid ":class:`bool`: Whether the thread is a private thread."
msgstr ""

#: discord.threads.Thread.is_private:3 of
msgid ""
"A private thread is only viewable by those that have been explicitly "
"invited or have :attr:`~.Permissions.manage_threads`."
msgstr ""

#: discord.threads.Thread.is_news:1 of
msgid ":class:`bool`: Whether the thread is a news thread."
msgstr ""

#: discord.threads.Thread.is_news:3 of
msgid ""
"A news thread is a thread that has a parent that is a news channel, i.e. "
":meth:`.TextChannel.is_news` is ``True``."
msgstr ""

#: discord.threads.Thread.is_nsfw:1 of
msgid ":class:`bool`: Whether the thread is NSFW or not."
msgstr ""

#: discord.threads.Thread.is_nsfw:3 of
msgid ""
"An NSFW thread is a thread that has a parent that is an NSFW channel, "
"i.e. :meth:`.TextChannel.is_nsfw` is ``True``."
msgstr ""

#: discord.threads.Thread.permissions_for:4 of
msgid ""
"Since threads do not have their own permissions, they inherit them from "
"the parent channel. This is a convenience method for calling "
":meth:`~discord.TextChannel.permissions_for` on the parent channel."
msgstr ""

#: discord.threads.Thread.permissions_for:14 of
msgid "The parent channel was not cached and returned ``None``"
msgstr ""

#: discord.threads.Thread.delete_messages:16 of
msgid "Usable only by bot accounts."
msgstr ""

#: discord.threads.Thread.delete_messages:24 of
msgid ""
"You do not have proper permissions to delete the messages, or     you're "
"not using a bot account."
msgstr ""

#: discord.threads.Thread.purge:7 of
msgid ""
"You must have the :attr:`~Permissions.manage_messages` permission to "
"delete messages even if they are your own (unless you are a user "
"account). The :attr:`~Permissions.read_message_history` permission is "
"also needed to retrieve message history."
msgstr ""

#: discord.threads.Thread.edit:3 of
msgid "Edits the thread."
msgstr ""

#: discord.threads.Thread.edit:5 of
msgid ""
"Editing the thread requires :attr:`.Permissions.manage_threads`. The "
"thread creator can also edit ``name``, ``archived`` or "
"``auto_archive_duration``. Note that if the thread is locked then only "
"those with :attr:`.Permissions.manage_threads` can unarchive a thread."
msgstr ""

#: discord.threads.Thread.edit:10 of
msgid "The thread must be unarchived to be edited."
msgstr ""

#: discord.threads.Thread.edit:12 of
msgid "The new name of the thread."
msgstr ""

#: discord.threads.Thread.edit:14 of
msgid "Whether to archive the thread or not."
msgstr ""

#: discord.threads.Thread.edit:16 of
msgid "Whether to lock the thread or not."
msgstr ""

#: discord.threads.Thread.edit:18 of
msgid ""
"Whether non-moderators can add other non-moderators to this thread. Only "
"available for private threads."
msgstr ""

#: discord.threads.Thread.edit:21 of
msgid ""
"The new duration in minutes before a thread is automatically archived for"
" inactivity. Must be one of ``60``, ``1440``, ``4320``, or ``10080``."
msgstr ""

#: discord.threads.Thread.edit:24 of
msgid ""
"Specifies the slowmode rate limit for user in this thread, in seconds. A "
"value of ``0`` disables slowmode. The maximum value possible is "
"``21600``."
msgstr ""

#: discord.threads.Thread.edit:27 of
msgid "The reason for editing this thread. Shows up on the audit log."
msgstr ""

#: discord.threads.Thread.edit:29 of
msgid ""
"Whether to pin the thread or not. This only works if the thread is part "
"of a forum."
msgstr ""

#: discord.threads.Thread.edit:32 of
msgid "You do not have permissions to edit the thread."
msgstr ""

#: discord.threads.Thread.edit:33 of
msgid "Editing the thread failed."
msgstr ""

#: discord.threads.Thread.edit:35 of
msgid "The newly edited thread."
msgstr ""

#: discord.threads.Thread.archive:3 of
msgid "Archives the thread. This is a shorthand of :meth:`.edit`."
msgstr ""

#: discord.threads.Thread.archive:5 of
msgid "Whether to lock the thread on archive, Defaults to ``False``."
msgstr ""

#: discord.threads.Thread.archive:8 discord.threads.Thread.unarchive:5 of
msgid "The updated thread."
msgstr ""

#: discord.threads.Thread.unarchive:3 of
msgid "Unarchives the thread. This is a shorthand of :meth:`.edit`."
msgstr ""

#: discord.threads.Thread.join:3 of
msgid "Joins this thread."
msgstr ""

#: discord.threads.Thread.join:5 of
msgid ""
"You must have :attr:`~Permissions.send_messages_in_threads` to join a "
"thread. If the thread is private, :attr:`~Permissions.manage_threads` is "
"also needed."
msgstr ""

#: discord.threads.Thread.join:8 of
msgid "You do not have permissions to join the thread."
msgstr ""

#: discord.threads.Thread.join:9 of
msgid "Joining the thread failed."
msgstr ""

#: discord.threads.Thread.leave:3 of
msgid "Leaves this thread."
msgstr ""

#: discord.threads.Thread.leave:5 of
msgid "Leaving the thread failed."
msgstr ""

#: discord.threads.Thread.add_user:3 of
msgid "Adds a user to this thread."
msgstr ""

#: discord.threads.Thread.add_user:5 of
msgid ""
"You must have :attr:`~Permissions.send_messages_in_threads` to add a user"
" to a public thread. If the thread is private and :attr:`invitable` is "
"``False``, then :attr:`~Permissions.manage_threads` is required."
msgstr ""

#: discord.threads.Thread.add_user:10 of
msgid "The user to add to the thread."
msgstr ""

#: discord.threads.Thread.add_user:13 of
msgid "You do not have permissions to add the user to the thread."
msgstr ""

#: discord.threads.Thread.add_user:14 of
msgid "Adding the user to the thread failed."
msgstr ""

#: discord.threads.Thread.remove_user:3 of
msgid "Removes a user from this thread."
msgstr ""

#: discord.threads.Thread.remove_user:5 of
msgid ""
"You must have :attr:`~Permissions.manage_threads` or be the creator of "
"the thread to remove a user."
msgstr ""

#: discord.threads.Thread.remove_user:7 of
msgid "The user to remove from the thread."
msgstr ""

#: discord.threads.Thread.remove_user:10 of
msgid "You do not have permissions to remove the user from the thread."
msgstr ""

#: discord.threads.Thread.remove_user:11 of
msgid "Removing the user from the thread failed."
msgstr ""

#: discord.threads.Thread.fetch_members:3 of
msgid "Retrieves all :class:`ThreadMember` that are in this thread."
msgstr ""

#: discord.threads.Thread.fetch_members:5 of
msgid ""
"This requires :attr:`Intents.members` to get information about members "
"other than yourself."
msgstr ""

#: discord.threads.Thread.fetch_members:8 of
msgid "Retrieving the members failed."
msgstr ""

#: discord.threads.Thread.fetch_members:10 of
msgid "All thread members in the thread."
msgstr ""

#: discord.threads.Thread.delete:3 of
msgid "Deletes this thread."
msgstr ""

#: discord.threads.Thread.delete:5 of
msgid "You must have :attr:`~Permissions.manage_threads` to delete threads."
msgstr ""

#: discord.threads.Thread.delete:7 of
msgid "You do not have permissions to delete this thread."
msgstr ""

#: discord.threads.Thread.delete:8 of
msgid "Deleting the thread failed."
msgstr ""

#: ../../api.rst:4446
msgid "ThreadMember"
msgstr ""

#: discord.threads.ThreadMember:1 of
msgid "Represents a Discord thread member."
msgstr ""

#: discord.threads.ThreadMember:7 of
msgid "Checks if two thread members are equal."
msgstr ""

#: discord.threads.ThreadMember:11 of
msgid "Checks if two thread members are not equal."
msgstr ""

#: discord.threads.ThreadMember:15 of
msgid "Returns the thread member's hash."
msgstr ""

#: discord.threads.ThreadMember:19 of
msgid "Returns the thread member's name."
msgstr ""

#: discord.threads.ThreadMember:25 of
msgid "The thread member's ID."
msgstr ""

#: discord.threads.ThreadMember:31 of
msgid "The thread's ID."
msgstr ""

#: discord.threads.ThreadMember:37 of
msgid "The time the member joined the thread in UTC."
msgstr ""

#: discord.ThreadMember.thread:1 of
msgid "The thread this member belongs to."
msgstr ""

#: ../../api.rst:4454
msgid "VoiceChannel"
msgstr ""

#: discord.channel.VoiceChannel:1 of
msgid "Represents a Discord guild voice channel."
msgstr ""

#: discord.channel.StageChannel:77 discord.channel.VoiceChannel:71 of
msgid "Optional[:class:`VoiceRegion`]"
msgstr ""

#: discord.channel.VoiceChannel:83 of
msgid ""
"The ID of the last message sent to this channel. It may not always point "
"to an existing or valid message."
msgstr ""

#: discord.channel.StageChannel.edit:14 discord.channel.VoiceChannel.edit:14 of
msgid "The new channel's name."
msgstr ""

#: discord.channel.VoiceChannel.edit:16 of
msgid "The new channel's bitrate."
msgstr ""

#: discord.channel.VoiceChannel.edit:18 of
msgid "The new channel's user limit."
msgstr ""

#: discord.channel.VoiceChannel.edit:32 of
msgid ""
"The new region for the voice channel's voice communication. A value of "
"``None`` indicates automatic voice region detection.  .. versionadded:: "
"1.7"
msgstr ""

#: discord.channel.VoiceChannel.edit:32 of
msgid ""
"The new region for the voice channel's voice communication. A value of "
"``None`` indicates automatic voice region detection."
msgstr ""

#: discord.channel.StageChannel.edit:36 discord.channel.VoiceChannel.edit:42 of
msgid "If the permission overwrite information is not in proper form."
msgstr ""

#: discord.channel.VoiceChannel.edit:46 of
msgid ""
"The newly edited voice channel. If the edit was only positional then "
"``None`` is returned instead."
msgstr ""

#: discord.channel.VoiceChannel.edit:48 of
msgid "Optional[:class:`.VoiceChannel`]"
msgstr ""

#: discord.channel.VoiceChannel.create_activity_invite:3 of
msgid "A shortcut method that creates an instant activity invite."
msgstr ""

#: discord.channel.VoiceChannel.create_activity_invite:5 of
msgid ""
"You must have the :attr:`~discord.Permissions.start_embedded_activities` "
"permission to do this."
msgstr ""

#: discord.channel.VoiceChannel.create_activity_invite:8 of
msgid ""
"The activity to create an invite for which can be an application id as "
"well."
msgstr ""

#: discord.channel.VoiceChannel.create_activity_invite:26 of
msgid "If the activity is not a valid activity or application id."
msgstr ""

#: discord.abc.Connectable.connect:3 of
msgid ""
"Connects to voice and creates a :class:`VoiceClient` to establish your "
"connection to the voice server."
msgstr ""

#: ../../docstring discord.MemberCacheFlags.voice:3
#: discord.abc.Connectable.connect:6 of
msgid "This requires :attr:`Intents.voice_states`."
msgstr ""

#: discord.abc.Connectable.connect:8 of
msgid "The timeout in seconds to wait for the voice endpoint."
msgstr ""

#: discord.abc.Connectable.connect:10 of
msgid ""
"Whether the bot should automatically attempt a reconnect if a part of the"
" handshake fails or the gateway goes down."
msgstr ""

#: discord.abc.Connectable.connect:14 of
msgid ""
"A type that subclasses :class:`~discord.VoiceProtocol` to connect with. "
"Defaults to :class:`~discord.VoiceClient`."
msgstr ""

#: discord.abc.Connectable.connect:18 of
msgid "Could not connect to the voice channel in time."
msgstr ""

#: discord.abc.Connectable.connect:19 of
msgid "You are already connected to a voice channel."
msgstr ""

#: discord.abc.Connectable.connect:20 of
msgid "The opus library has not been loaded."
msgstr ""

#: discord.abc.Connectable.connect:22 of
msgid "A voice client that is fully connected to the voice server."
msgstr ""

#: discord.abc.Connectable.connect:23 of
msgid ":class:`~discord.VoiceProtocol`"
msgstr ""

#: discord.StageChannel.members:1 discord.VoiceChannel.members:1 of
msgid "Returns all members that are currently inside this voice channel."
msgstr ""

#: discord.StageChannel.voice_states:1 discord.VoiceChannel.voice_states:1 of
msgid "Returns a mapping of member IDs who have voice states in this channel."
msgstr ""

#: discord.StageChannel.voice_states:7 discord.VoiceChannel.voice_states:7 of
msgid ""
"This function is intentionally low level to replace :attr:`members` when "
"the member cache is unavailable."
msgstr ""

#: discord.StageChannel.voice_states:10 discord.VoiceChannel.voice_states:10 of
msgid "The mapping of member ID to a voice state."
msgstr ""

#: discord.StageChannel.voice_states:11 discord.VoiceChannel.voice_states:11 of
msgid "Mapping[:class:`int`, :class:`VoiceState`]"
msgstr ""

#: ../../api.rst:4463
msgid "StageChannel"
msgstr ""

#: discord.channel.StageChannel:1 of
msgid "Represents a Discord guild stage channel."
msgstr ""

#: discord.channel.StageChannel:43 of
msgid "The channel's topic. ``None`` if it isn't set."
msgstr ""

#: discord.channel.StageChannel:68 of
msgid "The channel's limit for number of members that can be in a stage channel."
msgstr ""

#: discord.channel.StageChannel:74 of
msgid ""
"The region for the stage channel's voice communication. A value of "
"``None`` indicates automatic voice region detection."
msgstr ""

#: discord.channel.StageChannel:81 discord.channel.StageChannel.edit:31 of
msgid "The camera video quality for the stage channel's participants."
msgstr ""

#: discord.StageChannel.requesting_to_speak:1 of
msgid "A list of members who are requesting to speak in the stage channel."
msgstr ""

#: discord.StageChannel.speakers:1 of
msgid "A list of members who have been permitted to speak in the stage channel."
msgstr ""

#: discord.StageChannel.listeners:1 of
msgid "A list of members who are listening in the stage channel."
msgstr ""

#: discord.StageChannel.moderators:1 of
msgid "A list of members who are moderating the stage channel."
msgstr ""

#: discord.StageChannel.instance:1 of
msgid "The running stage instance of the stage channel."
msgstr ""

#: discord.channel.StageChannel.create_instance:3 of
msgid "Create a stage instance."
msgstr ""

#: discord.channel.StageChannel.create_instance:10 of
msgid "The stage instance's topic."
msgstr ""

#: discord.channel.StageChannel.create_instance:12 of
msgid ""
"The stage instance's privacy level. Defaults to "
":attr:`StagePrivacyLevel.guild_only`."
msgstr ""

#: discord.channel.StageChannel.create_instance:14 of
msgid "The reason the stage instance was created. Shows up on the audit log."
msgstr ""

#: discord.channel.StageChannel.create_instance:16 of
msgid ""
"Send a notification to everyone in the server that the stage instance has"
" started. Defaults to ``False``. Requires the ``mention_everyone`` "
"permission."
msgstr ""

#: discord.channel.StageChannel.create_instance:20
#: discord.stage_instance.StageInstance.edit:15 of
msgid "If the ``privacy_level`` parameter is not the proper type."
msgstr ""

#: discord.channel.StageChannel.create_instance:21 of
msgid "You do not have permissions to create a stage instance."
msgstr ""

#: discord.channel.StageChannel.create_instance:22 of
msgid "Creating a stage instance failed."
msgstr ""

#: discord.channel.StageChannel.create_instance:24 of
msgid "The newly created stage instance."
msgstr ""

#: discord.channel.StageChannel.create_instance:25
#: discord.channel.StageChannel.fetch_instance:11 of
msgid ":class:`StageInstance`"
msgstr ""

#: discord.channel.StageChannel.fetch_instance:3 of
msgid "Gets the running :class:`StageInstance`."
msgstr ""

#: discord.channel.StageChannel.fetch_instance:10 of
msgid "The stage instance."
msgstr ""

#: discord.channel.StageChannel.edit:8 of
msgid "The ``topic`` parameter must now be set via :attr:`create_instance`."
msgstr ""

#: discord.channel.StageChannel.edit:28 of
msgid ""
"The new region for the stage channel's voice communication. A value of "
"``None`` indicates automatic voice region detection."
msgstr ""

#: discord.channel.StageChannel.edit:31 of
msgid ""
"The camera video quality for the stage channel's participants.  .. "
"versionadded:: 2.0"
msgstr ""

#: discord.channel.StageChannel.edit:40 of
msgid ""
"The newly edited stage channel. If the edit was only positional then "
"``None`` is returned instead."
msgstr ""

#: discord.channel.StageChannel.edit:42 of
msgid "Optional[:class:`.StageChannel`]"
msgstr ""

#: ../../api.rst:4473
msgid "StageInstance"
msgstr ""

#: discord.stage_instance.StageInstance:1 of
msgid "Represents a stage instance of a stage channel in a guild."
msgstr ""

#: discord.stage_instance.StageInstance:9 of
msgid "Checks if two stage instances are equal."
msgstr ""

#: discord.stage_instance.StageInstance:13 of
msgid "Checks if two stage instances are not equal."
msgstr ""

#: discord.stage_instance.StageInstance:17 of
msgid "Returns the stage instance's hash."
msgstr ""

#: discord.stage_instance.StageInstance:21 of
msgid "The stage instance's ID."
msgstr ""

#: discord.stage_instance.StageInstance:27 of
msgid "The guild that the stage instance is running in."
msgstr ""

#: discord.stage_instance.StageInstance:33 of
msgid "The ID of the channel that the stage instance is running in."
msgstr ""

#: discord.stage_instance.StageInstance:39 of
msgid "The topic of the stage instance."
msgstr ""

#: discord.stage_instance.StageInstance:45 of
msgid "The privacy level of the stage instance."
msgstr ""

#: discord.stage_instance.StageInstance:47 of
msgid ":class:`StagePrivacyLevel`"
msgstr ""

#: discord.stage_instance.StageInstance:51 of
msgid "Whether discoverability for the stage instance is disabled."
msgstr ""

#: discord.stage_instance.StageInstance:57 of
msgid "The scheduled event linked with the stage instance, if any."
msgstr ""

#: ../../docstring discord.StageInstance.channel:1 of
msgid "The channel that stage instance is running in."
msgstr ""

#: ../../docstring discord.StageInstance.channel:3 of
msgid "Optional[:class:`StageChannel`]"
msgstr ""

#: discord.stage_instance.StageInstance.edit:3 of
msgid "Edits the stage instance."
msgstr ""

#: discord.stage_instance.StageInstance.edit:8 of
msgid "The stage instance's new topic."
msgstr ""

#: discord.stage_instance.StageInstance.edit:10 of
msgid "The stage instance's new privacy level."
msgstr ""

#: discord.stage_instance.StageInstance.edit:12 of
msgid "The reason the stage instance was edited. Shows up on the audit log."
msgstr ""

#: discord.stage_instance.StageInstance.edit:16 of
msgid "You do not have permissions to edit the stage instance."
msgstr ""

#: discord.stage_instance.StageInstance.edit:17 of
msgid "Editing a stage instance failed."
msgstr ""

#: discord.stage_instance.StageInstance.delete:3 of
msgid "Deletes the stage instance."
msgstr ""

#: discord.stage_instance.StageInstance.delete:8 of
msgid "The reason the stage instance was deleted. Shows up on the audit log."
msgstr ""

#: discord.stage_instance.StageInstance.delete:11 of
msgid "You do not have permissions to delete the stage instance."
msgstr ""

#: discord.stage_instance.StageInstance.delete:12 of
msgid "Deleting the stage instance failed."
msgstr ""

#: ../../api.rst:4481
msgid "CategoryChannel"
msgstr ""

#: discord.channel.CategoryChannel:1 of
msgid "Represents a Discord channel category."
msgstr ""

#: discord.channel.CategoryChannel:3 of
msgid "These are useful to group channels to logical compartments."
msgstr ""

#: discord.channel.CategoryChannel:17 of
msgid "Returns the category's hash."
msgstr ""

#: discord.channel.CategoryChannel:21 of
msgid "Returns the category's name."
msgstr ""

#: discord.channel.CategoryChannel:25 of
msgid "The category name."
msgstr ""

#: discord.channel.CategoryChannel:31 of
msgid "The guild the category belongs to."
msgstr ""

#: discord.channel.CategoryChannel:37 of
msgid "The category channel ID."
msgstr ""

#: discord.channel.CategoryChannel:43 of
msgid ""
"The position in the category list. This is a number that starts at 0. "
"e.g. the top category is position 0. Can be ``None`` if the channel was "
"received in an interaction."
msgstr ""

#: discord.channel.CategoryChannel.is_nsfw:1 of
msgid ":class:`bool`: Checks if the category is NSFW."
msgstr ""

#: discord.channel.CategoryChannel.edit:14 of
msgid "The new category's name."
msgstr ""

#: discord.channel.CategoryChannel.edit:16 of
msgid "The new category's position."
msgstr ""

#: discord.channel.CategoryChannel.edit:18 of
msgid "To mark the category as NSFW or not."
msgstr ""

#: discord.channel.CategoryChannel.edit:20 of
msgid "The reason for editing this category. Shows up on the audit log."
msgstr ""

#: discord.channel.CategoryChannel.edit:25 of
msgid "If position is less than 0 or greater than the number of categories."
msgstr ""

#: discord.channel.CategoryChannel.edit:26 of
msgid "You do not have permissions to edit the category."
msgstr ""

#: discord.channel.CategoryChannel.edit:27 of
msgid "Editing the category failed."
msgstr ""

#: discord.channel.CategoryChannel.edit:29 of
msgid ""
"The newly edited category channel. If the edit was only positional then "
"``None`` is returned instead."
msgstr ""

#: discord.channel.CategoryChannel.edit:31 of
msgid "Optional[:class:`.CategoryChannel`]"
msgstr ""

#: discord.CategoryChannel.channels:1 of
msgid "Returns the channels that are under this category."
msgstr ""

#: discord.CategoryChannel.channels:3 of
msgid ""
"These are sorted by the official Discord UI, which places voice channels "
"below the text channels."
msgstr ""

#: discord.CategoryChannel.text_channels:1 of
msgid "Returns the text channels that are under this category."
msgstr ""

#: discord.CategoryChannel.voice_channels:1 of
msgid "Returns the voice channels that are under this category."
msgstr ""

#: discord.CategoryChannel.stage_channels:1 of
msgid "Returns the stage channels that are under this category."
msgstr ""

#: discord.CategoryChannel.forum_channels:1 of
msgid "Returns the forum channels that are under this category."
msgstr ""

#: discord.channel.CategoryChannel.create_text_channel:3 of
msgid ""
"A shortcut method to :meth:`Guild.create_text_channel` to create a "
":class:`TextChannel` in the category."
msgstr ""

#: discord.channel.CategoryChannel.create_voice_channel:3 of
msgid ""
"A shortcut method to :meth:`Guild.create_voice_channel` to create a "
":class:`VoiceChannel` in the category."
msgstr ""

#: discord.channel.CategoryChannel.create_stage_channel:3 of
msgid ""
"A shortcut method to :meth:`Guild.create_stage_channel` to create a "
":class:`StageChannel` in the category."
msgstr ""

#: discord.channel.CategoryChannel.create_forum_channel:3 of
msgid ""
"A shortcut method to :meth:`Guild.create_forum_channel` to create a "
":class:`ForumChannel` in the category."
msgstr ""

#: ../../api.rst:4499
msgid "DMChannel"
msgstr ""

#: discord.channel.DMChannel:1 of
msgid "Represents a Discord direct message channel."
msgstr ""

#: discord.channel.DMChannel:19 discord.channel.GroupChannel:19 of
msgid "Returns a string representation of the channel"
msgstr ""

#: discord.channel.DMChannel:23 of
msgid ""
"The user you are participating with in the direct message channel. If "
"this channel is received through the gateway, the recipient information "
"may not be always available."
msgstr ""

#: discord.channel.DMChannel:37 of
msgid "The direct message channel ID."
msgstr ""

#: discord.DMChannel.created_at:1 of
msgid "Returns the direct message channel's creation time in UTC."
msgstr ""

#: discord.channel.DMChannel.permissions_for:1
#: discord.channel.GroupChannel.permissions_for:1 of
msgid "Handles permission resolution for a :class:`User`."
msgstr ""

#: discord.channel.DMChannel.permissions_for:3
#: discord.channel.GroupChannel.permissions_for:3 of
msgid "This function is there for compatibility with other channel types."
msgstr ""

#: discord.channel.DMChannel.permissions_for:5
#: discord.channel.GroupChannel.permissions_for:5 of
msgid "Actual direct messages do not really have the concept of permissions."
msgstr ""

#: discord.channel.DMChannel.permissions_for:7
#: discord.channel.GroupChannel.permissions_for:7 of
msgid "This returns all the Text related permissions set to ``True`` except:"
msgstr ""

#: discord.channel.DMChannel.permissions_for:9
#: discord.channel.GroupChannel.permissions_for:9 of
msgid ""
":attr:`~Permissions.send_tts_messages`: You cannot send TTS messages in a"
" DM."
msgstr ""

#: discord.channel.DMChannel.permissions_for:10
#: discord.channel.GroupChannel.permissions_for:10 of
msgid ""
":attr:`~Permissions.manage_messages`: You cannot delete others messages "
"in a DM."
msgstr ""

#: discord.channel.DMChannel.permissions_for:12 of
msgid ""
"The user to check permissions for. This parameter is ignored but kept for"
" compatibility with other ``permissions_for`` methods."
msgstr ""

#: discord.channel.DMChannel.permissions_for:16 of
msgid "The resolved permissions."
msgstr ""

#: ../../api.rst:4515
msgid "GroupChannel"
msgstr ""

#: discord.channel.GroupChannel:1 of
msgid "Represents a Discord group channel."
msgstr ""

#: discord.channel.GroupChannel:23 of
msgid "The users you are participating with in the group channel."
msgstr ""

#: discord.channel.GroupChannel:25 of
msgid "List[:class:`User`]"
msgstr ""

#: discord.channel.GroupChannel:35 of
msgid "The group channel ID."
msgstr ""

#: discord.channel.GroupChannel:41 of
msgid "The user that owns the group channel."
msgstr ""

#: discord.channel.GroupChannel:47 of
msgid "The owner ID that owns the group channel."
msgstr ""

#: discord.channel.GroupChannel:55 of
msgid "The group channel's name if provided."
msgstr ""

#: discord.GroupChannel.icon:1 of
msgid "Returns the channel's icon asset if available."
msgstr ""

#: discord.channel.GroupChannel.permissions_for:12 of
msgid "This also checks the kick_members permission if the user is the owner."
msgstr ""

#: discord.channel.GroupChannel.permissions_for:14 of
msgid "The user to check permissions for."
msgstr ""

#: discord.channel.GroupChannel.permissions_for:17 of
msgid "The resolved permissions for the user."
msgstr ""

#: discord.channel.GroupChannel.leave:3 of
msgid "Leave the group."
msgstr ""

#: discord.channel.GroupChannel.leave:5 of
msgid "If you are the only one in the group, this deletes it as well."
msgstr ""

#: discord.channel.GroupChannel.leave:7 of
msgid "Leaving the group failed."
msgstr ""

#: ../../api.rst:4531
msgid "PartialInviteGuild"
msgstr ""

#: discord.invite.PartialInviteGuild:1 of
msgid "Represents a \"partial\" invite guild."
msgstr ""

#: discord.invite.PartialInviteChannel:3 discord.invite.PartialInviteGuild:3 of
msgid ""
"This model will be given when the user is not part of the guild the "
":class:`Invite` resolves to."
msgstr ""

#: discord.invite.PartialInviteGuild:10 of
msgid "Checks if two partial guilds are the same."
msgstr ""

#: discord.invite.PartialInviteGuild:14 of
msgid "Checks if two partial guilds are not the same."
msgstr ""

#: discord.invite.PartialInviteGuild:18 of
msgid "Return the partial guild's hash."
msgstr ""

#: discord.invite.PartialInviteGuild:22 of
msgid "Returns the partial guild's name."
msgstr ""

#: discord.invite.PartialInviteGuild:26
#: discord.webhook.async_.PartialWebhookGuild:15 of
msgid "The partial guild's name."
msgstr ""

#: discord.invite.PartialInviteGuild:32
#: discord.webhook.async_.PartialWebhookGuild:9 of
msgid "The partial guild's ID."
msgstr ""

#: discord.invite.PartialInviteGuild:38 of
msgid "The partial guild's verification level."
msgstr ""

#: discord.invite.PartialInviteGuild:44 of
msgid ""
"A list of features the guild has. See :attr:`Guild.features` for more "
"information."
msgstr ""

#: discord.invite.PartialInviteGuild:50 of
msgid "The partial guild's description."
msgstr ""

#: ../../api.rst:4539
msgid "PartialInviteChannel"
msgstr ""

#: discord.invite.PartialInviteChannel:1 of
msgid "Represents a \"partial\" invite channel."
msgstr ""

#: discord.invite.PartialInviteChannel:10 discord.widget.WidgetChannel:7 of
msgid "Checks if two partial channels are the same."
msgstr ""

#: discord.invite.PartialInviteChannel:14 discord.widget.WidgetChannel:11 of
msgid "Checks if two partial channels are not the same."
msgstr ""

#: discord.invite.PartialInviteChannel:18 discord.widget.WidgetChannel:15 of
msgid "Return the partial channel's hash."
msgstr ""

#: discord.invite.PartialInviteChannel:22 discord.widget.WidgetChannel:19 of
msgid "Returns the partial channel's name."
msgstr ""

#: discord.invite.PartialInviteChannel:26
#: discord.webhook.async_.PartialWebhookChannel:15 of
msgid "The partial channel's name."
msgstr ""

#: discord.invite.PartialInviteChannel:32
#: discord.webhook.async_.PartialWebhookChannel:9 of
msgid "The partial channel's ID."
msgstr ""

#: discord.invite.PartialInviteChannel:38 of
msgid "The partial channel's type."
msgstr ""

#: ../../api.rst:4547
msgid "Invite"
msgstr ""

#: discord.invite.Invite:1 of
msgid "Represents a Discord :class:`Guild` or :class:`abc.GuildChannel` invite."
msgstr ""

#: discord.invite.Invite:10 of
msgid "Checks if two invites are equal."
msgstr ""

#: discord.invite.Invite:14 of
msgid "Checks if two invites are not equal."
msgstr ""

#: discord.invite.Invite:18 of
msgid "Returns the invite hash."
msgstr ""

#: discord.invite.Invite:22 of
msgid "Returns the invite URL."
msgstr ""

#: discord.invite.Invite:24 of
msgid "The following table illustrates what methods will obtain the attributes:"
msgstr ""

#: discord.invite.Invite:27 of
msgid "Attribute"
msgstr ""

#: discord.invite.Invite:27 of
msgid "Method"
msgstr ""

#: discord.invite.Invite:29 of
msgid ":attr:`max_age`"
msgstr ""

#: discord.invite.Invite:29 discord.invite.Invite:31 discord.invite.Invite:33
#: discord.invite.Invite:35 discord.invite.Invite:37 of
msgid ":meth:`abc.GuildChannel.invites`\\, :meth:`Guild.invites`"
msgstr ""

#: discord.invite.Invite:31 of
msgid ":attr:`max_uses`"
msgstr ""

#: discord.invite.Invite:33 of
msgid ":attr:`created_at`"
msgstr ""

#: discord.invite.Invite:35 of
msgid ":attr:`temporary`"
msgstr ""

#: discord.invite.Invite:37 of
msgid ":attr:`uses`"
msgstr ""

#: discord.invite.Invite:39 of
msgid ":attr:`approximate_member_count`"
msgstr ""

#: discord.invite.Invite:39 discord.invite.Invite:41 of
msgid ":meth:`Client.fetch_invite` with `with_counts` enabled"
msgstr ""

#: discord.invite.Invite:41 of
msgid ":attr:`approximate_presence_count`"
msgstr ""

#: discord.invite.Invite:43 of
msgid ":attr:`expires_at`"
msgstr ""

#: discord.invite.Invite:43 of
msgid ":meth:`Client.fetch_invite` with `with_expiration` enabled"
msgstr ""

#: discord.invite.Invite:46 of
msgid "If it's not in the table above then it is available by all methods."
msgstr ""

#: discord.invite.Invite:50 of
msgid ""
"How long before the invite expires in seconds. A value of ``0`` indicates"
" that it doesn't expire."
msgstr ""

#: discord.invite.Invite:57 of
msgid "The URL fragment used for the invite."
msgstr ""

#: discord.invite.Invite:63 of
msgid ""
"The guild the invite is for. Can be ``None`` if it's from a group direct "
"message."
msgstr ""

#: discord.invite.Invite:65 of
msgid ""
"Optional[Union[:class:`Guild`, :class:`Object`, "
":class:`PartialInviteGuild`]]"
msgstr ""

#: discord.invite.Invite:69 of
msgid "Indicates if the invite has been revoked."
msgstr ""

#: discord.invite.Invite:75 of
msgid "An aware UTC datetime object denoting the time the invite was created."
msgstr ""

#: discord.invite.Invite:81 of
msgid ""
"Indicates that the invite grants temporary membership. If ``True``, "
"members who joined via this invite will be kicked upon disconnect."
msgstr ""

#: discord.invite.Invite:88 of
msgid "How many times the invite has been used."
msgstr ""

#: discord.invite.Invite:94 of
msgid ""
"How many times the invite can be used. A value of ``0`` indicates that it"
" has unlimited uses."
msgstr ""

#: discord.invite.Invite:107 of
msgid "The approximate number of members in the guild."
msgstr ""

#: discord.invite.Invite:113 of
msgid ""
"The approximate number of members currently active in the guild. This "
"includes idle, dnd, online, and invisible members. Offline members are "
"excluded."
msgstr ""

#: discord.invite.Invite:120 of
msgid ""
"The expiration date of the invite. If the value is ``None`` when received"
" through `Client.fetch_invite` with `with_expiration` enabled, the invite"
" will never expire."
msgstr ""

#: discord.invite.Invite:129 of
msgid "The channel the invite is for."
msgstr ""

#: discord.invite.Invite:131 of
msgid ""
"Union[:class:`abc.GuildChannel`, :class:`Object`, "
":class:`PartialInviteChannel`]"
msgstr ""

#: discord.invite.Invite:135 of
msgid "The type of target for the voice channel invite."
msgstr ""

#: discord.invite.Invite:139 of
msgid ":class:`InviteTarget`"
msgstr ""

#: discord.invite.Invite:143 of
msgid "The user whose stream to display for this invite, if any."
msgstr ""

#: discord.invite.Invite:151 of
msgid "The embedded application the invite targets, if any."
msgstr ""

#: discord.invite.Invite:155 of
msgid "Optional[:class:`PartialAppInfo`]"
msgstr ""

#: discord.invite.Invite:159 of
msgid "The scheduled event linked with the invite."
msgstr ""

#: discord.Invite.id:1 of
msgid "Returns the proper code portion of the invite."
msgstr ""

#: discord.Invite.url:1 of
msgid "A property that retrieves the invite URL."
msgstr ""

#: discord.invite.Invite.delete:3 of
msgid "Revokes the instant invite."
msgstr ""

#: discord.invite.Invite.delete:5 of
msgid ""
"You must have the :attr:`~Permissions.manage_channels` permission to do "
"this."
msgstr ""

#: discord.invite.Invite.delete:7 of
msgid "The reason for deleting this invite. Shows up on the audit log."
msgstr ""

#: discord.invite.Invite.set_scheduled_event:1 of
msgid "Links the given scheduled event to this invite."
msgstr ""

#: discord.invite.Invite.set_scheduled_event:5 of
msgid ""
"Scheduled events aren't actually associated with invites on the API. Any "
"guild channel invite can have an event attached to it. Using "
":meth:`abc.GuildChannel.create_invite`, :meth:`Client.fetch_invite`, or "
"this method, you can link scheduled events."
msgstr ""

#: discord.invite.Invite.set_scheduled_event:12 of
msgid "The scheduled event object to link."
msgstr ""

#: ../../api.rst:4555
msgid "Template"
msgstr ""

#: discord.template.Template:1 of
msgid "Represents a Discord template."
msgstr ""

#: discord.template.Template:13 of
msgid "How many times the template has been used."
msgstr ""

#: discord.template.Template:31 of
msgid "The creator of the template."
msgstr ""

#: discord.template.Template:37 of
msgid "An aware datetime in UTC representing when the template was created."
msgstr ""

#: discord.template.Template:43 of
msgid ""
"An aware datetime in UTC representing when the template was last updated."
" This is referred to as \"last synced\" in the official Discord client."
msgstr ""

#: discord.template.Template:50 of
msgid "The source guild."
msgstr ""

#: discord.template.Template:56 of
msgid "Whether the template has unsynced changes."
msgstr ""

#: discord.template.Template.create_guild:3 of
msgid "Creates a :class:`.Guild` using the template."
msgstr ""

#: discord.template.Template.sync:3 of
msgid "Sync the template to the guild's current state."
msgstr ""

#: discord.template.Template.delete:5 discord.template.Template.edit:5
#: discord.template.Template.sync:5 of
msgid ""
"You must have the :attr:`~Permissions.manage_guild` permission in the "
"source guild to do this."
msgstr ""

#: discord.template.Template.sync:10 of
msgid "The template is no longer synced in-place, instead it is returned."
msgstr ""

#: discord.template.Template.sync:13 of
msgid "Syncing the template failed."
msgstr ""

#: discord.template.Template.sync:14 of
msgid "You don't have permissions to sync the template."
msgstr ""

#: discord.template.Template.delete:12 discord.template.Template.edit:20
#: discord.template.Template.sync:15 of
msgid "This template does not exist."
msgstr ""

#: discord.template.Template.sync:17 of
msgid "The newly synced template."
msgstr ""

#: discord.template.Template.edit:23 discord.template.Template.sync:18 of
msgid ":class:`Template`"
msgstr ""

#: discord.template.Template.edit:3 of
msgid "Edit the template metadata."
msgstr ""

#: discord.template.Template.edit:10 of
msgid "The template is no longer edited in-place, instead it is returned."
msgstr ""

#: discord.template.Template.edit:13 of
msgid "The template's new name."
msgstr ""

#: discord.template.Template.edit:15 of
msgid "The template's new description."
msgstr ""

#: discord.template.Template.edit:18 of
msgid "Editing the template failed."
msgstr ""

#: discord.template.Template.edit:19 of
msgid "You don't have permissions to edit the template."
msgstr ""

#: discord.template.Template.edit:22 of
msgid "The newly edited template."
msgstr ""

#: discord.template.Template.delete:3 of
msgid "Delete the template."
msgstr ""

#: discord.template.Template.delete:10 of
msgid "Deleting the template failed."
msgstr ""

#: discord.template.Template.delete:11 of
msgid "You don't have permissions to delete the template."
msgstr ""

#: discord.Template.url:1 of
msgid "The template url."
msgstr ""

#: ../../api.rst:4563
msgid "WelcomeScreen"
msgstr ""

#: discord.welcome_screen.WelcomeScreen:1 of
msgid "Represents the welcome screen of a guild."
msgstr ""

#: discord.welcome_screen.WelcomeScreen:7 of
msgid "The description text displayed on the welcome screen."
msgstr ""

#: discord.welcome_screen.WelcomeScreen:13 of
msgid "A list of channels displayed on welcome screen."
msgstr ""

#: discord.welcome_screen.WelcomeScreen:15 of
msgid "List[:class:`WelcomeScreenChannel`]"
msgstr ""

#: discord.WelcomeScreen.enabled:1 of
msgid "Indicates whether the welcome screen is enabled or not."
msgstr ""

#: discord.WelcomeScreen.guild:1 of
msgid "The guild this welcome screen belongs to."
msgstr ""

#: discord.welcome_screen.WelcomeScreen.edit:3 of
msgid "Edits the welcome screen."
msgstr ""

#: discord.welcome_screen.WelcomeScreen.edit:25 of
msgid ""
"Welcome channels can only accept custom emojis if "
":attr:`~Guild.premium_tier` is level 2 or above."
msgstr ""

#: discord.welcome_screen.WelcomeScreen.edit:33 of
msgid "The reason that shows up on Audit log."
msgstr ""

#: ../../api.rst:4571
msgid "WelcomeScreenChannel"
msgstr ""

#: discord.welcome_screen.WelcomeScreenChannel:1 of
msgid "Represents a welcome channel displayed on :class:`WelcomeScreen`"
msgstr ""

#: discord.welcome_screen.WelcomeScreenChannel:7 of
msgid "The channel that is being referenced."
msgstr ""

#: discord.welcome_screen.WelcomeScreenChannel:9 of
msgid ":class:`abc.Snowflake`"
msgstr ""

#: discord.welcome_screen.WelcomeScreenChannel:13 of
msgid "The description of the channel that is shown on the welcome screen."
msgstr ""

#: discord.welcome_screen.WelcomeScreenChannel:19 of
msgid "The emoji of the channel that is shown on welcome screen."
msgstr ""

#: discord.welcome_screen.WelcomeScreenChannel:21 of
msgid ":class:`Union[:class:`Emoji`, :class:`PartialEmoji`, :class:`str`]`"
msgstr ""

#: ../../api.rst:4579
msgid "WidgetChannel"
msgstr ""

#: discord.widget.WidgetChannel:1 of
msgid "Represents a \"partial\" widget channel."
msgstr ""

#: discord.widget.WidgetChannel:23 of
msgid "The channel's ID."
msgstr ""

#: discord.widget.WidgetChannel:35 of
msgid "The channel's position"
msgstr ""

#: ../../api.rst:4587
msgid "WidgetMember"
msgstr ""

#: discord.widget.WidgetMember:1 of
msgid "Represents a \"partial\" member of the widget's guild."
msgstr ""

#: discord.widget.WidgetMember:7 of
msgid "Checks if two widget members are the same."
msgstr ""

#: discord.widget.WidgetMember:11 of
msgid "Checks if two widget members are not the same."
msgstr ""

#: discord.widget.WidgetMember:15 of
msgid "Return the widget member's hash."
msgstr ""

#: discord.widget.WidgetMember:19 of
msgid "Returns the widget member's `name#discriminator`."
msgstr ""

#: discord.widget.WidgetMember:23 of
msgid "The member's ID."
msgstr ""

#: discord.widget.WidgetMember:29 of
msgid "The member's username."
msgstr ""

#: discord.widget.WidgetMember:35 of
msgid "The member's discriminator."
msgstr ""

#: discord.widget.WidgetMember:41 of
msgid "Whether the member is a bot."
msgstr ""

#: discord.widget.WidgetMember:47 of
msgid "The member's status."
msgstr ""

#: discord.widget.WidgetMember:53 of
msgid "The member's nickname."
msgstr ""

#: discord.widget.WidgetMember:59 of
msgid "The member's avatar hash."
msgstr ""

#: discord.widget.WidgetMember:65 of
msgid "The member's activity."
msgstr ""

#: discord.widget.WidgetMember:71 of
msgid "Whether the member is currently deafened."
msgstr ""

#: discord.widget.WidgetMember:77 of
msgid "Whether the member is currently muted."
msgstr ""

#: discord.widget.WidgetMember:83 of
msgid "Whether the member is currently being suppressed."
msgstr ""

#: discord.widget.WidgetMember:89 of
msgid "Which channel the member is connected to."
msgstr ""

#: discord.widget.WidgetMember:91 of
msgid "Optional[:class:`WidgetChannel`]"
msgstr ""

#: discord.WidgetMember.display_name:1 of
msgid "Returns the member's display name."
msgstr ""

#: ../../api.rst:4596
msgid "Widget"
msgstr ""

#: discord.widget.Widget:1 of
msgid "Represents a :class:`Guild` widget."
msgstr ""

#: discord.widget.Widget:7 of
msgid "Checks if two widgets are the same."
msgstr ""

#: discord.widget.Widget:11 of
msgid "Checks if two widgets are not the same."
msgstr ""

#: discord.widget.Widget:15 of
msgid "Returns the widget's JSON URL."
msgstr ""

#: discord.widget.Widget:25 of
msgid "The guild's name."
msgstr ""

#: discord.widget.Widget:31 of
msgid "The accessible voice channels in the guild."
msgstr ""

#: discord.widget.Widget:33 of
msgid "List[:class:`WidgetChannel`]"
msgstr ""

#: discord.widget.Widget:37 of
msgid ""
"The online members in the server. Offline members do not appear in the "
"widget."
msgstr ""

#: discord.widget.Widget:42 of
msgid ""
"Due to a Discord limitation, if this data is available the users will be "
"\"anonymized\" with linear IDs and discriminator information being "
"incorrect. Likewise, the number of members retrieved is capped."
msgstr ""

#: discord.Widget.created_at:1 of
msgid "Returns the member's creation time in UTC."
msgstr ""

#: discord.Widget.json_url:1 of
msgid "The JSON URL of the widget."
msgstr ""

#: discord.Widget.invite_url:1 of
msgid "The invite URL for the guild, if available."
msgstr ""

#: discord.widget.Widget.fetch_invite:3 of
msgid ""
"Retrieves an :class:`Invite` from the widget's invite URL. This is the "
"same as :meth:`Client.fetch_invite`; the invite code is abstracted away."
msgstr ""

#: discord.widget.Widget.fetch_invite:7 of
msgid ""
"Whether to include count information in the invite. This fills the "
":attr:`Invite.approximate_member_count` and "
":attr:`Invite.approximate_presence_count` fields."
msgstr ""

#: discord.widget.Widget.fetch_invite:12 of
msgid "The invite from the widget's invite URL."
msgstr ""

#: discord.widget.Widget.fetch_invite:13 of
msgid ":class:`Invite`"
msgstr ""

#: ../../api.rst:4604
msgid "StickerPack"
msgstr ""

#: discord.sticker.StickerPack:1 of
msgid "Represents a sticker pack."
msgstr ""

#: discord.sticker.StickerPack:9 of
msgid "Returns the name of the sticker pack."
msgstr ""

#: discord.sticker.StickerPack:13 of
msgid "Checks if the sticker pack is equal to another sticker pack."
msgstr ""

#: discord.sticker.StickerPack:17 of
msgid "Checks if the sticker pack is not equal to another sticker pack."
msgstr ""

#: discord.sticker.StickerPack:21 of
msgid "The name of the sticker pack."
msgstr ""

#: discord.sticker.StickerPack:27 of
msgid "The description of the sticker pack."
msgstr ""

#: discord.sticker.StickerPack:33 of
msgid "The id of the sticker pack."
msgstr ""

#: discord.sticker.StickerPack:39 of
msgid "The stickers of this sticker pack."
msgstr ""

#: discord.sticker.StickerPack:41 of
msgid "List[:class:`StandardSticker`]"
msgstr ""

#: discord.sticker.StickerPack:45 of
msgid "The SKU ID of the sticker pack."
msgstr ""

#: discord.sticker.StickerPack:51 of
msgid "The ID of the sticker used for the cover of the sticker pack."
msgstr ""

#: discord.sticker.StickerPack:57 of
msgid "The sticker used for the cover of the sticker pack."
msgstr ""

#: discord.sticker.StickerPack:59 of
msgid ":class:`StandardSticker`"
msgstr ""

#: discord.StickerPack.banner:1 of
msgid "The banner asset of the sticker pack."
msgstr ""

#: ../../api.rst:4612
msgid "StickerItem"
msgstr ""

#: discord.sticker.StickerItem:1 of
msgid "Represents a sticker item."
msgstr ""

#: discord.sticker.StickerItem:9 of
msgid "Returns the name of the sticker item."
msgstr ""

#: discord.sticker.StickerItem:13 of
msgid "Checks if the sticker item is equal to another sticker item."
msgstr ""

#: discord.sticker.StickerItem:17 of
msgid "Checks if the sticker item is not equal to another sticker item."
msgstr ""

#: discord.sticker.GuildSticker:21 discord.sticker.StandardSticker:21
#: discord.sticker.Sticker:21 discord.sticker.StickerItem:21 of
msgid "The sticker's name."
msgstr ""

#: discord.sticker.GuildSticker:27 discord.sticker.StandardSticker:27
#: discord.sticker.Sticker:27 discord.sticker.StickerItem:27 of
msgid "The id of the sticker."
msgstr ""

#: discord.sticker.GuildSticker:39 discord.sticker.StandardSticker:45
#: discord.sticker.Sticker:45 discord.sticker.StickerItem:33 of
msgid "The format for the sticker's image."
msgstr ""

#: discord.sticker.Sticker:51 discord.sticker.StickerItem:39 of
msgid "The URL for the sticker's image."
msgstr ""

#: discord.sticker.StickerItem.fetch:3 of
msgid "Attempts to retrieve the full sticker data of the sticker item."
msgstr ""

#: discord.sticker.StickerItem.fetch:8 of
msgid "Union[:class:`StandardSticker`, :class:`GuildSticker`]"
msgstr ""

#: ../../api.rst:4620
msgid "Sticker"
msgstr ""

#: discord.sticker.Sticker:1 of
msgid "Represents a sticker."
msgstr ""

#: discord.sticker.GuildSticker:9 discord.sticker.StandardSticker:9
#: discord.sticker.Sticker:9 of
msgid "Returns the name of the sticker."
msgstr ""

#: discord.sticker.GuildSticker:13 discord.sticker.StandardSticker:13
#: discord.sticker.Sticker:13 of
msgid "Checks if the sticker is equal to another sticker."
msgstr ""

#: discord.sticker.GuildSticker:17 discord.sticker.StandardSticker:17
#: discord.sticker.Sticker:17 of
msgid "Checks if the sticker is not equal to another sticker."
msgstr ""

#: discord.sticker.GuildSticker:33 discord.sticker.StandardSticker:33
#: discord.sticker.Sticker:33 of
msgid "The description of the sticker."
msgstr ""

#: discord.sticker.StandardSticker:39 discord.sticker.Sticker:39 of
msgid "The id of the sticker's pack."
msgstr ""

#: discord.Sticker.created_at:1 of
msgid "Returns the sticker's creation time in UTC."
msgstr ""

#: ../../api.rst:4628
msgid "StandardSticker"
msgstr ""

#: discord.sticker.StandardSticker:1 of
msgid "Represents a sticker that is found in a standard sticker pack."
msgstr ""

#: discord.sticker.StandardSticker:51 of
msgid "A list of tags for the sticker."
msgstr ""

#: discord.sticker.StandardSticker:57 of
msgid "The sticker's sort order within its pack."
msgstr ""

#: discord.sticker.StandardSticker.pack:3 of
msgid "Retrieves the sticker pack that this sticker belongs to."
msgstr ""

#: discord.sticker.StandardSticker.pack:5 of
msgid "The corresponding sticker pack was not found."
msgstr ""

#: discord.sticker.StandardSticker.pack:6 of
msgid "Retrieving the sticker pack failed."
msgstr ""

#: discord.sticker.StandardSticker.pack:8 of
msgid "The retrieved sticker pack."
msgstr ""

#: discord.sticker.StandardSticker.pack:9 of
msgid ":class:`StickerPack`"
msgstr ""

#: ../../api.rst:4636
msgid "GuildSticker"
msgstr ""

#: discord.sticker.GuildSticker:1 of
msgid "Represents a sticker that belongs to a guild."
msgstr ""

#: discord.sticker.GuildSticker:45 of
msgid "Whether this sticker is available for use."
msgstr ""

#: discord.sticker.GuildSticker:51 of
msgid "The ID of the guild that this sticker is from."
msgstr ""

#: discord.sticker.GuildSticker:57 of
msgid ""
"The user that created this sticker. This can only be retrieved using "
":meth:`Guild.fetch_sticker` and having the "
":attr:`~Permissions.manage_emojis_and_stickers` permission."
msgstr ""

#: discord.sticker.GuildSticker:64 of
msgid "The name of a unicode emoji that represents this sticker."
msgstr ""

#: ../../docstring discord.GuildSticker.guild:1 of
msgid ""
"The guild that this sticker is from. Could be ``None`` if the bot is not "
"in the guild."
msgstr ""

#: discord.sticker.GuildSticker.edit:3 of
msgid "Edits a :class:`GuildSticker` for the guild."
msgstr ""

#: discord.sticker.GuildSticker.edit:5 of
msgid "The sticker's new name. Must be at least 2 characters."
msgstr ""

#: discord.sticker.GuildSticker.edit:7 of
msgid "The sticker's new description. Can be ``None``."
msgstr ""

#: discord.sticker.GuildSticker.edit:11 of
msgid "The reason for editing this sticker. Shows up on the audit log."
msgstr ""

#: discord.sticker.GuildSticker.edit:14 of
msgid "You are not allowed to edit stickers."
msgstr ""

#: discord.sticker.GuildSticker.edit:15 of
msgid "An error occurred editing the sticker."
msgstr ""

#: discord.sticker.GuildSticker.edit:17 of
msgid "The newly modified sticker."
msgstr ""

#: ../../api.rst:4644
msgid "AutoModRule"
msgstr ""

#: discord.automod.AutoModRule:1 of
msgid "Represents a guild's auto moderation rule."
msgstr ""

#: discord.automod.AutoModRule:9 of
msgid "Checks if two rules are equal."
msgstr ""

#: discord.automod.AutoModRule:13 of
msgid "Checks if two rules are not equal."
msgstr ""

#: discord.automod.AutoModRule:17 of
msgid "Returns the rule's hash."
msgstr ""

#: discord.automod.AutoModRule:21 of
msgid "Returns the rule's name."
msgstr ""

#: discord.automod.AutoModRule:25 of
msgid "The rule's ID."
msgstr ""

#: discord.automod.AutoModRule:31 of
msgid "The rule's name."
msgstr ""

#: discord.automod.AutoModRule:37 of
msgid "The ID of the user who created this rule."
msgstr ""

#: discord.automod.AutoModRule:43 of
msgid "Indicates in what context the rule is checked."
msgstr ""

#: discord.automod.AutoModRule:45 of
msgid ":class:`AutoModEventType`"
msgstr ""

#: discord.automod.AutoModRule:49 of
msgid ""
"Indicates what type of information is checked to determine whether the "
"rule is triggered."
msgstr ""

#: discord.automod.AutoModRule:51 of
msgid ":class:`AutoModTriggerType`"
msgstr ""

#: discord.automod.AutoModRule:57 of
msgid ":class:`AutoModTriggerMetadata`"
msgstr ""

#: discord.automod.AutoModRule:61 of
msgid "The actions to perform when the rule is triggered."
msgstr ""

#: discord.automod.AutoModRule:63 of
msgid "List[:class:`AutoModAction`]"
msgstr ""

#: discord.automod.AutoModRule:67 discord.automod.AutoModRule.edit:13 of
msgid "Whether this rule is enabled."
msgstr ""

#: discord.automod.AutoModRule:73 of
msgid "The IDs of the roles that are exempt from this rule."
msgstr ""

#: discord.automod.AutoModRule:79 of
msgid "The IDs of the channels that are exempt from this rule."
msgstr ""

#: discord.AutoModRule.guild:1 of
msgid "The guild this rule belongs to."
msgstr ""

#: discord.AutoModRule.creator:1 of
msgid "The member who created this rule."
msgstr ""

#: discord.AutoModRule.exempt_roles:1 of
msgid "The roles that are exempt from this rule."
msgstr ""

#: discord.AutoModRule.exempt_roles:4 of
msgid ""
"If a role is not found in the guild's cache, then it will be returned as "
"an :class:`Object`."
msgstr ""

#: discord.AutoModRule.exempt_channels:1 of
msgid ""
"List[Union[Union[:class:`TextChannel`, :class:`ForumChannel`, "
":class:`VoiceChannel`], :class:`Object`]]: The channels that are exempt "
"from this rule."
msgstr ""

#: discord.AutoModRule.exempt_channels:4 of
msgid ""
"If a channel is not found in the guild's cache, then it will be returned "
"as an :class:`Object`."
msgstr ""

#: discord.automod.AutoModRule.delete:3 of
msgid "Deletes this rule."
msgstr ""

#: discord.automod.AutoModRule.delete:5 of
msgid "The reason for deleting this rule. Shows up in the audit log."
msgstr ""

#: discord.automod.AutoModRule.edit:3 of
msgid "Edits this rule."
msgstr ""

#: discord.automod.AutoModRule.edit:5 of
msgid "The rule's new name."
msgstr ""

#: discord.automod.AutoModRule.edit:7 of
msgid "The new context in which the rule is checked."
msgstr ""

#: discord.automod.AutoModRule.edit:9 of
msgid "The new trigger metadata."
msgstr ""

#: discord.automod.AutoModRule.edit:11 of
msgid "The new actions to perform when the rule is triggered."
msgstr ""

#: discord.automod.AutoModRule.edit:15 of
msgid "The roles that will be exempt from this rule."
msgstr ""

#: discord.automod.AutoModRule.edit:17 of
msgid "The channels that will be exempt from this rule."
msgstr ""

#: discord.automod.AutoModRule.edit:19 of
msgid "The reason for editing this rule. Shows up in the audit log."
msgstr ""

#: discord.automod.AutoModRule.edit:25 of
msgid ""
"The newly updated rule, if applicable. This is only returned when fields "
"are updated."
msgstr ""

#: discord.automod.AutoModRule.edit:27 of
msgid "Optional[:class:`.AutoModRule`]"
msgstr ""

#: ../../api.rst:4652
msgid "AutoModActionExecutionEvent"
msgstr ""

#: discord.raw_models.AutoModActionExecutionEvent:1 of
msgid "Represents the payload for an :func:`on_auto_moderation_action_execution`"
msgstr ""

#: discord.raw_models.AutoModActionExecutionEvent:7 of
msgid "The action that was executed."
msgstr ""

#: discord.raw_models.AutoModActionExecutionEvent:9 of
msgid ":class:`AutoModAction`"
msgstr ""

#: discord.raw_models.AutoModActionExecutionEvent:13 of
msgid "The ID of the rule that the action belongs to."
msgstr ""

#: discord.raw_models.AutoModActionExecutionEvent:19 of
msgid "The ID of the guild that the action was executed in."
msgstr ""

#: discord.raw_models.AutoModActionExecutionEvent:25 of
msgid "The guild that the action was executed in, if cached."
msgstr ""

#: discord.raw_models.AutoModActionExecutionEvent:31 of
msgid "The ID of the user that triggered the action."
msgstr ""

#: discord.raw_models.AutoModActionExecutionEvent:37 of
msgid "The member that triggered the action, if cached."
msgstr ""

#: discord.raw_models.AutoModActionExecutionEvent:43 of
msgid "The ID of the channel in which the member's content was posted."
msgstr ""

#: discord.raw_models.AutoModActionExecutionEvent:49 of
msgid "The channel in which the member's content was posted, if cached."
msgstr ""

#: discord.raw_models.AutoModActionExecutionEvent:51 of
msgid ""
"Optional[Union[:class:`TextChannel`, :class:`Thread`, "
":class:`VoiceChannel`]]"
msgstr ""

#: discord.raw_models.AutoModActionExecutionEvent:55 of
msgid ""
"The ID of the message that triggered the action. This is only available "
"if the message was not blocked."
msgstr ""

#: discord.raw_models.AutoModActionExecutionEvent:62 of
msgid "The message that triggered the action, if cached."
msgstr ""

#: discord.raw_models.AutoModActionExecutionEvent:68 of
msgid ""
"The ID of the system auto moderation message that was posted as a result "
"of the action."
msgstr ""

#: discord.raw_models.AutoModActionExecutionEvent:75 of
msgid ""
"The system auto moderation message that was posted as a result of the "
"action, if cached."
msgstr ""

#: discord.raw_models.AutoModActionExecutionEvent:82 of
msgid "The content of the message that triggered the action."
msgstr ""

#: discord.raw_models.AutoModActionExecutionEvent:88 of
msgid "The word or phrase configured that was matched in the content."
msgstr ""

#: discord.raw_models.AutoModActionExecutionEvent:94 of
msgid "The substring in the content that was matched."
msgstr ""

#: ../../api.rst:4660
msgid "RawTypingEvent"
msgstr ""

#: discord.raw_models.RawTypingEvent:1 of
msgid "Represents the payload for a :func:`on_raw_typing` event."
msgstr ""

#: discord.raw_models.RawTypingEvent:7 of
msgid "The channel ID where the typing originated from."
msgstr ""

#: discord.raw_models.RawTypingEvent:13 of
msgid "The ID of the user that started typing."
msgstr ""

#: discord.raw_models.RawTypingEvent:25 of
msgid "The guild ID where the typing originated from, if applicable."
msgstr ""

#: discord.raw_models.RawTypingEvent:31 of
msgid ""
"The member who started typing. Only available if the member started "
"typing in a guild."
msgstr ""

#: ../../api.rst:4668
msgid "RawMessageDeleteEvent"
msgstr ""

#: discord.raw_models.RawMessageDeleteEvent:1 of
msgid "Represents the event payload for a :func:`on_raw_message_delete` event."
msgstr ""

#: discord.raw_models.RawMessageDeleteEvent:5 of
msgid "The channel ID where the deletion took place."
msgstr ""

#: discord.raw_models.RawMessageDeleteEvent:11 of
msgid "The guild ID where the deletion took place, if applicable."
msgstr ""

#: discord.raw_models.RawMessageDeleteEvent:17 of
msgid "The message ID that got deleted."
msgstr ""

#: discord.MessageReference.cached_message:1
#: discord.raw_models.RawMessageDeleteEvent:23 of
msgid "The cached message, if found in the internal message cache."
msgstr ""

#: ../../api.rst:4676
msgid "RawBulkMessageDeleteEvent"
msgstr ""

#: discord.raw_models.RawBulkMessageDeleteEvent:1 of
msgid ""
"Represents the event payload for a :func:`on_raw_bulk_message_delete` "
"event."
msgstr ""

#: discord.raw_models.RawBulkMessageDeleteEvent:5 of
msgid "A :class:`set` of the message IDs that were deleted."
msgstr ""

#: discord.raw_models.RawBulkMessageDeleteEvent:7 of
msgid "Set[:class:`int`]"
msgstr ""

#: discord.raw_models.RawBulkMessageDeleteEvent:11 of
msgid "The channel ID where the message got deleted."
msgstr ""

#: discord.raw_models.RawBulkMessageDeleteEvent:17 of
msgid "The guild ID where the message got deleted, if applicable."
msgstr ""

#: discord.raw_models.RawBulkMessageDeleteEvent:23 of
msgid "The cached messages, if found in the internal message cache."
msgstr ""

#: discord.raw_models.RawBulkMessageDeleteEvent:25 of
msgid "List[:class:`Message`]"
msgstr ""

#: ../../api.rst:4684
msgid "RawMessageUpdateEvent"
msgstr ""

#: discord.raw_models.RawMessageUpdateEvent:1 of
msgid "Represents the payload for a :func:`on_raw_message_edit` event."
msgstr ""

#: discord.raw_models.RawMessageUpdateEvent:5 of
msgid "The message ID that got updated."
msgstr ""

#: discord.raw_models.RawMessageUpdateEvent:11 of
msgid "The channel ID where the update took place."
msgstr ""

#: discord.raw_models.RawMessageUpdateEvent:19 of
msgid "The guild ID where the message got updated, if applicable."
msgstr ""

#: discord.raw_models.RawMessageUpdateEvent:27 of
msgid ""
"The raw data given by the `gateway "
"<https://discord.com/developers/docs/topics/gateway#message-update>`_"
msgstr ""

#: discord.raw_models.RawMessageUpdateEvent:33 of
msgid ""
"The cached message, if found in the internal message cache. Represents "
"the message before it is modified by the data in "
":attr:`RawMessageUpdateEvent.data`."
msgstr ""

#: ../../api.rst:4692
msgid "RawReactionActionEvent"
msgstr ""

#: discord.raw_models.RawReactionActionEvent:1 of
msgid ""
"Represents the payload for a :func:`on_raw_reaction_add` or "
":func:`on_raw_reaction_remove` event."
msgstr ""

#: discord.raw_models.RawReactionActionEvent:6 of
msgid "The message ID that got or lost a reaction."
msgstr ""

#: discord.raw_models.RawReactionActionEvent:12 of
msgid "The user ID who added the reaction or whose reaction was removed."
msgstr ""

#: discord.raw_models.RawReactionActionEvent:18 of
msgid "The channel ID where the reaction got added or removed."
msgstr ""

#: discord.raw_models.RawReactionActionEvent:24 of
msgid "The guild ID where the reaction got added or removed, if applicable."
msgstr ""

#: discord.raw_models.RawReactionActionEvent:30 of
msgid "The custom or unicode emoji being used."
msgstr ""

#: discord.raw_models.RawReactionActionEvent:36 of
msgid ""
"The member who added the reaction. Only available if `event_type` is "
"`REACTION_ADD` and the reaction is inside a guild."
msgstr ""

#: discord.raw_models.RawReactionActionEvent:45 of
msgid ""
"The event type that triggered this action. Can be ``REACTION_ADD`` for "
"reaction addition or ``REACTION_REMOVE`` for reaction removal."
msgstr ""

#: ../../api.rst:4700
msgid "RawReactionClearEvent"
msgstr ""

#: discord.raw_models.RawReactionClearEvent:1 of
msgid "Represents the payload for a :func:`on_raw_reaction_clear` event."
msgstr ""

#: discord.raw_models.RawReactionClearEmojiEvent:7
#: discord.raw_models.RawReactionClearEvent:5 of
msgid "The message ID that got its reactions cleared."
msgstr ""

#: discord.raw_models.RawReactionClearEmojiEvent:13
#: discord.raw_models.RawReactionClearEvent:11 of
msgid "The channel ID where the reactions got cleared."
msgstr ""

#: discord.raw_models.RawReactionClearEmojiEvent:19
#: discord.raw_models.RawReactionClearEvent:17 of
msgid "The guild ID where the reactions got cleared."
msgstr ""

#: ../../api.rst:4708
msgid "RawReactionClearEmojiEvent"
msgstr ""

#: discord.raw_models.RawReactionClearEmojiEvent:1 of
msgid "Represents the payload for a :func:`on_raw_reaction_clear_emoji` event."
msgstr ""

#: discord.raw_models.RawReactionClearEmojiEvent:25 of
msgid "The custom or unicode emoji being removed."
msgstr ""

#: ../../api.rst:4716
msgid "RawIntegrationDeleteEvent"
msgstr ""

#: discord.raw_models.RawIntegrationDeleteEvent:1 of
msgid "Represents the payload for a :func:`on_raw_integration_delete` event."
msgstr ""

#: discord.raw_models.RawIntegrationDeleteEvent:7 of
msgid "The ID of the integration that got deleted."
msgstr ""

#: discord.raw_models.RawIntegrationDeleteEvent:13 of
msgid "The ID of the bot/OAuth2 application for this deleted integration."
msgstr ""

#: discord.raw_models.RawIntegrationDeleteEvent:19 of
msgid "The guild ID where the integration got deleted."
msgstr ""

#: ../../api.rst:4724
msgid "RawThreadDeleteEvent"
msgstr ""

#: discord.raw_models.RawThreadDeleteEvent:1 of
msgid "Represents the payload for :func:`on_raw_thread_delete` event."
msgstr ""

#: discord.raw_models.RawThreadDeleteEvent:7 of
msgid "The ID of the thread that was deleted."
msgstr ""

#: discord.raw_models.RawThreadDeleteEvent:13 of
msgid "The channel type of the deleted thread."
msgstr ""

#: discord.raw_models.RawThreadDeleteEvent:15 of
msgid ":class:`discord.ChannelType`"
msgstr ""

#: discord.raw_models.RawThreadDeleteEvent:19 of
msgid "The ID of the guild the deleted thread belonged to."
msgstr ""

#: discord.raw_models.RawThreadDeleteEvent:25 of
msgid "The ID of the channel the thread belonged to."
msgstr ""

#: discord.raw_models.RawThreadDeleteEvent:31 of
msgid ""
"The thread that was deleted. This may be ``None`` if deleted thread is "
"not found in internal cache."
msgstr ""

#: discord.raw_models.RawThreadDeleteEvent:33 of
msgid "Optional[:class:`discord.Thread`]"
msgstr ""

#: ../../api.rst:4732
msgid "RawScheduledEventSubscription"
msgstr ""

#: discord.raw_models.RawScheduledEventSubscription:1 of
msgid ""
"Represents the payload for a :func:`raw_scheduled_event_user_add` or "
":func:`raw_scheduled_event_user_remove` event."
msgstr ""

#: discord.raw_models.RawScheduledEventSubscription:8 of
msgid "The event ID where the typing originated from."
msgstr ""

#: discord.raw_models.RawScheduledEventSubscription:14 of
msgid "The ID of the user that subscribed/unsubscribed."
msgstr ""

#: discord.raw_models.RawScheduledEventSubscription:20 of
msgid "The guild where the subscription/unsubscription happened."
msgstr ""

#: discord.raw_models.RawScheduledEventSubscription:26 of
msgid ""
"Can be either ``USER_ADD`` or ``USER_REMOVE`` depending on the event "
"called."
msgstr ""

#: ../../api.rst:4740
msgid "PartialWebhookGuild"
msgstr ""

#: discord.webhook.async_.PartialWebhookGuild:1 of
msgid "Represents a partial guild for webhooks."
msgstr ""

#: discord.webhook.async_.PartialWebhookChannel:3
#: discord.webhook.async_.PartialWebhookGuild:3 of
msgid "These are typically given for channel follower webhooks."
msgstr ""

#: ../../api.rst:4748
msgid "PartialWebhookChannel"
msgstr ""

#: discord.webhook.async_.PartialWebhookChannel:1 of
msgid "Represents a partial channel for webhooks."
msgstr ""

#: ../../api.rst:4758
msgid "Data Classes"
msgstr ""

#: ../../api.rst:4760
msgid "Some classes are just there to be data containers, this lists them."
msgstr ""

#: ../../api.rst:4762
msgid ""
"Unlike :ref:`models <discord_api_models>` you are allowed to create most "
"of these yourself, even if they can also be used to hold attributes."
msgstr ""

#: ../../api.rst:4768
msgid ""
"The only exception to this rule is :class:`Object`, which is made with "
"dynamic attributes in mind."
msgstr ""

#: ../../api.rst:4773
msgid "Object"
msgstr ""

#: discord.object.Object:1 of
msgid "Represents a generic Discord object."
msgstr ""

#: discord.object.Object:3 of
msgid ""
"The purpose of this class is to allow you to create 'miniature' versions "
"of data classes if you want to pass in just an ID. Most functions that "
"take in a specific data class with an ID can also take in this class as a"
" substitute instead. Note that even though this is the case, not all "
"objects (if any) actually inherit from this class."
msgstr ""

#: discord.object.Object:9 of
msgid ""
"There are also some cases where some WebSocket events are received in "
":issue:`strange order <21>` and when such events happened you would "
"receive this class rather than the actual data class. These cases are "
"extremely rare."
msgstr ""

#: discord.object.Object:18 of
msgid "Checks if two objects are equal."
msgstr ""

#: discord.object.Object:22 of
msgid "Checks if two objects are not equal."
msgstr ""

#: discord.object.Object:26 of
msgid "Returns the object's hash."
msgstr ""

#: discord.object.Object:30 of
msgid "The ID of the object."
msgstr ""

#: discord.Object.created_at:1 of
msgid "Returns the snowflake's creation time in UTC."
msgstr ""

#: discord.Object.worker_id:1 of
msgid "Returns the worker id that made the snowflake."
msgstr ""

#: discord.Object.process_id:1 of
msgid "Returns the process id that made the snowflake."
msgstr ""

#: discord.Object.increment_id:1 of
msgid "Returns the increment id that made the snowflake."
msgstr ""

#: ../../api.rst:4781
msgid "Embed"
msgstr ""

#: discord.embeds.Embed:1 of
msgid "Represents a Discord embed."
msgstr ""

#: discord.embeds.Embed:7 of
msgid ""
"Returns the total size of the embed. Useful for checking if it's within "
"the 6000 character limit."
msgstr ""

#: discord.embeds.Embed:12 of
msgid "Returns whether the embed has any data set."
msgstr ""

#: discord.embeds.Embed:16 of
msgid ""
"Certain properties return an ``EmbedProxy``, a type that acts similar to "
"a regular :class:`dict` except using dotted access, e.g. "
"``embed.author.icon_url``. If the attribute is invalid or empty, then a "
"special sentinel value is returned, :attr:`Embed.Empty`."
msgstr ""

#: discord.embeds.Embed:22 of
msgid ""
"For ease of use, all parameters that expect a :class:`str` are implicitly"
" cast to :class:`str` for you."
msgstr ""

#: discord.embeds.Embed:27 of
msgid ""
"The title of the embed. This can be set during initialisation. Must be "
"256 characters or fewer."
msgstr ""

#: discord.embeds.Embed:35 of
msgid ""
"The type of embed. Usually \"rich\". This can be set during "
"initialisation. Possible strings for embed types can be found on "
"discord's `api docs "
"<https://discord.com/developers/docs/resources/channel#embed-object-"
"embed-types>`_"
msgstr ""

#: discord.embeds.Embed:44 of
msgid ""
"The description of the embed. This can be set during initialisation. Must"
" be 4096 characters or fewer."
msgstr ""

#: discord.embeds.Embed:52 of
msgid "The URL of the embed. This can be set during initialisation."
msgstr ""

#: discord.embeds.Embed:59 of
msgid ""
"The timestamp of the embed content. This is an aware datetime. If a naive"
" datetime is passed, it is converted to an aware datetime with the local "
"timezone."
msgstr ""

#: discord.embeds.Embed:67 of
msgid ""
"The colour code of the embed. Aliased to ``color`` as well. This can be "
"set during initialisation."
msgstr ""

#: discord.embeds.Embed:70 of
msgid "Union[:class:`Colour`, :class:`int`]"
msgstr ""

#: discord.embeds.Embed:74 of
msgid ""
"A special sentinel value used by ``EmbedProxy`` and this class to denote "
"that the value or attribute is empty."
msgstr ""

#: discord.embeds.Embed:77 of
msgid "Final"
msgstr ""

#: discord.embeds.Embed.from_dict:1 of
msgid ""
"Converts a :class:`dict` to a :class:`Embed` provided it is in the format"
" that Discord expects it to be in."
msgstr ""

#: discord.embeds.Embed.from_dict:4 discord.embeds.EmbedField.from_dict:4 of
msgid ""
"You can find out about this format in the `official Discord "
"documentation`__."
msgstr ""

#: discord.embeds.Embed.from_dict:10 of
msgid "The dictionary to convert into an embed."
msgstr ""

#: discord.embeds.Embed.from_dict:13 of
msgid "The converted embed object."
msgstr ""

#: discord.embeds.Embed.copy:4 discord.embeds.Embed.from_dict:14 of
msgid ":class:`Embed`"
msgstr ""

#: discord.embeds.Embed.copy:1 of
msgid "Creates a shallow copy of the :class:`Embed` object."
msgstr ""

#: discord.embeds.Embed.copy:3 of
msgid "The copied embed object."
msgstr ""

#: discord.Embed.footer:1 of
msgid "Returns an ``EmbedProxy`` denoting the footer contents."
msgstr ""

#: discord.Embed.footer:3 of
msgid "See :meth:`set_footer` for possible values you can access."
msgstr ""

#: discord.Embed.author:5 discord.Embed.footer:5 discord.Embed.image:10
#: discord.Embed.provider:5 discord.Embed.thumbnail:10 discord.Embed.video:9 of
msgid "If the attribute has no value then :attr:`Empty` is returned."
msgstr ""

#: discord.embeds.Embed.set_footer:1 of
msgid "Sets the footer for the embed content."
msgstr ""

#: discord.embeds.Embed.remove_author:3 discord.embeds.Embed.remove_footer:3
#: discord.embeds.Embed.remove_image:3 discord.embeds.Embed.remove_thumbnail:3
#: discord.embeds.Embed.set_author:3 discord.embeds.Embed.set_field_at:5
#: discord.embeds.Embed.set_footer:3 discord.embeds.Embed.set_image:3
#: discord.embeds.Embed.set_thumbnail:3 of
msgid ""
"This function returns the class instance to allow for fluent-style "
"chaining."
msgstr ""

#: discord.embeds.Embed.set_footer:6 of
msgid "The footer text. Must be 2048 characters or fewer."
msgstr ""

#: discord.embeds.Embed.set_footer:9 of
msgid "The URL of the footer icon. Only HTTP(S) is supported."
msgstr ""

#: discord.embeds.Embed.remove_footer:1 of
msgid "Clears embed's footer information."
msgstr ""

#: discord.Embed.image:1 of
msgid "Returns an ``EmbedProxy`` denoting the image contents."
msgstr ""

#: discord.Embed.image:3 discord.Embed.thumbnail:3 of
msgid "Possible attributes you can access are:"
msgstr ""

#: discord.Embed.image:5 discord.Embed.thumbnail:5 of
msgid "``url``"
msgstr ""

#: discord.Embed.image:6 discord.Embed.thumbnail:6 of
msgid "``proxy_url``"
msgstr ""

#: discord.Embed.image:7 discord.Embed.thumbnail:7 of
msgid "``width``"
msgstr ""

#: discord.Embed.image:8 discord.Embed.thumbnail:8 of
msgid "``height``"
msgstr ""

#: discord.embeds.Embed.set_image:1 of
msgid "Sets the image for the embed content."
msgstr ""

#: discord.embeds.Embed.set_image:6 of
msgid "Passing :attr:`Empty` removes the image."
msgstr ""

#: discord.embeds.Embed.set_image:9 of
msgid "The source URL for the image. Only HTTP(S) is supported."
msgstr ""

#: discord.embeds.Embed.remove_image:1 of
msgid "Removes the embed's image."
msgstr ""

#: discord.Embed.thumbnail:1 of
msgid "Returns an ``EmbedProxy`` denoting the thumbnail contents."
msgstr ""

#: discord.embeds.Embed.set_thumbnail:1 of
msgid "Sets the thumbnail for the embed content."
msgstr ""

#: discord.embeds.Embed.set_thumbnail:6 of
msgid "Passing :attr:`Empty` removes the thumbnail."
msgstr ""

#: discord.embeds.Embed.set_thumbnail:9 of
msgid "The source URL for the thumbnail. Only HTTP(S) is supported."
msgstr ""

#: discord.embeds.Embed.remove_thumbnail:1 of
msgid "Removes the embed's thumbnail."
msgstr ""

#: discord.Embed.video:1 of
msgid "Returns an ``EmbedProxy`` denoting the video contents."
msgstr ""

#: discord.Embed.video:3 of
msgid "Possible attributes include:"
msgstr ""

#: discord.Embed.video:5 of
msgid "``url`` for the video URL."
msgstr ""

#: discord.Embed.video:6 of
msgid "``height`` for the video height."
msgstr ""

#: discord.Embed.video:7 of
msgid "``width`` for the video width."
msgstr ""

#: discord.Embed.provider:1 of
msgid "Returns an ``EmbedProxy`` denoting the provider contents."
msgstr ""

#: discord.Embed.provider:3 of
msgid "The only attributes that might be accessed are ``name`` and ``url``."
msgstr ""

#: discord.Embed.author:1 of
msgid "Returns an ``EmbedProxy`` denoting the author contents."
msgstr ""

#: discord.Embed.author:3 of
msgid "See :meth:`set_author` for possible values you can access."
msgstr ""

#: discord.embeds.Embed.set_author:1 of
msgid "Sets the author for the embed content."
msgstr ""

#: discord.embeds.Embed.set_author:6 of
msgid "The name of the author. Must be 256 characters or fewer."
msgstr ""

#: discord.embeds.Embed.set_author:9 of
msgid "The URL for the author."
msgstr ""

#: discord.embeds.Embed.set_author:11 of
msgid "The URL of the author icon. Only HTTP(S) is supported."
msgstr ""

#: discord.embeds.Embed.remove_author:1 of
msgid "Clears embed's author information."
msgstr ""

#: discord.Embed.fields:1 of
msgid ""
"Returns a :class:`list` of :class:`EmbedField` objects denoting the field"
" contents."
msgstr ""

#: discord.Embed.fields:3 of
msgid "See :meth:`add_field` for possible values you can access."
msgstr ""

#: discord.Embed.fields:5 of
msgid "If the attribute has no value then ``None`` is returned."
msgstr ""

#: discord.embeds.Embed.append_field:1 of
msgid "Appends an :class:`EmbedField` object to the embed."
msgstr ""

#: discord.embeds.Embed.append_field:5 of
msgid "The field to add."
msgstr ""

#: discord.embeds.Embed.add_field:1 of
msgid "Adds a field to the embed object."
msgstr ""

#: discord.embeds.Embed.add_field:3 discord.embeds.Embed.insert_field_at:3 of
msgid ""
"This function returns the class instance to allow for fluent-style "
"chaining. There must be 25 fields or fewer."
msgstr ""

#: discord.embeds.Embed.add_field:6 discord.embeds.Embed.insert_field_at:10
#: discord.embeds.Embed.set_field_at:10 of
msgid "The name of the field. Must be 256 characters or fewer."
msgstr ""

#: discord.embeds.Embed.add_field:9 discord.embeds.Embed.insert_field_at:13
#: discord.embeds.Embed.set_field_at:13 of
msgid "The value of the field. Must be 1024 characters or fewer."
msgstr ""

#: discord.embeds.Embed.add_field:12 discord.embeds.Embed.insert_field_at:16
#: discord.embeds.Embed.set_field_at:16 discord.embeds.EmbedField:19 of
msgid "Whether the field should be displayed inline."
msgstr ""

#: discord.embeds.Embed.insert_field_at:1 of
msgid "Inserts a field before a specified index to the embed."
msgstr ""

#: discord.embeds.Embed.insert_field_at:8 of
msgid "The index of where to insert the field."
msgstr ""

#: discord.embeds.Embed.clear_fields:1 of
msgid "Removes all fields from this embed."
msgstr ""

#: discord.embeds.Embed.remove_field:1 of
msgid "Removes a field at a specified index."
msgstr ""

#: discord.embeds.Embed.remove_field:3 of
msgid ""
"If the index is invalid or out of bounds then the error is silently "
"swallowed."
msgstr ""

#: discord.embeds.Embed.remove_field:8 of
msgid ""
"When deleting a field by index, the index of the other fields shift to "
"fill the gap just like a regular list."
msgstr ""

#: discord.embeds.Embed.remove_field:11 of
msgid "The index of the field to remove."
msgstr ""

#: discord.embeds.Embed.set_field_at:1 of
msgid "Modifies a field to the embed object."
msgstr ""

#: discord.embeds.Embed.set_field_at:3 of
msgid ""
"The index must point to a valid pre-existing field. There must be 25 "
"fields or fewer."
msgstr ""

#: discord.embeds.Embed.set_field_at:8 of
msgid "The index of the field to modify."
msgstr ""

#: discord.embeds.Embed.set_field_at:19 of
msgid "An invalid index was provided."
msgstr ""

#: discord.embeds.Embed.to_dict:1 of
msgid "Converts this embed object into a dict."
msgstr ""

#: discord.embeds.Embed.to_dict:3 of
msgid "A dictionary of :class:`str` embed keys bound to the respective value."
msgstr ""

#: discord.embeds.Embed.to_dict:4 of
msgid "Dict[:class:`str`, Union[:class:`str`, :class:`int`, :class:`bool`]]"
msgstr ""

#: ../../api.rst:4789
msgid "EmbedField"
msgstr ""

#: discord.embeds.EmbedField:1 of
msgid "Represents a field on the :class:`Embed` object."
msgstr ""

#: discord.embeds.EmbedField:7 of
msgid "The name of the field."
msgstr ""

#: discord.embeds.EmbedField:13 of
msgid "The value of the field."
msgstr ""

#: discord.embeds.EmbedField.from_dict:1 of
msgid ""
"Converts a :class:`dict` to a :class:`EmbedField` provided it is in the "
"format that Discord expects it to be in."
msgstr ""

#: discord.embeds.EmbedField.from_dict:10 of
msgid "The dictionary to convert into an EmbedField object."
msgstr ""

#: discord.embeds.EmbedField.to_dict:1 of
msgid "Converts this EmbedField object into a dict."
msgstr ""

#: discord.embeds.EmbedField.to_dict:3 of
msgid ""
"A dictionary of :class:`str` embed field keys bound to the respective "
"value."
msgstr ""

#: discord.embeds.EmbedField.to_dict:4 of
msgid "Dict[:class:`str`, Union[:class:`str`, :class:`bool`]]"
msgstr ""

#: ../../api.rst:4797
msgid "AllowedMentions"
msgstr ""

#: discord.mentions.AllowedMentions:1 of
msgid "A class that represents what mentions are allowed in a message."
msgstr ""

#: discord.mentions.AllowedMentions:3 of
msgid ""
"This class can be set during :class:`Client` initialisation to apply to "
"every message sent. It can also be applied on a per-message basis via "
":meth:`abc.Messageable.send` for more fine-grained control."
msgstr ""

#: discord.mentions.AllowedMentions:9 of
msgid "Whether to allow everyone and here mentions. Defaults to ``True``."
msgstr ""

#: discord.mentions.AllowedMentions:15 of
msgid ""
"Controls the users being mentioned. If ``True`` (the default) then users "
"are mentioned based on the message content. If ``False`` then users are "
"not mentioned at all. If a list of :class:`abc.Snowflake` is given then "
"only the users provided will be mentioned, provided those users are in "
"the message content."
msgstr ""

#: discord.mentions.AllowedMentions:21 discord.mentions.AllowedMentions:31 of
msgid "Union[:class:`bool`, List[:class:`abc.Snowflake`]]"
msgstr ""

#: discord.mentions.AllowedMentions:25 of
msgid ""
"Controls the roles being mentioned. If ``True`` (the default) then roles "
"are mentioned based on the message content. If ``False`` then roles are "
"not mentioned at all. If a list of :class:`abc.Snowflake` is given then "
"only the roles provided will be mentioned, provided those roles are in "
"the message content."
msgstr ""

#: discord.mentions.AllowedMentions:35 of
msgid ""
"Whether to mention the author of the message being replied to. Defaults "
"to ``True``."
msgstr ""

#: discord.mentions.AllowedMentions.all:1 of
msgid ""
"A factory method that returns a :class:`AllowedMentions` with all fields "
"explicitly set to ``True``"
msgstr ""

#: discord.mentions.AllowedMentions.none:1 of
msgid ""
"A factory method that returns a :class:`AllowedMentions` with all fields "
"set to ``False``"
msgstr ""

#: ../../api.rst:4805
msgid "MessageReference"
msgstr ""

#: discord.message.MessageReference:1 of
msgid "Represents a reference to a :class:`~discord.Message`."
msgstr ""

#: discord.message.MessageReference:5 of
msgid "This class can now be constructed by users."
msgstr ""

#: discord.message.MessageReference:10 of
msgid "The id of the message referenced."
msgstr ""

#: discord.message.MessageReference:16 of
msgid "The channel id of the message referenced."
msgstr ""

#: discord.message.MessageReference:22 of
msgid "The guild id of the message referenced."
msgstr ""

#: discord.message.MessageReference:28
#: discord.message.MessageReference.from_message:7 of
msgid ""
"Whether replying to the referenced message should raise "
":class:`HTTPException` if the message no longer exists or Discord could "
"not fetch the message."
msgstr ""

#: discord.message.MessageReference:37 of
msgid ""
"The message that this reference resolved to. If this is ``None`` then the"
" original message was not fetched either due to the Discord API not "
"attempting to resolve it or it not being available at the time of "
"creation. If the message was resolved at a prior point but has since been"
" deleted then this will be of type :class:`DeletedReferencedMessage`."
msgstr ""

#: discord.message.MessageReference:43 of
msgid ""
"Currently, this is mainly the replied to message when a user replies to a"
" message."
msgstr ""

#: discord.message.MessageReference:47 of
msgid "Optional[Union[:class:`Message`, :class:`DeletedReferencedMessage`]]"
msgstr ""

#: discord.message.MessageReference.from_message:1 of
msgid ""
"Creates a :class:`MessageReference` from an existing "
":class:`~discord.Message`."
msgstr ""

#: discord.message.MessageReference.from_message:5 of
msgid "The message to be converted into a reference."
msgstr ""

#: discord.message.MessageReference.from_message:7 of
msgid ""
"Whether replying to the referenced message should raise "
":class:`HTTPException` if the message no longer exists or Discord could "
"not fetch the message.  .. versionadded:: 1.7"
msgstr ""

#: discord.message.MessageReference.from_message:13 of
msgid "A reference to the message."
msgstr ""

#: discord.message.MessageReference.from_message:14 of
msgid ":class:`MessageReference`"
msgstr ""

#: discord.MessageReference.cached_message:3 of
msgid "Optional[:class:`~discord.Message`]"
msgstr ""

#: discord.MessageReference.jump_url:1 of
msgid "Returns a URL that allows the client to jump to the referenced message."
msgstr ""

#: ../../api.rst:4813
msgid "PartialMessage"
msgstr ""

#: discord.message.PartialMessage:1 of
msgid ""
"Represents a partial message to aid with working messages when only a "
"message and channel ID are present."
msgstr ""

#: discord.message.PartialMessage:4 of
msgid ""
"There are two ways to construct this class. The first one is through the "
"constructor itself, and the second is via the following:"
msgstr ""

#: discord.message.PartialMessage:7 of
msgid ":meth:`TextChannel.get_partial_message`"
msgstr ""

#: discord.message.PartialMessage:8 of
msgid ":meth:`Thread.get_partial_message`"
msgstr ""

#: discord.message.PartialMessage:9 of
msgid ":meth:`DMChannel.get_partial_message`"
msgstr ""

#: discord.message.PartialMessage:19 of
msgid "Checks if two partial messages are equal."
msgstr ""

#: discord.message.PartialMessage:23 of
msgid "Checks if two partial messages are not equal."
msgstr ""

#: discord.message.PartialMessage:27 of
msgid "Returns the partial message's hash."
msgstr ""

#: discord.message.PartialMessage:31 of
msgid "The channel associated with this partial message."
msgstr ""

#: discord.message.PartialMessage:33 of
msgid "Union[:class:`TextChannel`, :class:`Thread`, :class:`DMChannel`]"
msgstr ""

#: discord.PartialMessage.created_at:1 of
msgid "The partial message's creation time in UTC."
msgstr ""

#: ../../docstring discord.PartialMessage.guild:1 of
msgid "The guild that the partial message belongs to, if applicable."
msgstr ""

#: discord.message.PartialMessage.fetch:3 of
msgid "Fetches the partial message to a full :class:`Message`."
msgstr ""

#: discord.message.PartialMessage.edit:40
#: discord.message.PartialMessage.fetch:5 of
msgid "The message was not found."
msgstr ""

#: discord.message.PartialMessage.fetch:9 of
msgid "The full message."
msgstr ""

#: discord.message.PartialMessage.edit:5 of
msgid ""
":class:`discord.Message` is returned instead of ``None`` if an edit took "
"place."
msgstr ""

#: discord.message.PartialMessage.edit:44 of
msgid "The message that was edited."
msgstr ""

#: ../../api.rst:4821
msgid "SelectOption"
msgstr ""

#: discord.components.SelectOption:1 of
msgid "Represents a select menu's option."
msgstr ""

#: discord.components.SelectOption:3 of
msgid "These can be created by users."
msgstr ""

#: discord.components.SelectOption:9 discord.ui.select.Select.add_option:6 of
msgid ""
"The label of the option. This is displayed to users. Can only be up to "
"100 characters."
msgstr ""

#: discord.components.SelectOption:16 of
msgid ""
"The value of the option. This is not displayed to users. If not provided "
"when constructed then it defaults to the label. Can only be up to 100 "
"characters."
msgstr ""

#: discord.components.SelectOption:24 discord.ui.select.Select.add_option:12 of
msgid ""
"An additional description of the option, if any. Can only be up to 100 "
"characters."
msgstr ""

#: discord.components.SelectOption:31 discord.ui.select.Select.add_option:18 of
msgid "Whether this option is selected by default."
msgstr ""

#: discord.SelectOption.emoji:1 of
msgid "The emoji of the option, if available."
msgstr ""

#: discord.SelectOption.emoji:3 of
msgid "Optional[Union[:class:`str`, :class:`Emoji`, :class:`PartialEmoji`]]"
msgstr ""

#: ../../api.rst:4829
msgid "Intents"
msgstr ""

#: discord.flags.Intents:1 of
msgid "Wraps up a Discord gateway intent flag."
msgstr ""

#: discord.flags.Intents:3 of
msgid ""
"Similar to :class:`Permissions`\\, the properties provided are two way. "
"You can set and retrieve individual bits using the properties as if they "
"were regular bools."
msgstr ""

#: discord.flags.Intents:7 discord.flags.MemberCacheFlags:12
#: discord.flags.SystemChannelFlags:7 of
msgid ""
"To construct an object you can pass keyword arguments denoting the flags "
"to enable or disable."
msgstr ""

#: discord.flags.Intents:10 of
msgid ""
"This is used to disable certain gateway features that are unnecessary to "
"run your bot. To make use of this, it is passed to the ``intents`` "
"keyword argument of :class:`Client`."
msgstr ""

#: discord.flags.Intents:20 discord.flags.MemberCacheFlags:23
#: discord.flags.MessageFlags:9 discord.flags.SystemChannelFlags:14 of
msgid "Checks if two flags are equal."
msgstr ""

#: discord.flags.Intents:23 discord.flags.MemberCacheFlags:26
#: discord.flags.MessageFlags:12 discord.flags.SystemChannelFlags:17 of
msgid "Checks if two flags are not equal."
msgstr ""

#: discord.flags.ApplicationFlags:13 discord.flags.ChannelFlags:13
#: discord.flags.Intents:26 discord.flags.MemberCacheFlags:29
#: discord.flags.MessageFlags:15 discord.flags.PublicUserFlags:13
#: discord.flags.SystemChannelFlags:20 of
msgid "Adds two flags together. Equivalent to ``x | y``."
msgstr ""

#: discord.flags.ApplicationFlags:16 discord.flags.ChannelFlags:16
#: discord.flags.Intents:29 discord.flags.MemberCacheFlags:32
#: discord.flags.MessageFlags:18 discord.flags.PublicUserFlags:16
#: discord.flags.SystemChannelFlags:23 of
msgid "Subtracts two flags from each other."
msgstr ""

#: discord.flags.ApplicationFlags:19 discord.flags.ChannelFlags:19
#: discord.flags.Intents:32 discord.flags.MemberCacheFlags:35
#: discord.flags.MessageFlags:21 discord.flags.PublicUserFlags:19
#: discord.flags.SystemChannelFlags:26 of
msgid "Returns the union of two flags. Equivalent to ``x + y``."
msgstr ""

#: discord.flags.ApplicationFlags:22 discord.flags.ChannelFlags:22
#: discord.flags.Intents:35 discord.flags.MemberCacheFlags:38
#: discord.flags.MessageFlags:24 discord.flags.PublicUserFlags:22
#: discord.flags.SystemChannelFlags:29 of
msgid "Returns the intersection of two flags."
msgstr ""

#: discord.flags.ApplicationFlags:25 discord.flags.ChannelFlags:25
#: discord.flags.Intents:38 discord.flags.MemberCacheFlags:41
#: discord.flags.MessageFlags:27 discord.flags.PublicUserFlags:25
#: discord.flags.SystemChannelFlags:32 of
msgid "Returns the inverse of a flag."
msgstr ""

#: discord.flags.ApplicationFlags:28 discord.flags.ChannelFlags:28
#: discord.flags.Intents:41 discord.flags.MemberCacheFlags:44
#: discord.flags.MessageFlags:30 discord.flags.PublicUserFlags:28
#: discord.flags.SystemChannelFlags:35 of
msgid "Return the flag's hash."
msgstr ""

#: discord.flags.Intents:44 discord.flags.MemberCacheFlags:47
#: discord.flags.MessageFlags:33 discord.flags.SystemChannelFlags:38 of
msgid ""
"Returns an iterator of ``(name, value)`` pairs. This allows it to be, for"
" example, constructed as a dict or a list of pairs."
msgstr ""

#: discord.flags.ApplicationFlags:39 discord.flags.ChannelFlags:39
#: discord.flags.Intents:49 discord.flags.MemberCacheFlags:52 of
msgid ""
"The raw value. You should query flags via the properties rather than "
"using this raw value."
msgstr ""

#: discord.flags.Intents.all:1 of
msgid "A factory method that creates a :class:`Intents` with everything enabled."
msgstr ""

#: discord.flags.Intents.none:1 of
msgid "A factory method that creates a :class:`Intents` with everything disabled."
msgstr ""

#: discord.flags.Intents.default:1 of
msgid ""
"A factory method that creates a :class:`Intents` with everything enabled "
"except :attr:`presences`, :attr:`members`, and :attr:`message_content`."
msgstr ""

#: ../../docstring discord.Intents.guilds:1 of
msgid "Whether guild related events are enabled."
msgstr ""

#: ../../docstring discord.Intents.auto_moderation_configuration:3
#: discord.Intents.auto_moderation_execution:3 discord.Intents.bans:3
#: discord.Intents.dm_messages:5 discord.Intents.dm_reactions:5
#: discord.Intents.dm_typing:5 discord.Intents.emojis_and_stickers:5
#: discord.Intents.guild_messages:5 discord.Intents.guild_reactions:5
#: discord.Intents.guild_typing:5 discord.Intents.guilds:3
#: discord.Intents.integrations:3 discord.Intents.invites:3
#: discord.Intents.members:3 discord.Intents.messages:5
#: discord.Intents.presences:3 discord.Intents.reactions:5
#: discord.Intents.scheduled_events:3 discord.Intents.typing:5
#: discord.Intents.voice_states:3 discord.Intents.webhooks:3 of
msgid "This corresponds to the following events:"
msgstr ""

#: ../../docstring discord.Intents.guilds:5 of
msgid ":func:`on_guild_join`"
msgstr ""

#: ../../docstring discord.Intents.guilds:6 of
msgid ":func:`on_guild_remove`"
msgstr ""

#: ../../docstring discord.Intents.guilds:7 of
msgid ":func:`on_guild_available`"
msgstr ""

#: ../../docstring discord.Intents.guilds:8 of
msgid ":func:`on_guild_unavailable`"
msgstr ""

#: ../../docstring discord.Intents.guilds:9 of
msgid ":func:`on_guild_channel_update`"
msgstr ""

#: ../../docstring discord.Intents.guilds:10 of
msgid ":func:`on_guild_channel_create`"
msgstr ""

#: ../../docstring discord.Intents.guilds:11 of
msgid ":func:`on_guild_channel_delete`"
msgstr ""

#: ../../docstring discord.Intents.guilds:12 of
msgid ":func:`on_guild_channel_pins_update`"
msgstr ""

#: ../../docstring discord.Intents.dm_messages:13
#: discord.Intents.dm_reactions:14 discord.Intents.emojis_and_stickers:10
#: discord.Intents.guild_messages:13 discord.Intents.guild_reactions:14
#: discord.Intents.guilds:14 discord.Intents.members:10
#: discord.Intents.messages:13 discord.Intents.presences:7
#: discord.Intents.reactions:14 discord.Intents.scheduled_events:13
#: discord.Intents.voice_states:7 of
msgid ""
"This also corresponds to the following attributes and classes in terms of"
" cache:"
msgstr ""

#: ../../docstring discord.Intents.guilds:16 of
msgid ":attr:`Client.guilds`"
msgstr ""

#: ../../docstring discord.Intents.guilds:17 of
msgid ":class:`Guild` and all its attributes."
msgstr ""

#: ../../docstring discord.Intents.guilds:18 of
msgid ":meth:`Client.get_channel`"
msgstr ""

#: ../../docstring discord.Intents.guilds:19 of
msgid ":meth:`Client.get_all_channels`"
msgstr ""

#: ../../docstring discord.Intents.guilds:21 of
msgid ""
"It is highly advisable to leave this intent enabled for your bot to "
"function."
msgstr ""

#: ../../docstring discord.Intents.members:1 of
msgid "Whether guild member related events are enabled."
msgstr ""

#: ../../docstring discord.Intents.members:5 of
msgid ":func:`on_member_join`"
msgstr ""

#: ../../docstring discord.Intents.members:6 of
msgid ":func:`on_member_remove`"
msgstr ""

#: ../../docstring discord.Intents.members:7 of
msgid ":func:`on_member_update`"
msgstr ""

#: ../../docstring discord.Intents.members:8 of
msgid ":func:`on_user_update`"
msgstr ""

#: ../../docstring discord.Intents.members:12 of
msgid ":meth:`Client.get_all_members`"
msgstr ""

#: ../../docstring discord.Intents.members:13 of
msgid ":meth:`Client.get_user`"
msgstr ""

#: ../../docstring discord.Intents.members:14 of
msgid ":meth:`Guild.chunk`"
msgstr ""

#: ../../docstring discord.Intents.members:15 of
msgid ":meth:`Guild.fetch_members`"
msgstr ""

#: ../../docstring discord.Intents.members:16 of
msgid ":meth:`Guild.get_member`"
msgstr ""

#: ../../docstring discord.Intents.members:17 of
msgid ":attr:`Guild.members`"
msgstr ""

#: ../../docstring discord.Intents.members:18 of
msgid ":attr:`Member.roles`"
msgstr ""

#: ../../docstring discord.Intents.members:19 of
msgid ":attr:`Member.nick`"
msgstr ""

#: ../../docstring discord.Intents.members:20 of
msgid ":attr:`Member.premium_since`"
msgstr ""

#: ../../docstring discord.Intents.members:21 of
msgid ":attr:`User.name`"
msgstr ""

#: ../../docstring discord.Intents.members:22 of
msgid ":attr:`User.avatar`"
msgstr ""

#: ../../docstring discord.Intents.members:23 of
msgid ":attr:`User.discriminator`"
msgstr ""

#: ../../docstring discord.Intents.members:25 of
msgid ""
"For more information go to the :ref:`member intent documentation "
"<need_members_intent>`."
msgstr ""

#: ../../docstring discord.Intents.members:29 discord.Intents.presences:17 of
msgid ""
"This intent is privileged, meaning that bots in over 100 guilds that "
"require this intent would need to request this intent on the Developer "
"Portal."
msgstr ""

#: ../../docstring discord.Intents.bans:1 of
msgid "Whether guild ban related events are enabled."
msgstr ""

#: ../../docstring discord.Intents.bans:5 of
msgid ":func:`on_member_ban`"
msgstr ""

#: ../../docstring discord.Intents.bans:6 of
msgid ":func:`on_member_unban`"
msgstr ""

#: ../../docstring discord.Intents.bans:8 discord.Intents.dm_typing:9
#: discord.Intents.guild_typing:9 discord.Intents.integrations:10
#: discord.Intents.invites:8 discord.Intents.typing:9
#: discord.Intents.webhooks:7 of
msgid ""
"This does not correspond to any attributes or classes in the library in "
"terms of cache."
msgstr ""

#: ../../docstring discord.Intents.emojis:1 of
msgid "Alias of :attr:`.emojis_and_stickers`."
msgstr ""

#: ../../docstring discord.Intents.emojis:3 of
msgid "Changed to an alias."
msgstr ""

#: ../../docstring discord.Intents.emojis_and_stickers:1 of
msgid "Whether guild emoji and sticker related events are enabled."
msgstr ""

#: ../../docstring discord.Intents.emojis_and_stickers:7 of
msgid ":func:`on_guild_emojis_update`"
msgstr ""

#: ../../docstring discord.Intents.emojis_and_stickers:8 of
msgid ":func:`on_guild_stickers_update`"
msgstr ""

#: ../../docstring discord.Intents.emojis_and_stickers:14 of
msgid ":meth:`Client.get_emoji`"
msgstr ""

#: ../../docstring discord.Intents.emojis_and_stickers:15 of
msgid ":meth:`Client.get_sticker`"
msgstr ""

#: ../../docstring discord.Intents.emojis_and_stickers:16 of
msgid ":meth:`Client.emojis`"
msgstr ""

#: ../../docstring discord.Intents.emojis_and_stickers:17 of
msgid ":meth:`Client.stickers`"
msgstr ""

#: ../../docstring discord.Intents.emojis_and_stickers:18 of
msgid ":attr:`Guild.emojis`"
msgstr ""

#: ../../docstring discord.Intents.emojis_and_stickers:19 of
msgid ":attr:`Guild.stickers`"
msgstr ""

#: ../../docstring discord.Intents.integrations:1 of
msgid "Whether guild integration related events are enabled."
msgstr ""

#: ../../docstring discord.Intents.integrations:5 of
msgid ":func:`on_guild_integrations_update`"
msgstr ""

#: ../../docstring discord.Intents.integrations:6 of
msgid ":func:`on_integration_create`"
msgstr ""

#: ../../docstring discord.Intents.integrations:7 of
msgid ":func:`on_integration_update`"
msgstr ""

#: ../../docstring discord.Intents.integrations:8 of
msgid ":func:`on_raw_integration_delete`"
msgstr ""

#: ../../docstring discord.Intents.webhooks:1 of
msgid "Whether guild webhook related events are enabled."
msgstr ""

#: ../../docstring discord.Intents.webhooks:5 of
msgid ":func:`on_webhooks_update`"
msgstr ""

#: ../../docstring discord.Intents.invites:1 of
msgid "Whether guild invite related events are enabled."
msgstr ""

#: ../../docstring discord.Intents.invites:5 of
msgid ":func:`on_invite_create`"
msgstr ""

#: ../../docstring discord.Intents.invites:6 of
msgid ":func:`on_invite_delete`"
msgstr ""

#: ../../docstring discord.Intents.voice_states:1 of
msgid "Whether guild voice state related events are enabled."
msgstr ""

#: ../../docstring discord.Intents.voice_states:5 of
msgid ":func:`on_voice_state_update`"
msgstr ""

#: ../../docstring discord.Intents.voice_states:9 of
msgid ":attr:`VoiceChannel.members`"
msgstr ""

#: ../../docstring discord.Intents.voice_states:10 of
msgid ":attr:`VoiceChannel.voice_states`"
msgstr ""

#: ../../docstring discord.Intents.voice_states:11 of
msgid ":attr:`Member.voice`"
msgstr ""

#: ../../docstring discord.Intents.voice_states:15 of
msgid "This intent is required to connect to voice."
msgstr ""

#: ../../docstring discord.Intents.presences:1 of
msgid "Whether guild presence related events are enabled."
msgstr ""

#: ../../docstring discord.Intents.presences:5 of
msgid ":func:`on_presence_update`"
msgstr ""

#: ../../docstring discord.Intents.presences:9 of
msgid ":attr:`Member.activities`"
msgstr ""

#: ../../docstring discord.Intents.presences:10 of
msgid ":attr:`Member.status`"
msgstr ""

#: ../../docstring discord.Intents.presences:11 of
msgid ":attr:`Member.raw_status`"
msgstr ""

#: ../../docstring discord.Intents.presences:13 of
msgid ""
"For more information go to the :ref:`presence intent documentation "
"<need_presence_intent>`."
msgstr ""

#: ../../docstring discord.Intents.messages:1 of
msgid "Whether guild and direct message related events are enabled."
msgstr ""

#: ../../docstring discord.Intents.messages:3 of
msgid ""
"This is a shortcut to set or get both :attr:`guild_messages` and "
":attr:`dm_messages`."
msgstr ""

#: ../../docstring discord.Intents.messages:7 of
msgid ":func:`on_message` (both guilds and DMs)"
msgstr ""

#: ../../docstring discord.Intents.messages:8 of
msgid ":func:`on_message_edit` (both guilds and DMs)"
msgstr ""

#: ../../docstring discord.Intents.messages:9 of
msgid ":func:`on_message_delete` (both guilds and DMs)"
msgstr ""

#: ../../docstring discord.Intents.messages:10 of
msgid ":func:`on_raw_message_delete` (both guilds and DMs)"
msgstr ""

#: ../../docstring discord.Intents.messages:11 of
msgid ":func:`on_raw_message_edit` (both guilds and DMs)"
msgstr ""

#: ../../docstring discord.Intents.messages:16 of
msgid ":attr:`Client.cached_messages`"
msgstr ""

#: ../../docstring discord.Intents.messages:17 of
msgid ":meth:`Client.get_message`"
msgstr ""

#: ../../docstring discord.Intents.dm_messages:19
#: discord.Intents.guild_messages:19 discord.Intents.messages:19 of
msgid ""
"Note that due to an implicit relationship this also corresponds to the "
"following events:"
msgstr ""

#: ../../docstring discord.Intents.messages:21 discord.Intents.reactions:7 of
msgid ":func:`on_reaction_add` (both guilds and DMs)"
msgstr ""

#: ../../docstring discord.Intents.messages:22 discord.Intents.reactions:8 of
msgid ":func:`on_reaction_remove` (both guilds and DMs)"
msgstr ""

#: ../../docstring discord.Intents.messages:23 discord.Intents.reactions:9 of
msgid ":func:`on_reaction_clear` (both guilds and DMs)"
msgstr ""

#: ../../docstring discord.Intents.messages:27 of
msgid ""
":attr:`message_content` is required to receive the actual content of "
"guild messages."
msgstr ""

#: ../../docstring discord.Intents.guild_messages:1 of
msgid "Whether guild message related events are enabled."
msgstr ""

#: ../../docstring discord.Intents.guild_messages:3 of
msgid "See also :attr:`dm_messages` for DMs or :attr:`messages` for both."
msgstr ""

#: ../../docstring discord.Intents.guild_messages:7 of
msgid ":func:`on_message` (only for guilds)"
msgstr ""

#: ../../docstring discord.Intents.guild_messages:8 of
msgid ":func:`on_message_edit` (only for guilds)"
msgstr ""

#: ../../docstring discord.Intents.guild_messages:9 of
msgid ":func:`on_message_delete` (only for guilds)"
msgstr ""

#: ../../docstring discord.Intents.guild_messages:10 of
msgid ":func:`on_raw_message_delete` (only for guilds)"
msgstr ""

#: ../../docstring discord.Intents.guild_messages:11 of
msgid ":func:`on_raw_message_edit` (only for guilds)"
msgstr ""

#: ../../docstring discord.Intents.guild_messages:16 of
msgid ":attr:`Client.cached_messages` (only for guilds)"
msgstr ""

#: ../../docstring discord.Intents.guild_messages:17 of
msgid ":meth:`Client.get_message` (only for guilds)"
msgstr ""

#: ../../docstring discord.Intents.guild_messages:21
#: discord.Intents.guild_reactions:7 of
msgid ":func:`on_reaction_add` (only for guilds)"
msgstr ""

#: ../../docstring discord.Intents.guild_messages:22
#: discord.Intents.guild_reactions:8 of
msgid ":func:`on_reaction_remove` (only for guilds)"
msgstr ""

#: ../../docstring discord.Intents.guild_messages:23
#: discord.Intents.guild_reactions:9 of
msgid ":func:`on_reaction_clear` (only for guilds)"
msgstr ""

#: ../../docstring discord.Intents.guild_messages:25 of
msgid ""
"Without the :attr:`message_content` intent enabled, the following fields "
"are either an empty string or empty array:"
msgstr ""

#: ../../docstring discord.Intents.guild_messages:28
#: discord.Intents.message_content:5 of
msgid ":attr:`Message.content`"
msgstr ""

#: ../../docstring discord.Intents.guild_messages:29
#: discord.Intents.message_content:6 of
msgid ":attr:`Message.embeds`"
msgstr ""

#: ../../docstring discord.Intents.guild_messages:30
#: discord.Intents.message_content:7 of
msgid ":attr:`Message.attachments`"
msgstr ""

#: ../../docstring discord.Intents.guild_messages:31
#: discord.Intents.message_content:8 of
msgid ":attr:`Message.components`"
msgstr ""

#: ../../docstring discord.Intents.guild_messages:33 of
msgid ""
"For more information go to the :ref:`message content intent documentation"
" <need_message_content_intent>`."
msgstr ""

#: ../../docstring discord.Intents.dm_messages:1 of
msgid "Whether direct message related events are enabled."
msgstr ""

#: ../../docstring discord.Intents.dm_messages:3 of
msgid "See also :attr:`guild_messages` for guilds or :attr:`messages` for both."
msgstr ""

#: ../../docstring discord.Intents.dm_messages:7 of
msgid ":func:`on_message` (only for DMs)"
msgstr ""

#: ../../docstring discord.Intents.dm_messages:8 of
msgid ":func:`on_message_edit` (only for DMs)"
msgstr ""

#: ../../docstring discord.Intents.dm_messages:9 of
msgid ":func:`on_message_delete` (only for DMs)"
msgstr ""

#: ../../docstring discord.Intents.dm_messages:10 of
msgid ":func:`on_raw_message_delete` (only for DMs)"
msgstr ""

#: ../../docstring discord.Intents.dm_messages:11 of
msgid ":func:`on_raw_message_edit` (only for DMs)"
msgstr ""

#: ../../docstring discord.Intents.dm_messages:16 of
msgid ":attr:`Client.cached_messages` (only for DMs)"
msgstr ""

#: ../../docstring discord.Intents.dm_messages:17 of
msgid ":meth:`Client.get_message` (only for DMs)"
msgstr ""

#: ../../docstring discord.Intents.dm_messages:21
#: discord.Intents.dm_reactions:7 of
msgid ":func:`on_reaction_add` (only for DMs)"
msgstr ""

#: ../../docstring discord.Intents.dm_messages:22
#: discord.Intents.dm_reactions:8 of
msgid ":func:`on_reaction_remove` (only for DMs)"
msgstr ""

#: ../../docstring discord.Intents.dm_messages:23
#: discord.Intents.dm_reactions:9 of
msgid ":func:`on_reaction_clear` (only for DMs)"
msgstr ""

#: ../../docstring discord.Intents.reactions:1 of
msgid "Whether guild and direct message reaction related events are enabled."
msgstr ""

#: ../../docstring discord.Intents.reactions:3 of
msgid ""
"This is a shortcut to set or get both :attr:`guild_reactions` and "
":attr:`dm_reactions`."
msgstr ""

#: ../../docstring discord.Intents.reactions:10 of
msgid ":func:`on_raw_reaction_add` (both guilds and DMs)"
msgstr ""

#: ../../docstring discord.Intents.reactions:11 of
msgid ":func:`on_raw_reaction_remove` (both guilds and DMs)"
msgstr ""

#: ../../docstring discord.Intents.reactions:12 of
msgid ":func:`on_raw_reaction_clear` (both guilds and DMs)"
msgstr ""

#: ../../docstring discord.Intents.reactions:16 of
msgid ":attr:`Message.reactions` (both guild and DM messages)"
msgstr ""

#: ../../docstring discord.Intents.guild_reactions:1 of
msgid "Whether guild message reaction related events are enabled."
msgstr ""

#: ../../docstring discord.Intents.guild_reactions:3 of
msgid "See also :attr:`dm_reactions` for DMs or :attr:`reactions` for both."
msgstr ""

#: ../../docstring discord.Intents.guild_reactions:10 of
msgid ":func:`on_raw_reaction_add` (only for guilds)"
msgstr ""

#: ../../docstring discord.Intents.guild_reactions:11 of
msgid ":func:`on_raw_reaction_remove` (only for guilds)"
msgstr ""

#: ../../docstring discord.Intents.guild_reactions:12 of
msgid ":func:`on_raw_reaction_clear` (only for guilds)"
msgstr ""

#: ../../docstring discord.Intents.guild_reactions:16 of
msgid ":attr:`Message.reactions` (only for guild messages)"
msgstr ""

#: ../../docstring discord.Intents.dm_reactions:1 of
msgid "Whether direct message reaction related events are enabled."
msgstr ""

#: ../../docstring discord.Intents.dm_reactions:3 of
msgid "See also :attr:`guild_reactions` for guilds or :attr:`reactions` for both."
msgstr ""

#: ../../docstring discord.Intents.dm_reactions:10 of
msgid ":func:`on_raw_reaction_add` (only for DMs)"
msgstr ""

#: ../../docstring discord.Intents.dm_reactions:11 of
msgid ":func:`on_raw_reaction_remove` (only for DMs)"
msgstr ""

#: ../../docstring discord.Intents.dm_reactions:12 of
msgid ":func:`on_raw_reaction_clear` (only for DMs)"
msgstr ""

#: ../../docstring discord.Intents.dm_reactions:16 of
msgid ":attr:`Message.reactions` (only for DM messages)"
msgstr ""

#: ../../docstring discord.Intents.dm_typing:1 discord.Intents.guild_typing:1
#: discord.Intents.typing:1 of
msgid "Whether guild and direct message typing related events are enabled."
msgstr ""

#: ../../docstring discord.Intents.typing:3 of
msgid ""
"This is a shortcut to set or get both :attr:`guild_typing` and "
":attr:`dm_typing`."
msgstr ""

#: ../../docstring discord.Intents.typing:7 of
msgid ":func:`on_typing` (both guilds and DMs)"
msgstr ""

#: ../../docstring discord.Intents.guild_typing:3 of
msgid "See also :attr:`dm_typing` for DMs or :attr:`typing` for both."
msgstr ""

#: ../../docstring discord.Intents.guild_typing:7 of
msgid ":func:`on_typing` (only for guilds)"
msgstr ""

#: ../../docstring discord.Intents.dm_typing:3 of
msgid "See also :attr:`guild_typing` for guilds or :attr:`typing` for both."
msgstr ""

#: ../../docstring discord.Intents.dm_typing:7 of
msgid ":func:`on_typing` (only for DMs)"
msgstr ""

#: ../../docstring discord.Intents.message_content:1 of
msgid "Whether the bot will receive message content in guild messages."
msgstr ""

#: ../../docstring discord.Intents.message_content:3 of
msgid "This corresponds to the following attributes:"
msgstr ""

#: ../../docstring discord.Intents.message_content:10 of
msgid ""
"These attributes will still be available for messages received from "
"interactions, the bot's own messages, messages the bot was mentioned in, "
"and DMs."
msgstr ""

#: ../../docstring discord.Intents.message_content:17 of
msgid ""
"As of September 2022 requires opting in explicitly via the Developer "
"Portal to receive the actual content of the guild messages. This intent "
"is privileged, meaning that bots in over 100 guilds that require this "
"intent would need to request this intent on the Developer Portal. See "
"https://support-dev.discord.com/hc/en-us/articles/4404772028055 for more "
"information."
msgstr ""

#: ../../docstring discord.Intents.scheduled_events:1 of
msgid "Whether \"scheduled event\" related events are enabled."
msgstr ""

#: ../../docstring discord.Intents.scheduled_events:5 of
msgid ":func:`on_scheduled_event_create`"
msgstr ""

#: ../../docstring discord.Intents.scheduled_events:6 of
msgid ":func:`on_scheduled_event_update`"
msgstr ""

#: ../../docstring discord.Intents.scheduled_events:7 of
msgid ":func:`on_scheduled_event_delete`"
msgstr ""

#: ../../docstring discord.Intents.scheduled_events:8 of
msgid ":func:`on_scheduled_event_user_add`"
msgstr ""

#: ../../docstring discord.Intents.scheduled_events:9 of
msgid ":func:`on_raw_scheduled_event_user_add`"
msgstr ""

#: ../../docstring discord.Intents.scheduled_events:10 of
msgid ":func:`on_scheduled_event_user_remove`"
msgstr ""

#: ../../docstring discord.Intents.scheduled_events:11 of
msgid ":func:`on_raw_scheduled_event_user_remove`"
msgstr ""

#: ../../docstring discord.Intents.scheduled_events:15 of
msgid ":class:`ScheduledEvent`"
msgstr ""

#: ../../docstring discord.Intents.scheduled_events:16 of
msgid ":meth:`Guild.get_scheduled_event`"
msgstr ""

#: ../../docstring discord.Intents.auto_moderation_configuration:1 of
msgid "Whether guild auto moderation configuration events are enabled."
msgstr ""

#: ../../docstring discord.Intents.auto_moderation_configuration:5 of
msgid ":func:`on_auto_moderation_rule_create`"
msgstr ""

#: ../../docstring discord.Intents.auto_moderation_configuration:6 of
msgid ":func:`on_auto_moderation_rule_update`"
msgstr ""

#: ../../docstring discord.Intents.auto_moderation_configuration:7 of
msgid ":func:`on_auto_moderation_rule_delete`"
msgstr ""

#: ../../docstring discord.Intents.auto_moderation_execution:1 of
msgid "Whether guild auto moderation execution events are enabled."
msgstr ""

#: ../../docstring discord.Intents.auto_moderation_execution:5 of
msgid ":func:`on_auto_moderation_action_execution`"
msgstr ""

#: ../../api.rst:4837
msgid "MemberCacheFlags"
msgstr ""

#: discord.flags.MemberCacheFlags:1 of
msgid "Controls the library's cache policy when it comes to members."
msgstr ""

#: discord.flags.MemberCacheFlags:3 of
msgid ""
"This allows for finer grained control over what members are cached. Note "
"that the bot's own member is always cached. This class is passed to the "
"``member_cache_flags`` parameter in :class:`Client`."
msgstr ""

#: discord.flags.MemberCacheFlags:7 of
msgid ""
"Due to a quirk in how Discord works, in order to ensure proper cleanup of"
" cache resources it is recommended to have :attr:`Intents.members` "
"enabled. Otherwise, the library cannot know when a member leaves a guild "
"and is thus unable to clean up after itself."
msgstr ""

#: discord.flags.MemberCacheFlags:15 of
msgid "The default value is all flags enabled."
msgstr ""

#: discord.flags.MemberCacheFlags.all:1 of
msgid ""
"A factory method that creates a :class:`MemberCacheFlags` with everything"
" enabled."
msgstr ""

#: discord.flags.MemberCacheFlags.none:1 of
msgid ""
"A factory method that creates a :class:`MemberCacheFlags` with everything"
" disabled."
msgstr ""

#: ../../docstring discord.MemberCacheFlags.voice:1 of
msgid "Whether to cache members that are in voice."
msgstr ""

#: ../../docstring discord.MemberCacheFlags.voice:5 of
msgid "Members that leave voice are no longer cached."
msgstr ""

#: ../../docstring discord.MemberCacheFlags.joined:1 of
msgid ""
"Whether to cache members that joined the guild or are chunked as part of "
"the initial log in flow."
msgstr ""

#: ../../docstring discord.MemberCacheFlags.joined:4 of
msgid "This requires :attr:`Intents.members`."
msgstr ""

#: ../../docstring discord.MemberCacheFlags.joined:6 of
msgid "Members that leave the guild are no longer cached."
msgstr ""

#: ../../docstring discord.MemberCacheFlags.interaction:1 of
msgid "Whether to cache members obtained through interactions."
msgstr ""

#: ../../docstring discord.MemberCacheFlags.interaction:3 of
msgid ""
"This includes members received through :class:`discord.Interaction` and "
":class:`discord.Option`."
msgstr ""

#: discord.flags.MemberCacheFlags.from_intents:1 of
msgid ""
"A factory method that creates a :class:`MemberCacheFlags` based on the "
"currently selected :class:`Intents`."
msgstr ""

#: discord.flags.MemberCacheFlags.from_intents:4 of
msgid "The intents to select from."
msgstr ""

#: discord.flags.MemberCacheFlags.from_intents:7 of
msgid "The resulting member cache flags."
msgstr ""

#: discord.flags.MemberCacheFlags.from_intents:8 of
msgid ":class:`MemberCacheFlags`"
msgstr ""

#: ../../api.rst:4845
msgid "ApplicationFlags"
msgstr ""

#: discord.flags.ApplicationFlags:1 of
msgid "Wraps up the Discord Application flags."
msgstr ""

#: discord.flags.ApplicationFlags:7 of
msgid "Checks if two ApplicationFlags are equal."
msgstr ""

#: discord.flags.ApplicationFlags:10 of
msgid "Checks if two ApplicationFlags are not equal."
msgstr ""

#: discord.flags.ApplicationFlags:31 discord.flags.ChannelFlags:31
#: discord.flags.PublicUserFlags:31 of
msgid ""
"Returns an iterator of ``(name, value)`` pairs. This allows it to be, for"
" example, constructed as a dict or a list of pairs. Note that aliases are"
" not shown."
msgstr ""

#: ../../docstring discord.ApplicationFlags.managed_emoji:1 of
msgid "Returns ``True`` if the application is a managed emoji."
msgstr ""

#: ../../docstring discord.ApplicationFlags.group_dm_create:1 of
msgid "Returns ``True`` if the application can create group DMs."
msgstr ""

#: ../../docstring discord.ApplicationFlags.rpc_has_connected:1 of
msgid "Returns ``True`` if the application has connected to RPC."
msgstr ""

#: ../../docstring discord.ApplicationFlags.gateway_presence:1 of
msgid ""
"Returns ``True`` if the application is verified and is allowed to receive"
" presence information over the gateway."
msgstr ""

#: ../../docstring discord.ApplicationFlags.gateway_presence_limited:1 of
msgid ""
"Returns ``True`` if the application is allowed to receive limited "
"presence information over the gateway."
msgstr ""

#: ../../docstring discord.ApplicationFlags.gateway_guild_members:1 of
msgid ""
"Returns ``True`` if the application is verified and is allowed to receive"
" guild members information over the gateway."
msgstr ""

#: ../../docstring discord.ApplicationFlags.gateway_guild_members_limited:1 of
msgid ""
"Returns ``True`` if the application is allowed to receive limited guild "
"members information over the gateway."
msgstr ""

#: ../../docstring discord.ApplicationFlags.gateway_message_content_limited:1
#: discord.ApplicationFlags.verification_pending_guild_limit:1 of
msgid ""
"Returns ``True`` if the application is currently pending verification and"
" has hit the guild limit."
msgstr ""

#: ../../docstring discord.ApplicationFlags.embedded:1 of
msgid "Returns ``True`` if the application is embedded within the Discord client."
msgstr ""

#: ../../docstring discord.ApplicationFlags.gateway_message_content:1 of
msgid ""
"Returns ``True`` if the application is allowed to read message contents "
"in guilds."
msgstr ""

#: ../../docstring discord.ApplicationFlags.app_commands_badge:1 of
msgid ""
"Returns ``True`` if the application has registered at least one global "
"application command, and by extension has the badge."
msgstr ""

#: ../../api.rst:4853
msgid "File"
msgstr ""

#: discord.file.File:1 of
msgid ""
"A parameter object used for :meth:`abc.Messageable.send` for sending file"
" objects."
msgstr ""

#: discord.file.File:6 of
msgid ""
"File objects are single use and are not meant to be reused in multiple "
":meth:`abc.Messageable.send`\\s."
msgstr ""

#: discord.file.File:11 of
msgid ""
"A file-like object opened in binary mode and read mode or a filename "
"representing a file in the hard drive to open."
msgstr ""

#: discord.file.File:17 of
msgid ""
"If the file-like object passed is opened via ``open`` then the modes 'rb'"
" should be used."
msgstr ""

#: discord.file.File:20 of
msgid "To pass binary data, consider usage of ``io.BytesIO``."
msgstr ""

#: discord.file.File:22 of
msgid "Union[:class:`os.PathLike`, :class:`io.BufferedIOBase`]"
msgstr ""

#: discord.file.File:26 of
msgid ""
"The filename to display when uploading to Discord. If this is not given "
"then it defaults to ``fp.name`` or if ``fp`` is a string then the "
"``filename`` will default to the string given."
msgstr ""

#: discord.file.File:34 of
msgid ""
"The description of a file, used by Discord to display alternative text on"
" images."
msgstr ""

#: discord.file.File:40 of
msgid "Whether the attachment is a spoiler."
msgstr ""

#: ../../api.rst:4861
msgid "Colour"
msgstr ""

#: discord.colour.Colour:1 of
msgid ""
"Represents a Discord role colour. This class is similar to a (red, green,"
" blue) :class:`tuple`."
msgstr ""

#: discord.colour.Colour:4 of
msgid "There is an alias for this called Color."
msgstr ""

#: discord.colour.Colour:10 of
msgid "Checks if two colours are equal."
msgstr ""

#: discord.colour.Colour:14 of
msgid "Checks if two colours are not equal."
msgstr ""

#: discord.colour.Colour:18 of
msgid "Return the colour's hash."
msgstr ""

#: discord.colour.Colour:22 of
msgid "Returns the hex format for the colour."
msgstr ""

#: discord.colour.Colour:26 of
msgid "Returns the raw colour value."
msgstr ""

#: discord.colour.Colour:30 of
msgid "The raw integer colour value."
msgstr ""

#: discord.Colour.r:1 of
msgid "Returns the red component of the colour."
msgstr ""

#: discord.Colour.g:1 of
msgid "Returns the green component of the colour."
msgstr ""

#: discord.Colour.b:1 of
msgid "Returns the blue component of the colour."
msgstr ""

#: discord.colour.Colour.to_rgb:1 of
msgid ""
"Tuple[:class:`int`, :class:`int`, :class:`int`]: Returns an (r, g, b) "
"tuple representing the colour."
msgstr ""

#: discord.colour.Colour.from_rgb:1 of
msgid "Constructs a :class:`Colour` from an RGB tuple."
msgstr ""

#: discord.colour.Colour.from_hsv:1 of
msgid "Constructs a :class:`Colour` from an HSV tuple."
msgstr ""

#: discord.colour.Colour.default:1 of
msgid "A factory method that returns a :class:`Colour` with a value of ``0``."
msgstr ""

#: discord.colour.Colour.random:1 of
msgid "A factory method that returns a :class:`Colour` with a random hue."
msgstr ""

#: discord.colour.Colour.random:5 of
msgid ""
"The random algorithm works by choosing a colour with a random hue but "
"with maxed out saturation and value."
msgstr ""

#: discord.colour.Colour.random:10 of
msgid ""
"The seed to initialize the RNG with. If ``None`` is passed the default "
"RNG is used.  .. versionadded:: 1.7"
msgstr ""

#: discord.colour.Colour.random:10 of
msgid ""
"The seed to initialize the RNG with. If ``None`` is passed the default "
"RNG is used."
msgstr ""

#: discord.colour.Colour.teal:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0x1abc9c``."
msgstr ""

#: discord.colour.Colour.dark_teal:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0x11806a``."
msgstr ""

#: discord.colour.Colour.brand_green:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0x57F287``."
msgstr ""

#: discord.colour.Colour.green:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0x2ecc71``."
msgstr ""

#: discord.colour.Colour.dark_green:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0x1f8b4c``."
msgstr ""

#: discord.colour.Colour.blue:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0x3498db``."
msgstr ""

#: discord.colour.Colour.dark_blue:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0x206694``."
msgstr ""

#: discord.colour.Colour.purple:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0x9b59b6``."
msgstr ""

#: discord.colour.Colour.dark_purple:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0x71368a``."
msgstr ""

#: discord.colour.Colour.magenta:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0xe91e63``."
msgstr ""

#: discord.colour.Colour.dark_magenta:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0xad1457``."
msgstr ""

#: discord.colour.Colour.gold:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0xf1c40f``."
msgstr ""

#: discord.colour.Colour.dark_gold:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0xc27c0e``."
msgstr ""

#: discord.colour.Colour.orange:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0xe67e22``."
msgstr ""

#: discord.colour.Colour.dark_orange:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0xa84300``."
msgstr ""

#: discord.colour.Colour.brand_red:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0xED4245``."
msgstr ""

#: discord.colour.Colour.red:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0xe74c3c``."
msgstr ""

#: discord.colour.Colour.dark_red:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0x992d22``."
msgstr ""

#: discord.colour.Colour.lighter_grey:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0x95a5a6``."
msgstr ""

#: discord.colour.Colour.dark_grey:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0x607d8b``."
msgstr ""

#: discord.colour.Colour.light_grey:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0x979c9f``."
msgstr ""

#: discord.colour.Colour.darker_grey:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0x546e7a``."
msgstr ""

#: discord.colour.Colour.og_blurple:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0x7289da``."
msgstr ""

#: discord.colour.Colour.blurple:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0x5865F2``."
msgstr ""

#: discord.colour.Colour.greyple:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0x99aab5``."
msgstr ""

#: discord.colour.Colour.dark_theme:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0x36393F``. This will appear transparent on Discord's dark theme."
msgstr ""

#: discord.colour.Colour.fuchsia:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0xEB459E``."
msgstr ""

#: discord.colour.Colour.yellow:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0xFEE75C``."
msgstr ""

#: discord.colour.Colour.nitro_pink:1 of
msgid ""
"A factory method that returns a :class:`Colour` with a value of "
"``0xf47fff``."
msgstr ""

#: discord.colour.Colour.embed_background:1 of
msgid ""
"A factory method that returns a :class:`Color` corresponding to the embed"
" colors on discord clients, with a value of:"
msgstr ""

#: discord.colour.Colour.embed_background:4 of
msgid "``0x2F3136`` (dark)"
msgstr ""

#: discord.colour.Colour.embed_background:5 of
msgid "``0xf2f3f5`` (light)"
msgstr ""

#: discord.colour.Colour.embed_background:6 of
msgid "``0x000000`` (amoled)."
msgstr ""

#: discord.colour.Colour.embed_background:10 of
msgid ""
"The theme color to apply, must be one of \"dark\", \"light\", or "
"\"amoled\"."
msgstr ""

#: ../../api.rst:4869
msgid "BaseActivity"
msgstr ""

#: discord.activity.BaseActivity:1 of
msgid ""
"The base activity that all user-settable activities inherit from. A user-"
"settable activity is one that can be used in "
":meth:`Client.change_presence`."
msgstr ""

#: discord.activity.BaseActivity:4 of
msgid "The following types currently count as user-settable:"
msgstr ""

#: discord.activity.BaseActivity:6 of
msgid ":class:`Activity`"
msgstr ""

#: discord.activity.Activity:9 discord.activity.BaseActivity:7 of
msgid ":class:`Game`"
msgstr ""

#: discord.activity.Activity:10 discord.activity.BaseActivity:8 of
msgid ":class:`Streaming`"
msgstr ""

#: discord.activity.BaseActivity:9 of
msgid ":class:`CustomActivity`"
msgstr ""

#: discord.activity.BaseActivity:11 of
msgid ""
"Note that although these types are considered user-settable by the "
"library, Discord typically ignores certain combinations of activity "
"depending on what is currently set. This behaviour may change in the "
"future so there are no guarantees on whether Discord will actually let "
"you set these types."
msgstr ""

#: discord.BaseActivity.created_at:1 of
msgid "When the user started doing this activity in UTC."
msgstr ""

#: ../../api.rst:4877
msgid "Activity"
msgstr ""

#: discord.activity.Activity:1 of
msgid "Represents an activity in Discord."
msgstr ""

#: discord.activity.Activity:3 of
msgid ""
"This could be an activity such as streaming, playing, listening or "
"watching."
msgstr ""

#: discord.activity.Activity:6 of
msgid ""
"For memory optimisation purposes, some activities are offered in slimmed "
"down versions:"
msgstr ""

#: discord.activity.Activity:14 of
msgid "The application ID of the game."
msgstr ""

#: discord.activity.Activity:20 of
msgid "The name of the activity."
msgstr ""

#: discord.activity.Activity:26 of
msgid "A stream URL that the activity could be doing."
msgstr ""

#: discord.activity.Activity:32 of
msgid "The type of activity currently being done."
msgstr ""

#: discord.activity.Activity:38 of
msgid "The user's current state. For example, \"In Game\"."
msgstr ""

#: discord.activity.Activity:44 of
msgid "The detail of the user's current activity."
msgstr ""

#: discord.activity.Activity:50 of
msgid "A dictionary of timestamps. It contains the following optional keys:"
msgstr ""

#: discord.activity.Activity:52 of
msgid ""
"``start``: Corresponds to when the user started doing the activity in "
"milliseconds since Unix epoch."
msgstr ""

#: discord.activity.Activity:54 of
msgid ""
"``end``: Corresponds to when the user will finish doing the activity in "
"milliseconds since Unix epoch."
msgstr ""

#: discord.activity.Activity:57 of
msgid "Dict[:class:`str`, :class:`int`]"
msgstr ""

#: discord.activity.Activity:61 of
msgid ""
"A dictionary representing the images and their hover text of an activity."
" It contains the following optional keys:"
msgstr ""

#: discord.activity.Activity:64 of
msgid "``large_image``: A string representing the ID for the large image asset."
msgstr ""

#: discord.activity.Activity:65 of
msgid ""
"``large_text``: A string representing the text when hovering over the "
"large image asset."
msgstr ""

#: discord.activity.Activity:66 of
msgid "``small_image``: A string representing the ID for the small image asset."
msgstr ""

#: discord.activity.Activity:67 of
msgid ""
"``small_text``: A string representing the text when hovering over the "
"small image asset."
msgstr ""

#: discord.activity.Activity:69 discord.activity.Streaming:61 of
msgid "Dict[:class:`str`, :class:`str`]"
msgstr ""

#: discord.activity.Activity:73 of
msgid ""
"A dictionary representing the activity party. It contains the following "
"optional keys:"
msgstr ""

#: discord.activity.Activity:75 of
msgid "``id``: A string representing the party ID."
msgstr ""

#: discord.activity.Activity:76 of
msgid ""
"``size``: A list of up to two integer elements denoting (current_size, "
"maximum_size)."
msgstr ""

#: discord.activity.Activity:78 of
msgid "Dict[:class:`str`, Union[:class:`str`, List[:class:`int`]]]"
msgstr ""

#: discord.activity.Activity:82 of
msgid ""
"A list of dictionaries representing custom buttons shown in a rich "
"presence. Each dictionary contains the following keys:"
msgstr ""

#: discord.activity.Activity:85 of
msgid "``label``: A string representing the text shown on the button."
msgstr ""

#: discord.activity.Activity:86 of
msgid "``url``: A string representing the URL opened upon clicking the button."
msgstr ""

#: discord.activity.Activity:90 of
msgid ""
"Bots cannot access a user's activity button URLs. Therefore, the type of "
"this attribute will be List[:class:`str`] when received through the "
"gateway."
msgstr ""

#: discord.activity.Activity:95 of
msgid "Union[List[Dict[:class:`str`, :class:`str`]], List[:class:`str`]]"
msgstr ""

#: discord.activity.Activity:99 of
msgid "The emoji that belongs to this activity."
msgstr ""

#: discord.Activity.start:1 of
msgid "When the user started doing this activity in UTC, if applicable."
msgstr ""

#: discord.Activity.end:1 of
msgid "When the user will stop doing this activity in UTC, if applicable."
msgstr ""

#: discord.Activity.large_image_url:1 of
msgid ""
"Returns a URL pointing to the large image asset of this activity if "
"applicable."
msgstr ""

#: discord.Activity.small_image_url:1 of
msgid ""
"Returns a URL pointing to the small image asset of this activity if "
"applicable."
msgstr ""

#: discord.Activity.large_image_text:1 of
msgid "Returns the large image asset hover text of this activity if applicable."
msgstr ""

#: discord.Activity.small_image_text:1 of
msgid "Returns the small image asset hover text of this activity if applicable."
msgstr ""

#: ../../api.rst:4885
msgid "Game"
msgstr ""

#: discord.activity.Game:1 of
msgid ""
"A slimmed down version of :class:`Activity` that represents a Discord "
"game."
msgstr ""

#: discord.activity.Game:3 of
msgid ""
"This is typically displayed via **Playing** on the official Discord "
"client."
msgstr ""

#: discord.activity.Game:9 of
msgid "Checks if two games are equal."
msgstr ""

#: discord.activity.Game:13 of
msgid "Checks if two games are not equal."
msgstr ""

#: discord.activity.Game:17 of
msgid "Returns the game's hash."
msgstr ""

#: discord.activity.Game:21 of
msgid "Returns the game's name."
msgstr ""

#: discord.activity.Game:23 discord.activity.Game:28 of
msgid "The game's name."
msgstr ""

#: discord.Game.type:1 discord.Streaming.type:1 of
msgid "Returns the game's type. This is for compatibility with :class:`Activity`."
msgstr ""

#: discord.Game.type:3 of
msgid "It always returns :attr:`ActivityType.playing`."
msgstr ""

#: discord.Game.start:1 of
msgid "When the user started playing this game in UTC, if applicable."
msgstr ""

#: discord.Game.end:1 of
msgid "When the user will stop playing this game in UTC, if applicable."
msgstr ""

#: ../../api.rst:4893
msgid "Streaming"
msgstr ""

#: discord.activity.Streaming:1 of
msgid ""
"A slimmed down version of :class:`Activity` that represents a Discord "
"streaming status."
msgstr ""

#: discord.activity.Streaming:3 of
msgid ""
"This is typically displayed via **Streaming** on the official Discord "
"client."
msgstr ""

#: discord.activity.Streaming:9 of
msgid "Checks if two streams are equal."
msgstr ""

#: discord.activity.Streaming:13 of
msgid "Checks if two streams are not equal."
msgstr ""

#: discord.activity.Streaming:17 of
msgid "Returns the stream's hash."
msgstr ""

#: discord.activity.Streaming:21 of
msgid "Returns the stream's name."
msgstr ""

#: discord.activity.Streaming:25 of
msgid "Where the user is streaming from (ie. YouTube, Twitch)."
msgstr ""

#: discord.activity.Streaming:33 of
msgid "The stream's name."
msgstr ""

#: discord.activity.Streaming:39 of
msgid "An alias for :attr:`name`"
msgstr ""

#: discord.activity.Streaming:45 of
msgid "The game being streamed."
msgstr ""

#: discord.activity.Streaming:53 of
msgid "The stream's URL."
msgstr ""

#: discord.activity.Streaming:59 of
msgid ""
"A dictionary comprised of similar keys than those in "
":attr:`Activity.assets`."
msgstr ""

#: discord.Streaming.type:3 of
msgid "It always returns :attr:`ActivityType.streaming`."
msgstr ""

#: discord.Streaming.twitch_name:1 of
msgid "If provided, the twitch name of the user streaming."
msgstr ""

#: discord.Streaming.twitch_name:3 of
msgid ""
"This corresponds to the ``large_image`` key of the "
":attr:`Streaming.assets` dictionary if it starts with ``twitch:``. "
"Typically this is set by the Discord client."
msgstr ""

#: ../../api.rst:4901
msgid "CustomActivity"
msgstr ""

#: discord.activity.CustomActivity:1 of
msgid "Represents a Custom activity from Discord."
msgstr ""

#: discord.activity.CustomActivity:19 of
msgid "Returns the custom status text."
msgstr ""

#: discord.activity.CustomActivity:25 of
msgid "The custom activity's name."
msgstr ""

#: discord.activity.CustomActivity:31 of
msgid "The emoji to pass to the activity, if any."
msgstr ""

#: discord.CustomActivity.type:3 of
msgid "It always returns :attr:`ActivityType.custom`."
msgstr ""

#: ../../api.rst:4909
msgid "Permissions"
msgstr ""

#: discord.permissions.Permissions:1 of
msgid "Wraps up the Discord permission value."
msgstr ""

#: discord.permissions.Permissions:3 of
msgid ""
"The properties provided are two way. You can set and retrieve individual "
"bits using the properties as if they were regular bools. This allows you "
"to edit permissions."
msgstr ""

#: discord.permissions.Permissions:7 of
msgid ""
"You can now use keyword arguments to initialize :class:`Permissions` "
"similar to :meth:`update`."
msgstr ""

#: discord.permissions.Permissions:15 of
msgid "Checks if two permissions are equal."
msgstr ""

#: discord.permissions.Permissions:18 of
msgid "Checks if two permissions are not equal."
msgstr ""

#: discord.permissions.Permissions:21 of
msgid "Checks if a permission is a subset of another permission."
msgstr ""

#: discord.permissions.Permissions:24 of
msgid "Checks if a permission is a superset of another permission."
msgstr ""

#: discord.permissions.Permissions:27 of
msgid "Checks if a permission is a strict subset of another permission."
msgstr ""

#: discord.permissions.Permissions:32 of
msgid "Adds two permissions together. Equivalent to ``x | y``."
msgstr ""

#: discord.permissions.Permissions:35 of
msgid "Subtracts two permissions from each other."
msgstr ""

#: discord.permissions.Permissions:38 of
msgid "Returns the union of two permissions. Equivalent to ``x + y``."
msgstr ""

#: discord.permissions.Permissions:41 of
msgid "Returns the intersection of two permissions."
msgstr ""

#: discord.permissions.Permissions:44 of
msgid "Returns the inverse of a permission."
msgstr ""

#: discord.permissions.Permissions:46 of
msgid "Checks if a permission is a strict superset of another permission."
msgstr ""

#: discord.permissions.Permissions:49 of
msgid "Return the permission's hash."
msgstr ""

#: discord.permissions.PermissionOverwrite:22
#: discord.permissions.Permissions:52 of
msgid ""
"Returns an iterator of ``(perm, value)`` pairs. This allows it to be, for"
" example, constructed as a dict or a list of pairs. Note that aliases are"
" not shown."
msgstr ""

#: discord.permissions.Permissions:58 of
msgid ""
"The raw value. This value is a bit array field of a 53-bit integer "
"representing the currently available permissions. You should query "
"permissions via the properties rather than using this raw value."
msgstr ""

#: discord.permissions.Permissions.is_subset:1 of
msgid "Returns ``True`` if self has the same or fewer permissions as other."
msgstr ""

#: discord.permissions.Permissions.is_superset:1 of
msgid "Returns ``True`` if self has the same or more permissions as other."
msgstr ""

#: discord.permissions.Permissions.is_strict_subset:1 of
msgid ""
"Returns ``True`` if the permissions on other are a strict subset of those"
" on self."
msgstr ""

#: discord.permissions.Permissions.is_strict_superset:1 of
msgid ""
"Returns ``True`` if the permissions on other are a strict superset of "
"those on self."
msgstr ""

#: discord.permissions.Permissions.none:1 of
msgid ""
"A factory method that creates a :class:`Permissions` with all permissions"
" set to ``False``."
msgstr ""

#: discord.permissions.Permissions.all:1 of
msgid ""
"A factory method that creates a :class:`Permissions` with all permissions"
" set to ``True``."
msgstr ""

#: discord.permissions.Permissions.all_channel:1 of
msgid ""
"A :class:`Permissions` with all channel-specific permissions set to "
"``True`` and the guild-specific ones set to ``False``. The guild-specific"
" permissions are currently:"
msgstr ""

#: discord.permissions.Permissions.all_channel:5 of
msgid ":attr:`manage_emojis`"
msgstr ""

#: discord.permissions.Permissions.all_channel:6 of
msgid ":attr:`view_audit_log`"
msgstr ""

#: discord.permissions.Permissions.all_channel:7 of
msgid ":attr:`view_guild_insights`"
msgstr ""

#: discord.permissions.Permissions.all_channel:8 of
msgid ":attr:`manage_guild`"
msgstr ""

#: discord.permissions.Permissions.all_channel:9 of
msgid ":attr:`change_nickname`"
msgstr ""

#: discord.permissions.Permissions.all_channel:10 of
msgid ":attr:`manage_nicknames`"
msgstr ""

#: discord.permissions.Permissions.all_channel:11 of
msgid ":attr:`kick_members`"
msgstr ""

#: discord.permissions.Permissions.all_channel:12 of
msgid ":attr:`ban_members`"
msgstr ""

#: discord.permissions.Permissions.all_channel:13 of
msgid ":attr:`administrator`"
msgstr ""

#: discord.permissions.Permissions.all_channel:15 of
msgid ""
"Added :attr:`stream`, :attr:`priority_speaker` and "
":attr:`use_slash_commands` permissions."
msgstr ""

#: discord.permissions.Permissions.all_channel:18 of
msgid ""
"Added :attr:`create_public_threads`, :attr:`create_private_threads`, "
":attr:`manage_threads`, :attr:`use_external_stickers`, "
":attr:`send_messages_in_threads` and :attr:`request_to_speak` "
"permissions."
msgstr ""

#: discord.permissions.Permissions.general:1 of
msgid ""
"A factory method that creates a :class:`Permissions` with all \"General\""
" permissions from the official Discord UI set to ``True``."
msgstr ""

#: discord.permissions.Permissions.general:4 of
msgid ""
"Permission :attr:`read_messages` is now included in the general "
"permissions, but permissions :attr:`administrator`, "
":attr:`create_instant_invite`, :attr:`kick_members`, :attr:`ban_members`,"
" :attr:`change_nickname` and :attr:`manage_nicknames` are no longer part "
"of the general permissions."
msgstr ""

#: discord.permissions.Permissions.membership:1 of
msgid ""
"A factory method that creates a :class:`Permissions` with all "
"\"Membership\" permissions from the official Discord UI set to ``True``."
msgstr ""

#: discord.permissions.Permissions.text:1 of
msgid ""
"A factory method that creates a :class:`Permissions` with all \"Text\" "
"permissions from the official Discord UI set to ``True``."
msgstr ""

#: discord.permissions.Permissions.text:4 of
msgid ""
"Permission :attr:`read_messages` is no longer part of the text "
"permissions. Added :attr:`use_slash_commands` permission."
msgstr ""

#: discord.permissions.Permissions.text:8 of
msgid ""
"Added :attr:`create_public_threads`, :attr:`create_private_threads`, "
":attr:`manage_threads`, :attr:`send_messages_in_threads` and "
":attr:`use_external_stickers` permissions."
msgstr ""

#: discord.permissions.Permissions.voice:1 of
msgid ""
"A factory method that creates a :class:`Permissions` with all \"Voice\" "
"permissions from the official Discord UI set to ``True``."
msgstr ""

#: discord.permissions.Permissions.stage:1 of
msgid ""
"A factory method that creates a :class:`Permissions` with all \"Stage "
"Channel\" permissions from the official Discord UI set to ``True``."
msgstr ""

#: discord.permissions.Permissions.stage_moderator:1 of
msgid ""
"A factory method that creates a :class:`Permissions` with all \"Stage "
"Moderator\" permissions from the official Discord UI set to ``True``."
msgstr ""

#: discord.permissions.Permissions.advanced:1 of
msgid ""
"A factory method that creates a :class:`Permissions` with all "
"\"Advanced\" permissions from the official Discord UI set to ``True``."
msgstr ""

#: discord.permissions.Permissions.update:1 of
msgid "Bulk updates this permission object."
msgstr ""

#: discord.permissions.PermissionOverwrite.update:3
#: discord.permissions.Permissions.update:3 of
msgid ""
"Allows you to set multiple attributes by using keyword arguments. The "
"names must be equivalent to the properties listed. Extraneous key/value "
"pairs will be silently ignored."
msgstr ""

#: discord.permissions.Permissions.update:7 of
msgid "A list of key/value pairs to bulk update permissions with."
msgstr ""

#: ../../docstring discord.Permissions.create_instant_invite:1 of
msgid "Returns ``True`` if the user can create instant invites."
msgstr ""

#: ../../docstring discord.Permissions.kick_members:1 of
msgid "Returns ``True`` if the user can kick users from the guild."
msgstr ""

#: ../../docstring discord.Permissions.ban_members:1 of
msgid "Returns ``True`` if a user can ban users from the guild."
msgstr ""

#: ../../docstring discord.Permissions.administrator:1 of
msgid ""
"Returns ``True`` if a user is an administrator. This role overrides all "
"other permissions."
msgstr ""

#: ../../docstring discord.Permissions.administrator:3 of
msgid "This also bypasses all channel-specific overrides."
msgstr ""

#: ../../docstring discord.Permissions.manage_channels:1 of
msgid ""
"Returns ``True`` if a user can edit, delete, or create channels in the "
"guild."
msgstr ""

#: ../../docstring discord.Permissions.manage_channels:3 of
msgid "This also corresponds to the \"Manage Channel\" channel-specific override."
msgstr ""

#: ../../docstring discord.Permissions.manage_guild:1 of
msgid "Returns ``True`` if a user can edit guild properties."
msgstr ""

#: ../../docstring discord.Permissions.add_reactions:1 of
msgid "Returns ``True`` if a user can add reactions to messages."
msgstr ""

#: ../../docstring discord.Permissions.view_audit_log:1 of
msgid "Returns ``True`` if a user can view the guild's audit log."
msgstr ""

#: ../../docstring discord.Permissions.priority_speaker:1 of
msgid "Returns ``True`` if a user can be more easily heard while talking."
msgstr ""

#: ../../docstring discord.Permissions.stream:1 of
msgid "Returns ``True`` if a user can stream in a voice channel."
msgstr ""

#: ../../docstring discord.Permissions.view_channel:1 of
msgid "Returns ``True`` if a user can view all or specific channels."
msgstr ""

#: ../../docstring discord.Permissions.read_messages:1 of
msgid "An alias for :attr:`view_channel`."
msgstr ""

#: ../../docstring discord.Permissions.send_messages:1 of
msgid ""
"Returns ``True`` if a user can send messages from all or specific text "
"channels."
msgstr ""

#: ../../docstring discord.Permissions.send_tts_messages:1 of
msgid ""
"Returns ``True`` if a user can send TTS messages from all or specific "
"text channels."
msgstr ""

#: ../../docstring discord.Permissions.manage_messages:1 of
msgid "Returns ``True`` if a user can delete or pin messages in a text channel."
msgstr ""

#: ../../docstring discord.Permissions.manage_messages:5 of
msgid "Note that there are currently no ways to edit other people's messages."
msgstr ""

#: ../../docstring discord.Permissions.embed_links:1 of
msgid ""
"Returns ``True`` if a user's messages will automatically be embedded by "
"Discord."
msgstr ""

#: ../../docstring discord.Permissions.attach_files:1 of
msgid "Returns ``True`` if a user can send files in their messages."
msgstr ""

#: ../../docstring discord.Permissions.read_message_history:1 of
msgid "Returns ``True`` if a user can read a text channel's previous messages."
msgstr ""

#: ../../docstring discord.Permissions.mention_everyone:1 of
msgid ""
"Returns ``True`` if a user's @everyone or @here will mention everyone in "
"the text channel."
msgstr ""

#: ../../docstring discord.Permissions.external_emojis:1 of
msgid "Returns ``True`` if a user can use emojis from other guilds."
msgstr ""

#: ../../docstring discord.Permissions.use_external_emojis:1 of
msgid "An alias for :attr:`external_emojis`."
msgstr ""

#: ../../docstring discord.Permissions.view_guild_insights:1 of
msgid "Returns ``True`` if a user can view the guild's insights."
msgstr ""

#: ../../docstring discord.Permissions.connect:1 of
msgid "Returns ``True`` if a user can connect to a voice channel."
msgstr ""

#: ../../docstring discord.Permissions.speak:1 of
msgid "Returns ``True`` if a user can speak in a voice channel."
msgstr ""

#: ../../docstring discord.Permissions.mute_members:1 of
msgid "Returns ``True`` if a user can mute other users."
msgstr ""

#: ../../docstring discord.Permissions.deafen_members:1 of
msgid "Returns ``True`` if a user can deafen other users."
msgstr ""

#: ../../docstring discord.Permissions.move_members:1 of
msgid "Returns ``True`` if a user can move users between other voice channels."
msgstr ""

#: ../../docstring discord.Permissions.use_voice_activation:1 of
msgid "Returns ``True`` if a user can use voice activation in voice channels."
msgstr ""

#: ../../docstring discord.Permissions.change_nickname:1 of
msgid "Returns ``True`` if a user can change their nickname in the guild."
msgstr ""

#: ../../docstring discord.Permissions.manage_nicknames:1 of
msgid "Returns ``True`` if a user can change other user's nickname in the guild."
msgstr ""

#: ../../docstring discord.Permissions.manage_roles:1 of
msgid ""
"Returns ``True`` if a user can create or edit roles less than their "
"role's position."
msgstr ""

#: ../../docstring discord.Permissions.manage_roles:3 of
msgid ""
"This also corresponds to the \"Manage Permissions\" channel-specific "
"override."
msgstr ""

#: ../../docstring discord.Permissions.manage_permissions:1 of
msgid "An alias for :attr:`manage_roles`."
msgstr ""

#: ../../docstring discord.Permissions.manage_webhooks:1 of
msgid "Returns ``True`` if a user can create, edit, or delete webhooks."
msgstr ""

#: ../../docstring discord.Permissions.manage_emojis:1 of
msgid "Returns ``True`` if a user can create, edit, or delete emojis."
msgstr ""

#: ../../docstring discord.Permissions.manage_emojis_and_stickers:1 of
msgid "An alias for :attr:`manage_emojis`."
msgstr ""

#: ../../docstring discord.Permissions.use_slash_commands:1 of
msgid "Returns ``True`` if a user can use slash commands."
msgstr ""

#: ../../docstring discord.Permissions.use_application_commands:1 of
msgid "An alias for :attr:`use_slash_commands`."
msgstr ""

#: ../../docstring discord.Permissions.request_to_speak:1 of
msgid "Returns ``True`` if a user can request to speak in a stage channel."
msgstr ""

#: ../../docstring discord.Permissions.manage_events:1 of
msgid "Returns ``True`` if a user can manage guild events."
msgstr ""

#: ../../docstring discord.Permissions.manage_threads:1 of
msgid "Returns ``True`` if a user can manage threads."
msgstr ""

#: ../../docstring discord.Permissions.create_public_threads:1 of
msgid "Returns ``True`` if a user can create public threads."
msgstr ""

#: ../../docstring discord.Permissions.create_private_threads:1 of
msgid "Returns ``True`` if a user can create private threads."
msgstr ""

#: ../../docstring discord.Permissions.external_stickers:1 of
msgid "Returns ``True`` if a user can use stickers from other guilds."
msgstr ""

#: ../../docstring discord.Permissions.use_external_stickers:1 of
msgid "An alias for :attr:`external_stickers`."
msgstr ""

#: ../../docstring discord.Permissions.send_messages_in_threads:1 of
msgid "Returns ``True`` if a user can send messages in threads."
msgstr ""

#: ../../docstring discord.Permissions.start_embedded_activities:1 of
msgid ""
"Returns ``True`` if a user can launch an activity flagged 'EMBEDDED' in a"
" voice channel."
msgstr ""

#: ../../docstring discord.Permissions.moderate_members:1 of
msgid "Returns ``True`` if a user can moderate members (timeout)."
msgstr ""

#: ../../api.rst:4917
msgid "PermissionOverwrite"
msgstr ""

#: discord.permissions.PermissionOverwrite:1 of
msgid "A type that is used to represent a channel specific permission."
msgstr ""

#: discord.permissions.PermissionOverwrite:3 of
msgid ""
"Unlike a regular :class:`Permissions`\\, the default value of a "
"permission is equivalent to ``None`` and not ``False``. Setting a value "
"to ``False`` is **explicitly** denying that permission, while setting a "
"value to ``True`` is **explicitly** allowing that permission."
msgstr ""

#: discord.permissions.PermissionOverwrite:9 of
msgid ""
"The values supported by this are the same as :class:`Permissions` with "
"the added possibility of it being set to ``None``."
msgstr ""

#: discord.permissions.PermissionOverwrite:16 of
msgid "Checks if two overwrites are equal."
msgstr ""

#: discord.permissions.PermissionOverwrite:19 of
msgid "Checks if two overwrites are not equal."
msgstr ""

#: discord.permissions.PermissionOverwrite:26 of
msgid "Set the value of permissions by their name."
msgstr ""

#: discord.permissions.PermissionOverwrite.pair:1 of
msgid ""
"Tuple[:class:`Permissions`, :class:`Permissions`]: Returns the (allow, "
"deny) pair from this overwrite."
msgstr ""

#: discord.permissions.PermissionOverwrite.from_pair:1 of
msgid "Creates an overwrite from an allow/deny pair of :class:`Permissions`."
msgstr ""

#: discord.permissions.PermissionOverwrite.is_empty:1 of
msgid "Checks if the permission overwrite is currently empty."
msgstr ""

#: discord.permissions.PermissionOverwrite.is_empty:3 of
msgid ""
"An empty permission overwrite is one that has no overwrites set to "
"``True`` or ``False``."
msgstr ""

#: discord.permissions.PermissionOverwrite.is_empty:6 of
msgid "Indicates if the overwrite is empty."
msgstr ""

#: discord.permissions.PermissionOverwrite.update:1 of
msgid "Bulk updates this permission overwrite object."
msgstr ""

#: discord.permissions.PermissionOverwrite.update:7 of
msgid "A list of key/value pairs to bulk update with."
msgstr ""

#: ../../api.rst:4925
msgid "ShardInfo"
msgstr ""

#: discord.shard.ShardInfo:1 of
msgid "A class that gives information and control over a specific shard."
msgstr ""

#: discord.shard.ShardInfo:3 of
msgid ""
"You can retrieve this object via :meth:`AutoShardedClient.get_shard` or "
":attr:`AutoShardedClient.shards`."
msgstr ""

#: discord.shard.ShardInfo:10 of
msgid "The shard ID for this shard."
msgstr ""

#: discord.shard.ShardInfo:16 of
msgid ""
"The shard count for this cluster. If this is ``None`` then the bot has "
"not started yet."
msgstr ""

#: discord.shard.ShardInfo.is_closed:1 of
msgid ":class:`bool`: Whether the shard connection is currently closed."
msgstr ""

#: discord.shard.ShardInfo.disconnect:3 of
msgid ""
"Disconnects a shard. When this is called, the shard connection will no "
"longer be open."
msgstr ""

#: discord.shard.ShardInfo.disconnect:6 of
msgid "If the shard is already disconnected this does nothing."
msgstr ""

#: discord.shard.ShardInfo.reconnect:3 of
msgid "Disconnects and then connects the shard again."
msgstr ""

#: discord.shard.ShardInfo.connect:3 of
msgid "Connects a shard. If the shard is already connected this does nothing."
msgstr ""

#: discord.ShardInfo.latency:1 of
msgid ""
"Measures latency between a HEARTBEAT and a HEARTBEAT_ACK in seconds for "
"this shard."
msgstr ""

#: ../../api.rst:4933
msgid "SystemChannelFlags"
msgstr ""

#: discord.flags.SystemChannelFlags:1 of
msgid "Wraps up a Discord system channel flag value."
msgstr ""

#: discord.flags.SystemChannelFlags:3 of
msgid ""
"Similar to :class:`Permissions`\\, the properties provided are two way. "
"You can set and retrieve individual bits using the properties as if they "
"were regular bools. This allows you to edit the system flags easily."
msgstr ""

#: discord.flags.MessageFlags:40 discord.flags.PublicUserFlags:39
#: discord.flags.SystemChannelFlags:43 of
msgid ""
"The raw value. This value is a bit array field of a 53-bit integer "
"representing the currently available flags. You should query flags via "
"the properties rather than using this raw value."
msgstr ""

#: ../../docstring discord.SystemChannelFlags.join_notifications:1 of
msgid ""
"Returns ``True`` if the system channel is used for member join "
"notifications."
msgstr ""

#: ../../docstring discord.SystemChannelFlags.premium_subscriptions:1 of
msgid ""
"Returns ``True`` if the system channel is used for \"Nitro boosting\" "
"notifications."
msgstr ""

#: ../../docstring discord.SystemChannelFlags.guild_reminder_notifications:1 of
msgid ""
"Returns ``True`` if the system channel is used for server setup helpful "
"tips notifications."
msgstr ""

#: ../../docstring discord.SystemChannelFlags.join_notification_replies:1 of
msgid ""
"Returns ``True`` if the system channel is allowing member join sticker "
"replies."
msgstr ""

#: ../../api.rst:4941
msgid "MessageFlags"
msgstr ""

#: discord.flags.MessageFlags:1 of
msgid "Wraps up a Discord Message flag value."
msgstr ""

#: discord.flags.MessageFlags:3 of
msgid "See :class:`SystemChannelFlags`."
msgstr ""

#: ../../docstring discord.MessageFlags.crossposted:1 of
msgid "Returns ``True`` if the message is the original crossposted message."
msgstr ""

#: ../../docstring discord.MessageFlags.is_crossposted:1 of
msgid "Returns ``True`` if the message was crossposted from another channel."
msgstr ""

#: ../../docstring discord.MessageFlags.suppress_embeds:1 of
msgid "Returns ``True`` if the message's embeds have been suppressed."
msgstr ""

#: ../../docstring discord.MessageFlags.source_message_deleted:1 of
msgid ""
"Returns ``True`` if the source message for this crosspost has been "
"deleted."
msgstr ""

#: ../../docstring discord.MessageFlags.urgent:1 of
msgid "Returns ``True`` if the source message is an urgent message."
msgstr ""

#: ../../docstring discord.MessageFlags.urgent:3 of
msgid "An urgent message is one sent by Discord Trust and Safety."
msgstr ""

#: ../../docstring discord.MessageFlags.has_thread:1 of
msgid "Returns ``True`` if the source message is associated with a thread."
msgstr ""

#: ../../docstring discord.MessageFlags.ephemeral:1 of
msgid "Returns ``True`` if the source message is ephemeral."
msgstr ""

#: ../../docstring discord.MessageFlags.loading:1 of
msgid "Returns ``True`` if the source message is deferred."
msgstr ""

#: ../../docstring discord.MessageFlags.loading:3 of
msgid "The user sees a 'thinking' state"
msgstr ""

#: ../../docstring
#: discord.MessageFlags.failed_to_mention_some_roles_in_thread:1 of
msgid "Returns ``True`` if some roles are failed to mention in a thread."
msgstr ""

#: ../../api.rst:4949
msgid "PublicUserFlags"
msgstr ""

#: discord.flags.PublicUserFlags:1 of
msgid "Wraps up the Discord User Public flags."
msgstr ""

#: discord.flags.PublicUserFlags:7 of
msgid "Checks if two PublicUserFlags are equal."
msgstr ""

#: discord.flags.PublicUserFlags:10 of
msgid "Checks if two PublicUserFlags are not equal."
msgstr ""

#: ../../docstring discord.PublicUserFlags.staff:1 of
msgid "Returns ``True`` if the user is a Discord Employee."
msgstr ""

#: ../../docstring discord.PublicUserFlags.partner:1 of
msgid "Returns ``True`` if the user is a Discord Partner."
msgstr ""

#: ../../docstring discord.PublicUserFlags.hypesquad:1 of
msgid "Returns ``True`` if the user is a HypeSquad Events member."
msgstr ""

#: ../../docstring discord.PublicUserFlags.bug_hunter:1 of
msgid "Returns ``True`` if the user is a Bug Hunter"
msgstr ""

#: ../../docstring discord.PublicUserFlags.premium_promo_dismissed:1 of
msgid "Returns ``True`` if the user is marked as dismissed Nitro promotion"
msgstr ""

#: ../../docstring discord.PublicUserFlags.hypesquad_bravery:1 of
msgid "Returns ``True`` if the user is a HypeSquad Bravery member."
msgstr ""

#: ../../docstring discord.PublicUserFlags.hypesquad_brilliance:1 of
msgid "Returns ``True`` if the user is a HypeSquad Brilliance member."
msgstr ""

#: ../../docstring discord.PublicUserFlags.hypesquad_balance:1 of
msgid "Returns ``True`` if the user is a HypeSquad Balance member."
msgstr ""

#: ../../docstring discord.PublicUserFlags.early_supporter:1 of
msgid "Returns ``True`` if the user is an Early Supporter."
msgstr ""

#: ../../docstring discord.PublicUserFlags.team_user:1 of
msgid "Returns ``True`` if the user is a Team User."
msgstr ""

#: ../../docstring discord.PublicUserFlags.system:1 of
msgid ""
"Returns ``True`` if the user is a system user (i.e. represents Discord "
"officially)."
msgstr ""

#: ../../docstring discord.PublicUserFlags.bug_hunter_level_2:1 of
msgid "Returns ``True`` if the user is a Bug Hunter Level 2"
msgstr ""

#: ../../docstring discord.PublicUserFlags.verified_bot:1 of
msgid "Returns ``True`` if the user is a Verified Bot."
msgstr ""

#: ../../docstring discord.PublicUserFlags.verified_bot_developer:1 of
msgid "Returns ``True`` if the user is an Early Verified Bot Developer."
msgstr ""

#: ../../docstring discord.PublicUserFlags.early_verified_bot_developer:1 of
msgid "An alias for :attr:`verified_bot_developer`."
msgstr ""

#: ../../docstring discord.PublicUserFlags.discord_certified_moderator:1 of
msgid "Returns ``True`` if the user is a Discord Certified Moderator."
msgstr ""

#: ../../docstring discord.PublicUserFlags.bot_http_interactions:1 of
msgid "Returns ``True`` if the bot has set an interactions endpoint url."
msgstr ""

#: discord.flags.PublicUserFlags.all:1 of
msgid "List[:class:`UserFlags`]: Returns all public flags the user has."
msgstr ""

#: ../../api.rst:4957
msgid "ChannelFlags"
msgstr ""

#: discord.flags.ChannelFlags:1 of
msgid "Wraps up the Discord Channel flags."
msgstr ""

#: discord.flags.ChannelFlags:7 of
msgid "Checks if two ChannelFlags are equal."
msgstr ""

#: discord.flags.ChannelFlags:10 of
msgid "Checks if two ChannelFlags are not equal."
msgstr ""

#: ../../docstring discord.ChannelFlags.pinned:1 of
msgid ""
"Returns ``True`` if the thread is pinned to the top of its parent forum "
"channel."
msgstr ""

#: ../../api.rst:4967
msgid "Bot UI Kit"
msgstr ""

#: ../../api.rst:4969
msgid "The library has helpers to help create component-based UIs."
msgstr ""

#: ../../api.rst:4972
msgid "View"
msgstr ""

#: discord.ui.view.View:1 of
msgid "Represents a UI view."
msgstr ""

#: discord.ui.modal.Modal:3 discord.ui.view.View:3 of
msgid "This object must be inherited to create a UI within Discord."
msgstr ""

#: discord.ui.view.View:7 of
msgid "The initial items attached to this view."
msgstr ""

#: discord.ui.modal.Modal:15 discord.ui.view.View:9 of
msgid ""
"Timeout in seconds from last interaction with the UI before no longer "
"accepting input. If ``None`` then there is no timeout."
msgstr ""

#: discord.ui.view.View:15 of
msgid ""
"Timeout from last interaction with the UI before no longer accepting "
"input. If ``None`` then there is no timeout."
msgstr ""

#: discord.ui.view.View:18 of
msgid "Optional[:class:`float`]"
msgstr ""

#: discord.ui.view.View:22 of
msgid "The list of children attached to this view."
msgstr ""

#: discord.ui.view.View:24 of
msgid "List[:class:`Item`]"
msgstr ""

#: discord.ui.view.View:28 of
msgid ""
"Whether to disable the view when the timeout is reached. Defaults to "
"``False``."
msgstr ""

#: discord.ui.view.View:34 of
msgid ""
"The message that this view is attached to. If ``None`` then the view has "
"not been sent with a message."
msgstr ""

#: discord.ui.view.View.from_message:1 of
msgid "Converts a message's components into a :class:`View`."
msgstr ""

#: discord.ui.view.View.from_message:3 of
msgid ""
"The :attr:`.Message.components` of a message are read-only and separate "
"types from those in the ``discord.ui`` namespace. In order to modify and "
"edit message components they must be converted into a :class:`View` "
"first."
msgstr ""

#: discord.ui.view.View.from_message:8 of
msgid "The message with components to convert into a view."
msgstr ""

#: discord.ui.view.View.from_message:10 of
msgid "The timeout of the converted view."
msgstr ""

#: discord.ui.view.View.from_message:13 of
msgid ""
"The converted view. This always returns a :class:`View` and not one of "
"its subclasses."
msgstr ""

#: discord.ui.view.View.from_message:15 of
msgid ":class:`View`"
msgstr ""

#: discord.ui.view.View.add_item:1 of
msgid "Adds an item to the view."
msgstr ""

#: discord.ui.view.View.add_item:3 of
msgid "The item to add to the view."
msgstr ""

#: discord.ui.view.View.add_item:6 of
msgid "An :class:`Item` was not passed."
msgstr ""

#: discord.ui.view.View.add_item:7 of
msgid ""
"Maximum number of children has been exceeded (25)     or the row the item"
" is trying to be added to is full."
msgstr ""

#: discord.ui.view.View.remove_item:1 of
msgid "Removes an item from the view."
msgstr ""

#: discord.ui.view.View.remove_item:3 of
msgid "The item to remove from the view."
msgstr ""

#: discord.ui.view.View.clear_items:1 of
msgid "Removes all items from the view."
msgstr ""

#: discord.ui.view.View.interaction_check:3 of
msgid ""
"A callback that is called when an interaction happens within the view "
"that checks whether the view should process item callbacks for the "
"interaction."
msgstr ""

#: discord.ui.view.View.interaction_check:6 of
msgid ""
"This is useful to override if, for example, you want to ensure that the "
"interaction author is a given user."
msgstr ""

#: discord.ui.view.View.interaction_check:9 of
msgid "The default implementation of this returns ``True``."
msgstr ""

#: discord.ui.view.View.interaction_check:11 of
msgid "If this returns ``False``, :meth:`on_check_failure` is called."
msgstr ""

#: discord.ui.view.View.interaction_check:15 of
msgid ""
"If an exception occurs within the body then the check is considered a "
"failure and :meth:`on_error` is called."
msgstr ""

#: discord.ui.view.View.interaction_check:18
#: discord.ui.view.View.on_check_failure:5 of
msgid "The interaction that occurred."
msgstr ""

#: discord.ui.view.View.interaction_check:21 of
msgid "Whether the view children's callbacks should be called."
msgstr ""

#: discord.ui.view.View.on_timeout:3 of
msgid ""
"A callback that is called when a view's timeout elapses without being "
"explicitly stopped."
msgstr ""

#: discord.ui.view.View.on_check_failure:1 of
msgid ""
"|coro| A callback that is called when a :meth:`View.interaction_check` "
"returns ``False``. This can be used to send a response when a check "
"failure occurs."
msgstr ""

#: discord.ui.view.View.on_error:3 of
msgid ""
"A callback that is called when an item's callback or "
":meth:`interaction_check` fails with an error."
msgstr ""

#: discord.ui.modal.Modal.on_error:5 discord.ui.view.View.on_error:6 of
msgid "The default implementation prints the traceback to stderr."
msgstr ""

#: discord.ui.modal.Modal.on_error:7 discord.ui.view.View.on_error:8 of
msgid "The exception that was raised."
msgstr ""

#: discord.ui.view.View.on_error:10 of
msgid "The item that failed the dispatch."
msgstr ""

#: discord.ui.modal.Modal.on_error:9 discord.ui.view.View.on_error:12 of
msgid "The interaction that led to the failure."
msgstr ""

#: discord.ui.view.View.stop:1 of
msgid "Stops listening to interaction events from this view."
msgstr ""

#: discord.ui.view.View.stop:3 of
msgid "This operation cannot be undone."
msgstr ""

#: discord.ui.view.View.is_finished:1 of
msgid ":class:`bool`: Whether the view has finished interacting."
msgstr ""

#: discord.ui.view.View.is_dispatching:1 of
msgid ":class:`bool`: Whether the view has been added for dispatching purposes."
msgstr ""

#: discord.ui.view.View.is_persistent:1 of
msgid ":class:`bool`: Whether the view is set up as persistent."
msgstr ""

#: discord.ui.view.View.is_persistent:3 of
msgid ""
"A persistent view has all their components with a set ``custom_id`` and a"
" :attr:`timeout` set to ``None``."
msgstr ""

#: discord.ui.view.View.wait:1 of
msgid "Waits until the view has finished interacting."
msgstr ""

#: discord.ui.view.View.wait:3 of
msgid ""
"A view is considered finished when :meth:`stop` is called, or it times "
"out."
msgstr ""

#: discord.ui.view.View.wait:6 of
msgid ""
"If ``True``, then the view timed out. If ``False`` then the view finished"
" normally."
msgstr ""

#: discord.ui.view.View.disable_all_items:1 of
msgid "Disables all items in the view."
msgstr ""

#: discord.ui.view.View.disable_all_items:3 of
msgid "A list of items in `self.children` to not disable from the view."
msgstr ""

#: discord.ui.view.View.enable_all_items:1 of
msgid "Enables all items in the view."
msgstr ""

#: discord.ui.view.View.enable_all_items:3 of
msgid "A list of items in `self.children` to not enable from the view."
msgstr ""

#: ../../api.rst:4980
msgid "Item"
msgstr ""

#: discord.ui.item.Item:1 of
msgid "Represents the base UI item that all UI components inherit from."
msgstr ""

#: discord.ui.item.Item:3 of
msgid "The current UI items supported are:"
msgstr ""

#: discord.ui.item.Item:5 of
msgid ":class:`discord.ui.Button`"
msgstr ""

#: discord.ui.item.Item:6 of
msgid ":class:`discord.ui.Select`"
msgstr ""

#: discord.ui.Button.view:1 discord.ui.Item.view:1 discord.ui.Select.view:1 of
msgid "The underlying view for this item."
msgstr ""

#: discord.ui.Button.view:3 discord.ui.Item.view:3 discord.ui.Select.view:3 of
msgid "Optional[:class:`View`]"
msgstr ""

#: discord.ui.item.Item.callback:3 of
msgid "The callback associated with this UI item."
msgstr ""

#: discord.ui.item.Item.callback:5 of
msgid "This can be overridden by subclasses."
msgstr ""

#: discord.ui.item.Item.callback:7 of
msgid "The interaction that triggered this UI item."
msgstr ""

#: discord.ui.button.Button:1 of
msgid "Represents a UI button."
msgstr ""

#: discord.ui.button.Button:18 discord.ui.button.button:27 of
msgid ""
"The relative row this button belongs to. A Discord component can only "
"have 5 rows. By default, items are arranged automatically into those 5 "
"rows. If you'd like to control the relative positioning of the row then "
"passing an index is advised. For example, row=1 will show up before "
"row=2. Defaults to ``None``, which is automatic ordering. The row number "
"must be between 0 and 4 (i.e. zero indexed)."
msgstr ""

#: discord.ui.Button.style:3 of
msgid ":class:`discord.ButtonStyle`"
msgstr ""

#: discord.ui.Button.custom_id:1 of
msgid "The ID of the button that gets received during an interaction."
msgstr ""

#: discord.ui.Button.custom_id:3 of
msgid "If this button is for a URL, it does not have a custom ID."
msgstr ""

#: discord.ui.Button.label:1 of
msgid "The label of the button, if available."
msgstr ""

#: discord.ui.Button.emoji:3 of
msgid "Optional[:class:`.PartialEmoji`]"
msgstr ""

#: discord.ui.button.button:1 of
msgid "A decorator that attaches a button to a component."
msgstr ""

#: discord.ui.button.button:3 of
msgid ""
"The function being decorated should have three parameters, ``self`` "
"representing the :class:`discord.ui.View`, the :class:`discord.ui.Button`"
" being pressed and the :class:`discord.Interaction` you receive."
msgstr ""

#: discord.ui.button.button:9 of
msgid ""
"Buttons with a URL cannot be created with this function. Consider "
"creating a :class:`Button` manually instead. This is because buttons with"
" a URL do not have a callback associated with them since Discord does not"
" do any processing with it."
msgstr ""

#: discord.ui.button.button:17 of
msgid ""
"The ID of the button that gets received during an interaction. It is "
"recommended not to set this parameter to prevent conflicts."
msgstr ""

#: discord.ui.button.button:20 of
msgid "The style of the button. Defaults to :attr:`.ButtonStyle.grey`."
msgstr ""

#: discord.ui.button.button:22 of
msgid "Whether the button is disabled or not. Defaults to ``False``."
msgstr ""

#: discord.ui.button.button:24 of
msgid ""
"The emoji of the button. This can be in string form or a "
":class:`.PartialEmoji` or a full :class:`.Emoji`."
msgstr ""

#: ../../api.rst:4999
msgid "Select"
msgstr ""

#: discord.ui.select.Select:1 of
msgid "Represents a UI select menu."
msgstr ""

#: discord.ui.select.Select:3 of
msgid "This is usually represented as a drop down menu."
msgstr ""

#: discord.ui.select.Select:5 of
msgid ""
"In order to get the selected items that the user has chosen, use "
":attr:`Select.values`."
msgstr ""

#: discord.ui.select.Select:9 of
msgid ""
"The ID of the select menu that gets received during an interaction. If "
"not given then one is generated for you."
msgstr ""

#: discord.ui.select.Select:24 discord.ui.select.select:15 of
msgid ""
"The relative row this select menu belongs to. A Discord component can "
"only have 5 rows. By default, items are arranged automatically into those"
" 5 rows. If you'd like to control the relative positioning of the row "
"then passing an index is advised. For example, row=1 will show up before "
"row=2. Defaults to ``None``, which is automatic ordering. The row number "
"must be between 0 and 4 (i.e. zero indexed)."
msgstr ""

#: discord.ui.Select.min_values:1 of
msgid "The minimum number of items that must be chosen for this select menu."
msgstr ""

#: discord.ui.Select.max_values:1 of
msgid "The maximum number of items that must be chosen for this select menu."
msgstr ""

#: discord.ui.Select.options:3 of
msgid "List[:class:`discord.SelectOption`]"
msgstr ""

#: discord.ui.select.Select.add_option:1 of
msgid "Adds an option to the select menu."
msgstr ""

#: discord.ui.select.Select.add_option:3 of
msgid ""
"To append a pre-existing :class:`discord.SelectOption` use the "
":meth:`append_option` method instead."
msgstr ""

#: discord.ui.select.Select.add_option:9 of
msgid ""
"The value of the option. This is not displayed to users. If not given, "
"defaults to the label. Can only be up to 100 characters."
msgstr ""

#: discord.ui.select.Select.add_option:15 of
msgid ""
"The emoji of the option, if available. This can either be a string "
"representing the custom or unicode emoji or an instance of "
":class:`.PartialEmoji` or :class:`.Emoji`."
msgstr ""

#: discord.ui.select.Select.add_option:21
#: discord.ui.select.Select.append_option:6 of
msgid "The number of options exceeds 25."
msgstr ""

#: discord.ui.select.Select.append_option:1 of
msgid "Appends an option to the select menu."
msgstr ""

#: discord.ui.select.Select.append_option:3 of
msgid "The option to append to the select menu."
msgstr ""

#: discord.ui.Select.values:1 of
msgid "A list of values that have been selected by the user."
msgstr ""

#: discord.ui.select.select:1 of
msgid "A decorator that attaches a select menu to a component."
msgstr ""

#: discord.ui.select.select:3 of
msgid ""
"The function being decorated should have three parameters, ``self`` "
"representing the :class:`discord.ui.View`, the :class:`discord.ui.Select`"
" being pressed and the :class:`discord.Interaction` you receive."
msgstr ""

#: discord.ui.select.select:7 of
msgid ""
"In order to get the selected items that the user has chosen within the "
"callback use :attr:`Select.values`."
msgstr ""

#: discord.ui.select.select:12 of
msgid ""
"The ID of the select menu that gets received during an interaction. It is"
" recommended not to set this parameter to prevent conflicts."
msgstr ""

#: discord.ui.select.select:29 of
msgid "Whether the select is disabled or not. Defaults to ``False``."
msgstr ""

#: ../../api.rst:5010
msgid "Modal"
msgstr ""

#: discord.ui.modal.Modal:1 of
msgid "Represents a UI Modal dialog."
msgstr ""

#: discord.ui.modal.Modal:7 of
msgid "The initial InputText fields that are displayed in the modal dialog."
msgstr ""

#: discord.ui.modal.Modal:9 of
msgid "The title of the modal dialog. Must be 45 characters or fewer."
msgstr ""

#: discord.ui.modal.Modal:12 of
msgid ""
"The ID of the modal dialog that gets received during an interaction. Must"
" be 100 characters or fewer."
msgstr ""

#: discord.ui.Modal.title:1 of
msgid "The title of the modal dialog."
msgstr ""

#: discord.ui.Modal.children:1 of
msgid "The child components associated with the modal dialog."
msgstr ""

#: discord.ui.Modal.children:3 of
msgid "List[:class:`InputText`]"
msgstr ""

#: discord.ui.Modal.custom_id:1 of
msgid "The ID of the modal dialog that gets received during an interaction."
msgstr ""

#: discord.ui.modal.Modal.callback:3 of
msgid ""
"The coroutine that is called when the modal dialog is submitted. Should "
"be overridden to handle the values submitted by the user."
msgstr ""

#: discord.ui.modal.Modal.callback:6 of
msgid "The interaction that submitted the modal dialog."
msgstr ""

#: discord.ui.modal.Modal.add_item:1 of
msgid "Adds an InputText component to the modal dialog."
msgstr ""

#: discord.ui.modal.Modal.add_item:3 of
msgid "The item to add to the modal dialog"
msgstr ""

#: discord.ui.modal.Modal.remove_item:1 of
msgid "Removes an InputText component from the modal dialog."
msgstr ""

#: discord.ui.modal.Modal.remove_item:3 of
msgid "The item to remove from the modal dialog."
msgstr ""

#: discord.ui.modal.Modal.stop:1 of
msgid "Stops listening to interaction events from the modal dialog."
msgstr ""

#: discord.ui.modal.Modal.wait:1 of
msgid "Waits for the modal dialog to be submitted."
msgstr ""

#: discord.ui.modal.Modal.on_error:3 of
msgid "A callback that is called when the modal's callback fails with an error."
msgstr ""

#: discord.ui.modal.Modal.on_timeout:3 of
msgid ""
"A callback that is called when a modal's timeout elapses without being "
"explicitly stopped."
msgstr ""

#: ../../api.rst:5019
msgid "InputText"
msgstr ""

#: discord.ui.input_text.InputText:1 of
msgid "Represents a UI text input field."
msgstr ""

#: discord.ui.InputText.style:1 discord.ui.input_text.InputText:5 of
msgid "The style of the input text field."
msgstr ""

#: discord.ui.InputText.custom_id:1 discord.ui.input_text.InputText:7 of
msgid "The ID of the input text field that gets received during an interaction."
msgstr ""

#: discord.ui.input_text.InputText:9 of
msgid "The label for the input text field. Must be 45 characters or fewer."
msgstr ""

#: discord.ui.input_text.InputText:12 of
msgid ""
"The placeholder text that is shown if nothing is selected, if any. Must "
"be 100 characters or fewer."
msgstr ""

#: discord.ui.input_text.InputText:15 of
msgid ""
"The minimum number of characters that must be entered. Defaults to 0 and "
"must be less than 4000."
msgstr ""

#: discord.ui.input_text.InputText:18 of
msgid ""
"The maximum number of characters that can be entered. Must be between 1 "
"and 4000."
msgstr ""

#: discord.ui.InputText.required:1 discord.ui.input_text.InputText:21 of
msgid "Whether the input text field is required or not. Defaults to `True`."
msgstr ""

#: discord.ui.input_text.InputText:23 of
msgid ""
"Pre-fills the input text field with this value. Must be 4000 characters "
"or fewer."
msgstr ""

#: discord.ui.input_text.InputText:26 of
msgid ""
"The relative row this input text field belongs to. A modal dialog can "
"only have 5 rows. By default, items are arranged automatically into those"
" 5 rows. If you'd like to control the relative positioning of the row "
"then passing an index is advised. For example, row=1 will show up before "
"row=2. Defaults to ``None``, which is automatic ordering. The row number "
"must be between 0 and 4 (i.e. zero indexed)."
msgstr ""

#: discord.ui.InputText.style:3 of
msgid ":class:`~discord.InputTextStyle`"
msgstr ""

#: discord.ui.InputText.label:1 of
msgid "The label of the input text field."
msgstr ""

#: discord.ui.InputText.placeholder:1 of
msgid "The placeholder text that is shown before anything is entered, if any."
msgstr ""

#: discord.ui.InputText.min_length:1 of
msgid "The minimum number of characters that must be entered. Defaults to `0`."
msgstr ""

#: discord.ui.InputText.max_length:1 of
msgid "The maximum number of characters that can be entered."
msgstr ""

#: discord.ui.InputText.value:1 of
msgid "The value entered in the text field."
msgstr ""

#: ../../api.rst:5028
msgid "Sink Core"
msgstr ""

#: discord.sinks.core.Filters:1 of
msgid "Filters for :class:`~.Sink`"
msgstr ""

#: discord.sinks.core.Filters:5 of
msgid "Container of all Filters."
msgstr ""

#: discord.sinks.core.Sink:1 of
msgid "A sink \"stores\" recorded audio data."
msgstr ""

#: discord.sinks.core.Sink:3 of
msgid "Can be subclassed for extra customizablilty."
msgstr ""

#: discord.sinks.core.Sink:6 of
msgid ""
"It is recommended you use the officially provided sink classes, such as "
":class:`~discord.sinks.WaveSink`."
msgstr ""

#: discord.sinks.core.Sink:10 of
msgid "just replace the following like so: ::"
msgstr ""

#: discord.sinks.core.Sink:20 of
msgid "An invalid encoding type was specified."
msgstr ""

#: discord.sinks.core.Sink:21 discord.sinks.m4a.M4ASink.format_audio:3
#: discord.sinks.mka.MKASink.format_audio:3
#: discord.sinks.mkv.MKVSink.format_audio:3
#: discord.sinks.mp3.MP3Sink.format_audio:3
#: discord.sinks.mp4.MP4Sink.format_audio:3
#: discord.sinks.ogg.OGGSink.format_audio:3
#: discord.sinks.wave.WaveSink.format_audio:3 of
msgid "Audio may only be formatted after recording is finished."
msgstr ""

#: discord.sinks.core.Sink.get_all_audio:1 of
msgid "Gets all audio files."
msgstr ""

#: discord.sinks.core.Sink.get_user_audio:1 of
msgid "Gets the audio file(s) of one specific user."
msgstr ""

#: discord.sinks.core.AudioData:1 of
msgid ""
"Handles data that's been completely decrypted and decoded and is ready to"
" be saved to file."
msgstr ""

#: discord.sinks.core.AudioData.write:1 of
msgid "Writes audio data."
msgstr ""

#: discord.sinks.core.AudioData.cleanup:3 discord.sinks.core.AudioData.write:3
#: of
msgid "The AudioData is already finished writing."
msgstr ""

#: discord.sinks.core.AudioData.cleanup:1 of
msgid "Finishes and cleans up the audio data."
msgstr ""

#: discord.sinks.core.AudioData.on_format:1 of
msgid "Called when audio data is formatted."
msgstr ""

#: discord.sinks.core.AudioData.on_format:3 of
msgid "The AudioData is still writing."
msgstr ""

#: discord.sinks.core.RawData:1 of
msgid ""
"Handles raw data from Discord so that it can be decrypted and decoded to "
"be used."
msgstr ""

#: ../../api.rst:5044
msgid "Sinks"
msgstr ""

#: discord.sinks.wave.WaveSink:1 of
msgid "A special sink for .wav(wave) files."
msgstr ""

#: discord.sinks.m4a.M4ASink.format_audio:1
#: discord.sinks.mka.MKASink.format_audio:1
#: discord.sinks.mkv.MKVSink.format_audio:1
#: discord.sinks.mp3.MP3Sink.format_audio:1
#: discord.sinks.mp4.MP4Sink.format_audio:1
#: discord.sinks.ogg.OGGSink.format_audio:1
#: discord.sinks.wave.WaveSink.format_audio:1 of
msgid "Formats the recorded audio."
msgstr ""

#: discord.sinks.m4a.M4ASink.format_audio:4
#: discord.sinks.mka.MKASink.format_audio:4
#: discord.sinks.mkv.MKVSink.format_audio:4
#: discord.sinks.mp3.MP3Sink.format_audio:4
#: discord.sinks.mp4.MP4Sink.format_audio:4
#: discord.sinks.ogg.OGGSink.format_audio:4
#: discord.sinks.wave.WaveSink.format_audio:4 of
msgid "Formatting the audio failed."
msgstr ""

#: discord.sinks.mp3.MP3Sink:1 of
msgid "A special sink for .mp3 files."
msgstr ""

#: discord.sinks.mp4.MP4Sink:1 of
msgid "A special sink for .mp4 files."
msgstr ""

#: discord.sinks.m4a.M4ASink:1 of
msgid "A special sink for .m4a files."
msgstr ""

#: discord.sinks.mkv.MKVSink:1 of
msgid "A special sink for .mkv files."
msgstr ""

#: discord.sinks.mka.MKASink:1 of
msgid "A special sink for .mka files."
msgstr ""

#: discord.sinks.ogg.OGGSink:1 of
msgid "A special sink for .ogg files."
msgstr ""

#: ../../api.rst:5069
msgid "Sink Error Reference"
msgstr ""

#: discord.sinks.errors.SinkException:1 of
msgid "Raised when a Sink error occurs."
msgstr ""

#: discord.sinks.errors.RecordingException:1 of
msgid ""
"Exception that's thrown when there is an error while trying to record "
"audio from a voice channel."
msgstr ""

#: discord.sinks.errors.WaveSinkError:1 of
msgid "Exception thrown when an exception occurs with :class:`WaveSink`"
msgstr ""

#: discord.sinks.errors.MP3SinkError:1 of
msgid "Exception thrown when an exception occurs with :class:`MP3Sink`"
msgstr ""

#: discord.sinks.errors.MP4SinkError:1 of
msgid "Exception thrown when an exception occurs with :class:`MP4Sink`"
msgstr ""

#: discord.sinks.errors.M4ASinkError:1 of
msgid "Exception thrown when an exception occurs with :class:`M4ASink`"
msgstr ""

#: discord.sinks.errors.MKVSinkError:1 of
msgid "Exception thrown when an exception occurs with :class:`MKVSink`"
msgstr ""

#: discord.sinks.errors.MKASinkError:1 of
msgid "Exception thrown when an exception occurs with :class:`MKASink`"
msgstr ""

#: discord.sinks.errors.OGGSinkError:1 of
msgid "Exception thrown when an exception occurs with :class:`OGGSink`"
msgstr ""

#: ../../api.rst:5090
msgid "Sink Exception Hierarchy"
msgstr ""

#: ../../api.rst:5102 ../../api.rst:5198
msgid ":exc:`DiscordException`"
msgstr ""

#: ../../api.rst:5102
msgid ":exc:`sinks.SinkException`"
msgstr ""

#: ../../api.rst:5096
msgid ":exc:`sinks.RecordingException`"
msgstr ""

#: ../../api.rst:5097
msgid ":exc:`sinks.WaveSinkError`"
msgstr ""

#: ../../api.rst:5098
msgid ":exc:`sinks.MP3SinkError`"
msgstr ""

#: ../../api.rst:5099
msgid ":exc:`sinks.MP4SinkError`"
msgstr ""

#: ../../api.rst:5100
msgid ":exc:`sinks.M4ASinkError`"
msgstr ""

#: ../../api.rst:5101
msgid ":exc:`sinks.MKVSinkError`"
msgstr ""

#: ../../api.rst:5102
msgid ":exc:`sinks.MKASinkError`"
msgstr ""

#: ../../api.rst:5103
msgid ":exc:`sinks.OGGSinkError`"
msgstr ""

#: ../../api.rst:5107
msgid "Exceptions"
msgstr ""

#: ../../api.rst:5109
msgid "The following exceptions are thrown by the library."
msgstr ""

#: discord.errors.DiscordException:1 of
msgid "Base exception class for pycord"
msgstr ""

#: discord.errors.DiscordException:3 of
msgid ""
"Ideally speaking, this could be caught to handle any exceptions raised "
"from this library."
msgstr ""

#: discord.errors.ClientException:1 of
msgid "Exception that's raised when an operation in the :class:`Client` fails."
msgstr ""

#: discord.errors.ClientException:3 of
msgid "These are usually for exceptions that happened due to user input."
msgstr ""

#: discord.errors.LoginFailure:1 of
msgid ""
"Exception that's raised when the :meth:`Client.login` function fails to "
"log you in from improper credentials or some other misc. failure."
msgstr ""

#: discord.errors.NoMoreItems:1 of
msgid ""
"Exception that is raised when an async iteration operation has no more "
"items."
msgstr ""

#: discord.errors.HTTPException:1 of
msgid "Exception that's raised when an HTTP request operation fails."
msgstr ""

#: discord.errors.HTTPException:5 of
msgid ""
"The response of the failed HTTP request. This is an instance of "
":class:`aiohttp.ClientResponse`. In some cases this could also be a "
":class:`requests.Response`."
msgstr ""

#: discord.errors.HTTPException:9 of
msgid ":class:`aiohttp.ClientResponse`"
msgstr ""

#: discord.errors.HTTPException:13 of
msgid "The text of the error. Could be an empty string."
msgstr ""

#: discord.errors.HTTPException:19 of
msgid "The status code of the HTTP request."
msgstr ""

#: discord.errors.HTTPException:25 of
msgid "The Discord specific error code for the failure."
msgstr ""

#: discord.errors.Forbidden:1 of
msgid "Exception that's raised for when status code 403 occurs."
msgstr ""

#: discord.errors.Forbidden:3 discord.errors.NotFound:3 of
msgid "Subclass of :exc:`HTTPException`"
msgstr ""

#: discord.errors.NotFound:1 of
msgid "Exception that's raised for when status code 404 occurs."
msgstr ""

#: discord.errors.DiscordServerError:1 of
msgid "Exception that's raised for when a 500 range status code occurs."
msgstr ""

#: discord.errors.DiscordServerError:3 of
msgid "Subclass of :exc:`HTTPException`."
msgstr ""

#: discord.errors.InvalidData:1 of
msgid ""
"Exception that's raised when the library encounters unknown or invalid "
"data from Discord."
msgstr ""

#: discord.errors.InvalidArgument:1 of
msgid ""
"Exception that's raised when an argument to a function is invalid some "
"way (e.g. wrong value or wrong type)."
msgstr ""

#: discord.errors.InvalidArgument:4 of
msgid ""
"This could be considered the parallel of ``ValueError`` and ``TypeError``"
" except inherited from :exc:`ClientException` and thus "
":exc:`DiscordException`."
msgstr ""

#: discord.errors.GatewayNotFound:1 of
msgid ""
"An exception that is raised when the gateway for Discord could not be "
"found"
msgstr ""

#: discord.errors.ConnectionClosed:1 of
msgid ""
"Exception that's raised when the gateway connection is closed for reasons"
" that could not be handled internally."
msgstr ""

#: discord.errors.ConnectionClosed:6 of
msgid "The close code of the websocket."
msgstr ""

#: discord.errors.ConnectionClosed:12 of
msgid "The reason provided for the closure."
msgstr ""

#: discord.errors.ConnectionClosed:18
#: discord.errors.PrivilegedIntentsRequired:13 of
msgid "The shard ID that got closed if applicable."
msgstr ""

#: discord.errors.PrivilegedIntentsRequired:1 of
msgid ""
"Exception that's raised when the gateway is requesting privileged "
"intents, but they're not ticked in the developer page yet."
msgstr ""

#: discord.errors.PrivilegedIntentsRequired:4 of
msgid ""
"Go to https://discord.com/developers/applications/ and enable the intents"
" that are required. Currently, these are as follows:"
msgstr ""

#: discord.errors.PrivilegedIntentsRequired:7 of
msgid ":attr:`Intents.members`"
msgstr ""

#: discord.errors.PrivilegedIntentsRequired:8 of
msgid ":attr:`Intents.presences`"
msgstr ""

#: discord.errors.PrivilegedIntentsRequired:9 of
msgid ":attr:`Intents.message_content`"
msgstr ""

#: discord.errors.InteractionResponded:1 of
msgid ""
"Exception that's raised when sending another interaction response using "
":class:`InteractionResponse` when one has already been done before."
msgstr ""

#: discord.errors.InteractionResponded:4 of
msgid "An interaction can only respond once."
msgstr ""

#: discord.errors.InteractionResponded:10 of
msgid "The interaction that's already been responded to."
msgstr ""

#: discord.errors.InteractionResponded:12 of
msgid ":class:`Interaction`"
msgstr ""

#: discord.opus.OpusError:1 of
msgid "An exception that is thrown for libopus related errors."
msgstr ""

#: discord.opus.OpusError:5 of
msgid "The error code returned."
msgstr ""

#: discord.opus.OpusNotLoaded:1 of
msgid "An exception that is thrown for when libopus is not loaded."
msgstr ""

#: discord.errors.ApplicationCommandError:1 of
msgid "The base exception type for all application command related errors."
msgstr ""

#: discord.errors.ApplicationCommandError:3 of
msgid "This inherits from :exc:`DiscordException`."
msgstr ""

#: discord.errors.ApplicationCommandError:5 of
msgid ""
"This exception and exceptions inherited from it are handled in a special "
"way as they are caught and passed into a special event from "
":class:`.Bot`\\, :func:`.on_command_error`."
msgstr ""

#: discord.errors.CheckFailure:1 of
msgid ""
"Exception raised when the predicates in :attr:`.Command.checks` have "
"failed."
msgstr ""

#: discord.errors.ApplicationCommandInvokeError:3 discord.errors.CheckFailure:3
#: of
msgid "This inherits from :exc:`ApplicationCommandError`"
msgstr ""

#: discord.errors.ApplicationCommandInvokeError:1 of
msgid "Exception raised when the command being invoked raised an exception."
msgstr ""

#: discord.errors.ApplicationCommandInvokeError:7
#: discord.errors.ExtensionFailed:13 of
msgid ""
"The original exception that was raised. You can also get this via the "
"``__cause__`` attribute."
msgstr ""

#: ../../api.rst:5198 discord.errors.ApplicationCommandInvokeError:10
#: discord.errors.ExtensionFailed:16 of
msgid ":exc:`Exception`"
msgstr ""

#: discord.errors.ExtensionError:1 of
msgid "Base exception for extension related errors."
msgstr ""

#: discord.errors.ExtensionError:3 of
msgid "This inherits from :exc:`~discord.DiscordException`."
msgstr ""

#: discord.errors.ExtensionError:7 of
msgid "The extension that had an error."
msgstr ""

#: discord.errors.ExtensionAlreadyLoaded:1 of
msgid "An exception raised when an extension has already been loaded."
msgstr ""

#: discord.errors.ExtensionAlreadyLoaded:3 discord.errors.ExtensionFailed:3
#: discord.errors.ExtensionNotFound:3 discord.errors.ExtensionNotLoaded:3
#: discord.errors.NoEntryPointError:3 of
msgid "This inherits from :exc:`ExtensionError`"
msgstr ""

#: discord.errors.ExtensionNotLoaded:1 of
msgid "An exception raised when an extension was not loaded."
msgstr ""

#: discord.errors.NoEntryPointError:1 of
msgid ""
"An exception raised when an extension does not have a ``setup`` entry "
"point function."
msgstr ""

#: discord.errors.ExtensionFailed:1 of
msgid ""
"An exception raised when an extension failed to load during execution of "
"the module or ``setup`` entry point."
msgstr ""

#: discord.errors.ExtensionFailed:7 discord.errors.ExtensionNotFound:10 of
msgid "The extension that had the error."
msgstr ""

#: discord.errors.ExtensionNotFound:1 of
msgid "An exception raised when an extension is not found."
msgstr ""

#: discord.errors.ExtensionNotFound:5 of
msgid "Made the ``original`` attribute always None."
msgstr ""

#: ../../api.rst:5172
msgid "Exception Hierarchy"
msgstr ""

#: ../../api.rst:5183
msgid ":exc:`ClientException`"
msgstr ""

#: ../../api.rst:5179
msgid ":exc:`InvalidData`"
msgstr ""

#: ../../api.rst:5180
msgid ":exc:`InvalidArgument`"
msgstr ""

#: ../../api.rst:5181
msgid ":exc:`LoginFailure`"
msgstr ""

#: ../../api.rst:5182
msgid ":exc:`ConnectionClosed`"
msgstr ""

#: ../../api.rst:5183
msgid ":exc:`PrivilegedIntentsRequired`"
msgstr ""

#: ../../api.rst:5184
msgid ":exc:`InteractionResponded`"
msgstr ""

#: ../../api.rst:5185
msgid ":exc:`NoMoreItems`"
msgstr ""

#: ../../api.rst:5186
msgid ":exc:`GatewayNotFound`"
msgstr ""

#: ../../api.rst:5189
msgid ":exc:`HTTPException`"
msgstr ""

#: ../../api.rst:5188
msgid ":exc:`Forbidden`"
msgstr ""

#: ../../api.rst:5189
msgid ":exc:`NotFound`"
msgstr ""

#: ../../api.rst:5190
msgid ":exc:`DiscordServerError`"
msgstr ""

#: ../../api.rst:5192
msgid ":exc:`ApplicationCommandError`"
msgstr ""

#: ../../api.rst:5192
msgid ":exc:`CheckFailure`"
msgstr ""

#: ../../api.rst:5193
msgid ":exc:`ApplicationCommandInvokeError`"
msgstr ""

#: ../../api.rst:5198
msgid ":exc:`ExtensionError`"
msgstr ""

#: ../../api.rst:5195
msgid ":exc:`ExtensionAlreadyLoaded`"
msgstr ""

#: ../../api.rst:5196
msgid ":exc:`ExtensionNotLoaded`"
msgstr ""

#: ../../api.rst:5197
msgid ":exc:`NoEntryPointError`"
msgstr ""

#: ../../api.rst:5198
msgid ":exc:`ExtensionFailed`"
msgstr ""

#: ../../api.rst:5199
msgid ":exc:`ExtensionNotFound`"
msgstr ""
